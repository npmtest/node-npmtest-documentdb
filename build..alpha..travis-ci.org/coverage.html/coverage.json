{"/home/travis/build/npmtest/node-npmtest-documentdb/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_documentdb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/lib.npmtest_documentdb.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/lib.npmtest_documentdb.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_documentdb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_documentdb = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_documentdb = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-documentdb && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_documentdb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_documentdb","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_documentdb.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_documentdb.rollup.js'] =","            local.assetsDict['/assets.npmtest_documentdb.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_documentdb.__dirname + '/lib.npmtest_documentdb.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}}},"branchMap":{},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","module.exports = require('./lib/');"],"l":{"24":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{"1":[1,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":28,"column":31}},"2":{"start":{"line":30,"column":0},"end":{"line":39,"column":1}},"3":{"start":{"line":31,"column":4},"end":{"line":31,"column":51}},"4":{"start":{"line":32,"column":4},"end":{"line":32,"column":47}},"5":{"start":{"line":33,"column":4},"end":{"line":33,"column":31}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":41}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":47}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":32}},"9":{"start":{"line":37,"column":4},"end":{"line":37,"column":66}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":63}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":0},"end":{"line":30,"column":0}},{"start":{"line":30,"column":0},"end":{"line":30,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Client = require(\"./documentclient\")","  , Hash = require(\"./hash/hashPartitionResolver\")","  , Range = require(\"./range\");","","if (typeof exports !== \"undefined\") {","    exports.DocumentClient = Client.DocumentClient;","    exports.DocumentBase = Client.DocumentBase;","    exports.Base = Client.Base;","    exports.Constants = Client.Constants;","    exports.RetryOptions = Client.RetryOptions;","    exports.Range = Range.Range;","    exports.RangePartitionResolver = Range.RangePartitionResolver;","    exports.HashPartitionResolver = Hash.HashPartitionResolver;","}"],"l":{"26":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/documentclient.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/documentclient.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":1,"871":1,"872":1,"873":1,"874":1,"875":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0,0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0},"fnMap":{"1":{"name":"DocumentClient","line":48,"loc":{"start":{"line":48,"column":4},"end":{"line":48,"column":85}}},"2":{"name":"(anonymous_2)","line":92,"loc":{"start":{"line":92,"column":26},"end":{"line":92,"column":46}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":57},"end":{"line":93,"column":82}}},"4":{"name":"(anonymous_4)","line":103,"loc":{"start":{"line":103,"column":25},"end":{"line":103,"column":45}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":56},"end":{"line":104,"column":80}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":122,"column":24},"end":{"line":122,"column":59}}},"7":{"name":"(anonymous_7)","line":155,"loc":{"start":{"line":155,"column":26},"end":{"line":155,"column":75}}},"8":{"name":"(anonymous_8)","line":189,"loc":{"start":{"line":189,"column":24},"end":{"line":189,"column":88}}},"9":{"name":"(anonymous_9)","line":217,"loc":{"start":{"line":217,"column":26},"end":{"line":217,"column":75}}},"10":{"name":"(anonymous_10)","line":245,"loc":{"start":{"line":245,"column":20},"end":{"line":245,"column":69}}},"11":{"name":"(anonymous_11)","line":276,"loc":{"start":{"line":276,"column":26},"end":{"line":276,"column":71}}},"12":{"name":"(anonymous_12)","line":311,"loc":{"start":{"line":311,"column":23},"end":{"line":311,"column":77}}},"13":{"name":"(anonymous_13)","line":351,"loc":{"start":{"line":351,"column":35},"end":{"line":351,"column":85}}},"14":{"name":"(anonymous_14)","line":391,"loc":{"start":{"line":391,"column":31},"end":{"line":391,"column":83}}},"15":{"name":"(anonymous_15)","line":424,"loc":{"start":{"line":424,"column":40},"end":{"line":424,"column":99}}},"16":{"name":"(anonymous_16)","line":456,"loc":{"start":{"line":456,"column":22},"end":{"line":456,"column":65}}},"17":{"name":"(anonymous_17)","line":476,"loc":{"start":{"line":476,"column":24},"end":{"line":476,"column":69}}},"18":{"name":"(anonymous_18)","line":486,"loc":{"start":{"line":486,"column":61},"end":{"line":486,"column":97}}},"19":{"name":"(anonymous_19)","line":501,"loc":{"start":{"line":501,"column":22},"end":{"line":501,"column":65}}},"20":{"name":"(anonymous_20)","line":521,"loc":{"start":{"line":521,"column":24},"end":{"line":521,"column":69}}},"21":{"name":"(anonymous_21)","line":541,"loc":{"start":{"line":541,"column":18},"end":{"line":541,"column":57}}},"22":{"name":"(anonymous_22)","line":561,"loc":{"start":{"line":561,"column":24},"end":{"line":561,"column":69}}},"23":{"name":"(anonymous_23)","line":581,"loc":{"start":{"line":581,"column":21},"end":{"line":581,"column":63}}},"24":{"name":"(anonymous_24)","line":603,"loc":{"start":{"line":603,"column":33},"end":{"line":603,"column":71}}},"25":{"name":"(anonymous_25)","line":623,"loc":{"start":{"line":623,"column":29},"end":{"line":623,"column":69}}},"26":{"name":"(anonymous_26)","line":643,"loc":{"start":{"line":643,"column":22},"end":{"line":643,"column":65}}},"27":{"name":"(anonymous_27)","line":661,"loc":{"start":{"line":661,"column":23},"end":{"line":661,"column":42}}},"28":{"name":"(anonymous_28)","line":673,"loc":{"start":{"line":673,"column":25},"end":{"line":673,"column":58}}},"29":{"name":"(anonymous_29)","line":685,"loc":{"start":{"line":685,"column":23},"end":{"line":685,"column":58}}},"30":{"name":"(anonymous_30)","line":698,"loc":{"start":{"line":698,"column":32},"end":{"line":698,"column":67}}},"31":{"name":"(anonymous_31)","line":710,"loc":{"start":{"line":710,"column":25},"end":{"line":710,"column":58}}},"32":{"name":"(anonymous_32)","line":722,"loc":{"start":{"line":722,"column":19},"end":{"line":722,"column":52}}},"33":{"name":"(anonymous_33)","line":734,"loc":{"start":{"line":734,"column":25},"end":{"line":734,"column":54}}},"34":{"name":"(anonymous_34)","line":746,"loc":{"start":{"line":746,"column":22},"end":{"line":746,"column":57}}},"35":{"name":"(anonymous_35)","line":758,"loc":{"start":{"line":758,"column":34},"end":{"line":758,"column":69}}},"36":{"name":"(anonymous_36)","line":770,"loc":{"start":{"line":770,"column":30},"end":{"line":770,"column":65}}},"37":{"name":"(anonymous_37)","line":782,"loc":{"start":{"line":782,"column":23},"end":{"line":782,"column":58}}},"38":{"name":"(anonymous_38)","line":793,"loc":{"start":{"line":793,"column":24},"end":{"line":793,"column":50}}},"39":{"name":"(anonymous_39)","line":795,"loc":{"start":{"line":795,"column":59},"end":{"line":795,"column":88}}},"40":{"name":"(anonymous_40)","line":801,"loc":{"start":{"line":801,"column":24},"end":{"line":801,"column":42}}},"41":{"name":"(anonymous_41)","line":802,"loc":{"start":{"line":802,"column":24},"end":{"line":802,"column":48}}},"42":{"name":"(anonymous_42)","line":818,"loc":{"start":{"line":818,"column":26},"end":{"line":818,"column":66}}},"43":{"name":"(anonymous_43)","line":825,"loc":{"start":{"line":825,"column":59},"end":{"line":825,"column":88}}},"44":{"name":"(anonymous_44)","line":831,"loc":{"start":{"line":831,"column":20},"end":{"line":831,"column":38}}},"45":{"name":"(anonymous_45)","line":832,"loc":{"start":{"line":832,"column":20},"end":{"line":832,"column":44}}},"46":{"name":"(anonymous_46)","line":849,"loc":{"start":{"line":849,"column":24},"end":{"line":849,"column":79}}},"47":{"name":"(anonymous_47)","line":871,"loc":{"start":{"line":871,"column":33},"end":{"line":871,"column":75}}},"48":{"name":"(anonymous_48)","line":878,"loc":{"start":{"line":878,"column":59},"end":{"line":878,"column":88}}},"49":{"name":"(anonymous_49)","line":884,"loc":{"start":{"line":884,"column":20},"end":{"line":884,"column":38}}},"50":{"name":"(anonymous_50)","line":885,"loc":{"start":{"line":885,"column":20},"end":{"line":885,"column":44}}},"51":{"name":"(anonymous_51)","line":902,"loc":{"start":{"line":902,"column":26},"end":{"line":902,"column":66}}},"52":{"name":"(anonymous_52)","line":909,"loc":{"start":{"line":909,"column":59},"end":{"line":909,"column":88}}},"53":{"name":"(anonymous_53)","line":915,"loc":{"start":{"line":915,"column":24},"end":{"line":915,"column":42}}},"54":{"name":"(anonymous_54)","line":916,"loc":{"start":{"line":916,"column":24},"end":{"line":916,"column":48}}},"55":{"name":"(anonymous_55)","line":932,"loc":{"start":{"line":932,"column":20},"end":{"line":932,"column":60}}},"56":{"name":"(anonymous_56)","line":939,"loc":{"start":{"line":939,"column":59},"end":{"line":939,"column":88}}},"57":{"name":"(anonymous_57)","line":945,"loc":{"start":{"line":945,"column":20},"end":{"line":945,"column":38}}},"58":{"name":"(anonymous_58)","line":946,"loc":{"start":{"line":946,"column":20},"end":{"line":946,"column":44}}},"59":{"name":"(anonymous_59)","line":962,"loc":{"start":{"line":962,"column":26},"end":{"line":962,"column":62}}},"60":{"name":"(anonymous_60)","line":969,"loc":{"start":{"line":969,"column":59},"end":{"line":969,"column":88}}},"61":{"name":"(anonymous_61)","line":975,"loc":{"start":{"line":975,"column":20},"end":{"line":975,"column":38}}},"62":{"name":"(anonymous_62)","line":976,"loc":{"start":{"line":976,"column":20},"end":{"line":976,"column":44}}},"63":{"name":"(anonymous_63)","line":992,"loc":{"start":{"line":992,"column":23},"end":{"line":992,"column":65}}},"64":{"name":"(anonymous_64)","line":999,"loc":{"start":{"line":999,"column":59},"end":{"line":999,"column":88}}},"65":{"name":"(anonymous_65)","line":1005,"loc":{"start":{"line":1005,"column":20},"end":{"line":1005,"column":38}}},"66":{"name":"(anonymous_66)","line":1006,"loc":{"start":{"line":1006,"column":20},"end":{"line":1006,"column":44}}},"67":{"name":"(anonymous_67)","line":1022,"loc":{"start":{"line":1022,"column":35},"end":{"line":1022,"column":77}}},"68":{"name":"(anonymous_68)","line":1029,"loc":{"start":{"line":1029,"column":59},"end":{"line":1029,"column":88}}},"69":{"name":"(anonymous_69)","line":1035,"loc":{"start":{"line":1035,"column":20},"end":{"line":1035,"column":38}}},"70":{"name":"(anonymous_70)","line":1036,"loc":{"start":{"line":1036,"column":20},"end":{"line":1036,"column":44}}},"71":{"name":"(anonymous_71)","line":1052,"loc":{"start":{"line":1052,"column":31},"end":{"line":1052,"column":73}}},"72":{"name":"(anonymous_72)","line":1059,"loc":{"start":{"line":1059,"column":59},"end":{"line":1059,"column":88}}},"73":{"name":"(anonymous_73)","line":1065,"loc":{"start":{"line":1065,"column":20},"end":{"line":1065,"column":38}}},"74":{"name":"(anonymous_74)","line":1066,"loc":{"start":{"line":1066,"column":20},"end":{"line":1066,"column":44}}},"75":{"name":"(anonymous_75)","line":1082,"loc":{"start":{"line":1082,"column":24},"end":{"line":1082,"column":66}}},"76":{"name":"(anonymous_76)","line":1089,"loc":{"start":{"line":1089,"column":59},"end":{"line":1089,"column":88}}},"77":{"name":"(anonymous_77)","line":1095,"loc":{"start":{"line":1095,"column":20},"end":{"line":1095,"column":38}}},"78":{"name":"(anonymous_78)","line":1096,"loc":{"start":{"line":1096,"column":20},"end":{"line":1096,"column":44}}},"79":{"name":"(anonymous_79)","line":1111,"loc":{"start":{"line":1111,"column":24},"end":{"line":1111,"column":67}}},"80":{"name":"(anonymous_80)","line":1130,"loc":{"start":{"line":1130,"column":26},"end":{"line":1130,"column":71}}},"81":{"name":"(anonymous_81)","line":1150,"loc":{"start":{"line":1150,"column":24},"end":{"line":1150,"column":67}}},"82":{"name":"(anonymous_82)","line":1170,"loc":{"start":{"line":1170,"column":26},"end":{"line":1170,"column":71}}},"83":{"name":"(anonymous_83)","line":1190,"loc":{"start":{"line":1190,"column":20},"end":{"line":1190,"column":59}}},"84":{"name":"(anonymous_84)","line":1210,"loc":{"start":{"line":1210,"column":26},"end":{"line":1210,"column":71}}},"85":{"name":"(anonymous_85)","line":1230,"loc":{"start":{"line":1230,"column":23},"end":{"line":1230,"column":65}}},"86":{"name":"(anonymous_86)","line":1250,"loc":{"start":{"line":1250,"column":35},"end":{"line":1250,"column":73}}},"87":{"name":"(anonymous_87)","line":1270,"loc":{"start":{"line":1270,"column":31},"end":{"line":1270,"column":71}}},"88":{"name":"(anonymous_88)","line":1290,"loc":{"start":{"line":1290,"column":24},"end":{"line":1290,"column":67}}},"89":{"name":"(anonymous_89)","line":1311,"loc":{"start":{"line":1311,"column":27},"end":{"line":1311,"column":84}}},"90":{"name":"(anonymous_90)","line":1338,"loc":{"start":{"line":1338,"column":25},"end":{"line":1338,"column":81}}},"91":{"name":"(anonymous_91)","line":1345,"loc":{"start":{"line":1345,"column":23},"end":{"line":1345,"column":35}}},"92":{"name":"(anonymous_92)","line":1360,"loc":{"start":{"line":1360,"column":85},"end":{"line":1360,"column":143}}},"93":{"name":"(anonymous_93)","line":1381,"loc":{"start":{"line":1381,"column":27},"end":{"line":1381,"column":84}}},"94":{"name":"(anonymous_94)","line":1408,"loc":{"start":{"line":1408,"column":21},"end":{"line":1408,"column":66}}},"95":{"name":"(anonymous_95)","line":1435,"loc":{"start":{"line":1435,"column":27},"end":{"line":1435,"column":84}}},"96":{"name":"(anonymous_96)","line":1462,"loc":{"start":{"line":1462,"column":24},"end":{"line":1462,"column":75}}},"97":{"name":"(anonymous_97)","line":1495,"loc":{"start":{"line":1495,"column":36},"end":{"line":1495,"column":79}}},"98":{"name":"(anonymous_98)","line":1528,"loc":{"start":{"line":1528,"column":32},"end":{"line":1528,"column":79}}},"99":{"name":"(anonymous_99)","line":1568,"loc":{"start":{"line":1568,"column":24},"end":{"line":1568,"column":88}}},"100":{"name":"(anonymous_100)","line":1596,"loc":{"start":{"line":1596,"column":26},"end":{"line":1596,"column":75}}},"101":{"name":"(anonymous_101)","line":1624,"loc":{"start":{"line":1624,"column":20},"end":{"line":1624,"column":69}}},"102":{"name":"(anonymous_102)","line":1655,"loc":{"start":{"line":1655,"column":26},"end":{"line":1655,"column":71}}},"103":{"name":"(anonymous_103)","line":1690,"loc":{"start":{"line":1690,"column":23},"end":{"line":1690,"column":77}}},"104":{"name":"(anonymous_104)","line":1730,"loc":{"start":{"line":1730,"column":35},"end":{"line":1730,"column":85}}},"105":{"name":"(anonymous_105)","line":1770,"loc":{"start":{"line":1770,"column":31},"end":{"line":1770,"column":83}}},"106":{"name":"(anonymous_106)","line":1803,"loc":{"start":{"line":1803,"column":40},"end":{"line":1803,"column":99}}},"107":{"name":"(anonymous_107)","line":1836,"loc":{"start":{"line":1836,"column":19},"end":{"line":1836,"column":50}}},"108":{"name":"(anonymous_108)","line":1847,"loc":{"start":{"line":1847,"column":57},"end":{"line":1847,"column":82}}},"109":{"name":"(anonymous_109)","line":1861,"loc":{"start":{"line":1861,"column":21},"end":{"line":1861,"column":77}}},"110":{"name":"(anonymous_110)","line":1889,"loc":{"start":{"line":1889,"column":57},"end":{"line":1889,"column":82}}},"111":{"name":"(anonymous_111)","line":1903,"loc":{"start":{"line":1903,"column":32},"end":{"line":1903,"column":80}}},"112":{"name":"(anonymous_112)","line":1931,"loc":{"start":{"line":1931,"column":57},"end":{"line":1931,"column":82}}},"113":{"name":"(anonymous_113)","line":1944,"loc":{"start":{"line":1944,"column":22},"end":{"line":1944,"column":60}}},"114":{"name":"(anonymous_114)","line":1962,"loc":{"start":{"line":1962,"column":19},"end":{"line":1962,"column":50}}},"115":{"name":"(anonymous_115)","line":1974,"loc":{"start":{"line":1974,"column":20},"end":{"line":1974,"column":39}}},"116":{"name":"(anonymous_116)","line":1985,"loc":{"start":{"line":1985,"column":21},"end":{"line":1985,"column":47}}},"117":{"name":"(anonymous_117)","line":1987,"loc":{"start":{"line":1987,"column":59},"end":{"line":1987,"column":88}}},"118":{"name":"(anonymous_118)","line":1993,"loc":{"start":{"line":1993,"column":24},"end":{"line":1993,"column":42}}},"119":{"name":"(anonymous_119)","line":1994,"loc":{"start":{"line":1994,"column":24},"end":{"line":1994,"column":48}}},"120":{"name":"(anonymous_120)","line":2007,"loc":{"start":{"line":2007,"column":28},"end":{"line":2007,"column":57}}},"121":{"name":"(anonymous_121)","line":2015,"loc":{"start":{"line":2015,"column":49},"end":{"line":2015,"column":81}}},"122":{"name":"(anonymous_122)","line":2038,"loc":{"start":{"line":2038,"column":31},"end":{"line":2038,"column":82}}},"123":{"name":"(anonymous_123)","line":2045,"loc":{"start":{"line":2045,"column":23},"end":{"line":2045,"column":35}}},"124":{"name":"(anonymous_124)","line":2065,"loc":{"start":{"line":2065,"column":63},"end":{"line":2065,"column":121}}},"125":{"name":"(anonymous_125)","line":2078,"loc":{"start":{"line":2078,"column":31},"end":{"line":2078,"column":82}}},"126":{"name":"(anonymous_126)","line":2085,"loc":{"start":{"line":2085,"column":23},"end":{"line":2085,"column":35}}},"127":{"name":"(anonymous_127)","line":2105,"loc":{"start":{"line":2105,"column":63},"end":{"line":2105,"column":121}}},"128":{"name":"(anonymous_128)","line":2118,"loc":{"start":{"line":2118,"column":31},"end":{"line":2118,"column":74}}},"129":{"name":"(anonymous_129)","line":2121,"loc":{"start":{"line":2121,"column":59},"end":{"line":2121,"column":85}}},"130":{"name":"(anonymous_130)","line":2126,"loc":{"start":{"line":2126,"column":23},"end":{"line":2126,"column":52}}},"131":{"name":"(anonymous_131)","line":2132,"loc":{"start":{"line":2132,"column":20},"end":{"line":2132,"column":38}}},"132":{"name":"(anonymous_132)","line":2133,"loc":{"start":{"line":2133,"column":20},"end":{"line":2133,"column":44}}},"133":{"name":"(anonymous_133)","line":2144,"loc":{"start":{"line":2144,"column":16},"end":{"line":2144,"column":83}}},"134":{"name":"(anonymous_134)","line":2150,"loc":{"start":{"line":2150,"column":57},"end":{"line":2150,"column":82}}},"135":{"name":"(anonymous_135)","line":2156,"loc":{"start":{"line":2156,"column":16},"end":{"line":2156,"column":83}}},"136":{"name":"(anonymous_136)","line":2163,"loc":{"start":{"line":2163,"column":57},"end":{"line":2163,"column":82}}},"137":{"name":"(anonymous_137)","line":2169,"loc":{"start":{"line":2169,"column":17},"end":{"line":2169,"column":88}}},"138":{"name":"(anonymous_138)","line":2175,"loc":{"start":{"line":2175,"column":57},"end":{"line":2175,"column":82}}},"139":{"name":"(anonymous_139)","line":2181,"loc":{"start":{"line":2181,"column":14},"end":{"line":2181,"column":75}}},"140":{"name":"(anonymous_140)","line":2187,"loc":{"start":{"line":2187,"column":56},"end":{"line":2187,"column":80}}},"141":{"name":"(anonymous_141)","line":2193,"loc":{"start":{"line":2193,"column":24},"end":{"line":2193,"column":85}}},"142":{"name":"(anonymous_142)","line":2199,"loc":{"start":{"line":2199,"column":57},"end":{"line":2199,"column":82}}},"143":{"name":"(anonymous_143)","line":2205,"loc":{"start":{"line":2205,"column":13},"end":{"line":2205,"column":53}}},"144":{"name":"(anonymous_144)","line":2210,"loc":{"start":{"line":2210,"column":14},"end":{"line":2210,"column":60}}},"145":{"name":"(anonymous_145)","line":2215,"loc":{"start":{"line":2215,"column":13},"end":{"line":2215,"column":59}}},"146":{"name":"(anonymous_146)","line":2220,"loc":{"start":{"line":2220,"column":14},"end":{"line":2220,"column":54}}},"147":{"name":"(anonymous_147)","line":2225,"loc":{"start":{"line":2225,"column":16},"end":{"line":2225,"column":56}}},"148":{"name":"(anonymous_148)","line":2234,"loc":{"start":{"line":2234,"column":35},"end":{"line":2234,"column":71}}},"149":{"name":"(anonymous_149)","line":2243,"loc":{"start":{"line":2243,"column":48},"end":{"line":2243,"column":84}}},"150":{"name":"(anonymous_150)","line":2249,"loc":{"start":{"line":2249,"column":29},"end":{"line":2249,"column":73}}},"151":{"name":"(anonymous_151)","line":2252,"loc":{"start":{"line":2252,"column":53},"end":{"line":2252,"column":69}}},"152":{"name":"(anonymous_152)","line":2275,"loc":{"start":{"line":2275,"column":19},"end":{"line":2275,"column":128}}},"153":{"name":"(anonymous_153)","line":2282,"loc":{"start":{"line":2282,"column":34},"end":{"line":2282,"column":74}}},"154":{"name":"(anonymous_154)","line":2289,"loc":{"start":{"line":2289,"column":56},"end":{"line":2289,"column":72}}},"155":{"name":"(anonymous_155)","line":2298,"loc":{"start":{"line":2298,"column":56},"end":{"line":2298,"column":80}}},"156":{"name":"(anonymous_156)","line":2327,"loc":{"start":{"line":2327,"column":25},"end":{"line":2327,"column":50}}},"157":{"name":"(anonymous_157)","line":2347,"loc":{"start":{"line":2347,"column":40},"end":{"line":2347,"column":79}}},"158":{"name":"(anonymous_158)","line":2358,"loc":{"start":{"line":2358,"column":34},"end":{"line":2358,"column":61}}},"159":{"name":"(anonymous_159)","line":2379,"loc":{"start":{"line":2379,"column":43},"end":{"line":2379,"column":84}}},"160":{"name":"(anonymous_160)","line":2400,"loc":{"start":{"line":2400,"column":23},"end":{"line":2400,"column":60}}},"161":{"name":"(anonymous_161)","line":2409,"loc":{"start":{"line":2409,"column":25},"end":{"line":2409,"column":76}}},"162":{"name":"(anonymous_162)","line":2426,"loc":{"start":{"line":2426,"column":27},"end":{"line":2426,"column":46}}},"163":{"name":"(anonymous_163)","line":2439,"loc":{"start":{"line":2439,"column":36},"end":{"line":2439,"column":69}}},"164":{"name":"(anonymous_164)","line":2466,"loc":{"start":{"line":2466,"column":17},"end":{"line":2466,"column":35}}},"165":{"name":"(anonymous_165)","line":2469,"loc":{"start":{"line":2469,"column":47},"end":{"line":2469,"column":89}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":32,"column":39}},"2":{"start":{"line":35,"column":0},"end":{"line":2475,"column":2}},"3":{"start":{"line":49,"column":8},"end":{"line":49,"column":43}},"4":{"start":{"line":50,"column":8},"end":{"line":61,"column":9}},"5":{"start":{"line":51,"column":12},"end":{"line":51,"column":44}},"6":{"start":{"line":52,"column":12},"end":{"line":52,"column":54}},"7":{"start":{"line":53,"column":12},"end":{"line":60,"column":13}},"8":{"start":{"line":54,"column":16},"end":{"line":54,"column":41}},"9":{"start":{"line":55,"column":16},"end":{"line":59,"column":17}},"10":{"start":{"line":56,"column":20},"end":{"line":56,"column":83}},"11":{"start":{"line":57,"column":20},"end":{"line":57,"column":70}},"12":{"start":{"line":58,"column":20},"end":{"line":58,"column":77}},"13":{"start":{"line":63,"column":8},"end":{"line":63,"column":90}},"14":{"start":{"line":64,"column":8},"end":{"line":64,"column":33}},"15":{"start":{"line":65,"column":8},"end":{"line":65,"column":77}},"16":{"start":{"line":66,"column":8},"end":{"line":66,"column":86}},"17":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"18":{"start":{"line":68,"column":12},"end":{"line":68,"column":91}},"19":{"start":{"line":71,"column":8},"end":{"line":71,"column":84}},"20":{"start":{"line":74,"column":8},"end":{"line":74,"column":35}},"21":{"start":{"line":79,"column":8},"end":{"line":79,"column":84}},"22":{"start":{"line":80,"column":8},"end":{"line":80,"column":37}},"23":{"start":{"line":82,"column":8},"end":{"line":82,"column":46}},"24":{"start":{"line":84,"column":8},"end":{"line":84,"column":70}},"25":{"start":{"line":93,"column":12},"end":{"line":95,"column":15}},"26":{"start":{"line":94,"column":16},"end":{"line":94,"column":40}},"27":{"start":{"line":104,"column":12},"end":{"line":106,"column":15}},"28":{"start":{"line":105,"column":16},"end":{"line":105,"column":39}},"29":{"start":{"line":123,"column":12},"end":{"line":123,"column":90}},"30":{"start":{"line":124,"column":12},"end":{"line":124,"column":51}},"31":{"start":{"line":125,"column":12},"end":{"line":125,"column":53}},"32":{"start":{"line":127,"column":12},"end":{"line":127,"column":25}},"33":{"start":{"line":128,"column":12},"end":{"line":131,"column":13}},"34":{"start":{"line":129,"column":16},"end":{"line":129,"column":30}},"35":{"start":{"line":130,"column":16},"end":{"line":130,"column":23}},"36":{"start":{"line":133,"column":12},"end":{"line":133,"column":30}},"37":{"start":{"line":134,"column":12},"end":{"line":134,"column":84}},"38":{"start":{"line":156,"column":12},"end":{"line":156,"column":90}},"39":{"start":{"line":157,"column":12},"end":{"line":157,"column":51}},"40":{"start":{"line":158,"column":12},"end":{"line":158,"column":53}},"41":{"start":{"line":160,"column":12},"end":{"line":160,"column":25}},"42":{"start":{"line":161,"column":12},"end":{"line":164,"column":13}},"43":{"start":{"line":162,"column":16},"end":{"line":162,"column":30}},"44":{"start":{"line":163,"column":16},"end":{"line":163,"column":23}},"45":{"start":{"line":166,"column":12},"end":{"line":166,"column":65}},"46":{"start":{"line":167,"column":12},"end":{"line":167,"column":80}},"47":{"start":{"line":168,"column":12},"end":{"line":168,"column":67}},"48":{"start":{"line":170,"column":12},"end":{"line":170,"column":79}},"49":{"start":{"line":190,"column":12},"end":{"line":190,"column":89}},"50":{"start":{"line":192,"column":12},"end":{"line":192,"column":31}},"51":{"start":{"line":193,"column":12},"end":{"line":197,"column":13}},"52":{"start":{"line":194,"column":16},"end":{"line":194,"column":61}},"53":{"start":{"line":196,"column":16},"end":{"line":196,"column":94}},"54":{"start":{"line":199,"column":12},"end":{"line":199,"column":80}},"55":{"start":{"line":218,"column":12},"end":{"line":218,"column":90}},"56":{"start":{"line":219,"column":12},"end":{"line":219,"column":51}},"57":{"start":{"line":220,"column":12},"end":{"line":220,"column":53}},"58":{"start":{"line":222,"column":12},"end":{"line":222,"column":25}},"59":{"start":{"line":223,"column":12},"end":{"line":226,"column":13}},"60":{"start":{"line":224,"column":16},"end":{"line":224,"column":30}},"61":{"start":{"line":225,"column":16},"end":{"line":225,"column":23}},"62":{"start":{"line":228,"column":12},"end":{"line":228,"column":65}},"63":{"start":{"line":229,"column":12},"end":{"line":229,"column":86}},"64":{"start":{"line":230,"column":12},"end":{"line":230,"column":67}},"65":{"start":{"line":232,"column":12},"end":{"line":232,"column":85}},"66":{"start":{"line":246,"column":12},"end":{"line":246,"column":90}},"67":{"start":{"line":247,"column":12},"end":{"line":247,"column":51}},"68":{"start":{"line":248,"column":12},"end":{"line":248,"column":53}},"69":{"start":{"line":250,"column":12},"end":{"line":250,"column":25}},"70":{"start":{"line":251,"column":12},"end":{"line":254,"column":13}},"71":{"start":{"line":252,"column":16},"end":{"line":252,"column":30}},"72":{"start":{"line":253,"column":16},"end":{"line":253,"column":23}},"73":{"start":{"line":256,"column":12},"end":{"line":256,"column":65}},"74":{"start":{"line":257,"column":12},"end":{"line":257,"column":80}},"75":{"start":{"line":258,"column":12},"end":{"line":258,"column":67}},"76":{"start":{"line":260,"column":12},"end":{"line":260,"column":79}},"77":{"start":{"line":277,"column":12},"end":{"line":277,"column":90}},"78":{"start":{"line":278,"column":12},"end":{"line":278,"column":51}},"79":{"start":{"line":279,"column":12},"end":{"line":279,"column":53}},"80":{"start":{"line":281,"column":12},"end":{"line":281,"column":25}},"81":{"start":{"line":282,"column":12},"end":{"line":285,"column":13}},"82":{"start":{"line":283,"column":16},"end":{"line":283,"column":30}},"83":{"start":{"line":284,"column":16},"end":{"line":284,"column":23}},"84":{"start":{"line":287,"column":12},"end":{"line":287,"column":61}},"85":{"start":{"line":288,"column":12},"end":{"line":288,"column":82}},"86":{"start":{"line":289,"column":12},"end":{"line":289,"column":63}},"87":{"start":{"line":291,"column":12},"end":{"line":291,"column":85}},"88":{"start":{"line":312,"column":12},"end":{"line":312,"column":90}},"89":{"start":{"line":313,"column":12},"end":{"line":313,"column":51}},"90":{"start":{"line":314,"column":12},"end":{"line":314,"column":53}},"91":{"start":{"line":316,"column":12},"end":{"line":320,"column":13}},"92":{"start":{"line":317,"column":16},"end":{"line":317,"column":63}},"93":{"start":{"line":318,"column":19},"end":{"line":320,"column":13}},"94":{"start":{"line":319,"column":16},"end":{"line":319,"column":55}},"95":{"start":{"line":322,"column":12},"end":{"line":322,"column":25}},"96":{"start":{"line":323,"column":12},"end":{"line":326,"column":13}},"97":{"start":{"line":324,"column":16},"end":{"line":324,"column":30}},"98":{"start":{"line":325,"column":16},"end":{"line":325,"column":23}},"99":{"start":{"line":328,"column":12},"end":{"line":328,"column":67}},"100":{"start":{"line":329,"column":12},"end":{"line":329,"column":85}},"101":{"start":{"line":330,"column":12},"end":{"line":330,"column":69}},"102":{"start":{"line":332,"column":12},"end":{"line":332,"column":85}},"103":{"start":{"line":352,"column":12},"end":{"line":352,"column":90}},"104":{"start":{"line":353,"column":12},"end":{"line":353,"column":51}},"105":{"start":{"line":354,"column":12},"end":{"line":354,"column":53}},"106":{"start":{"line":356,"column":12},"end":{"line":360,"column":13}},"107":{"start":{"line":357,"column":16},"end":{"line":357,"column":55}},"108":{"start":{"line":358,"column":19},"end":{"line":360,"column":13}},"109":{"start":{"line":359,"column":16},"end":{"line":359,"column":47}},"110":{"start":{"line":362,"column":12},"end":{"line":362,"column":25}},"111":{"start":{"line":363,"column":12},"end":{"line":366,"column":13}},"112":{"start":{"line":364,"column":16},"end":{"line":364,"column":30}},"113":{"start":{"line":365,"column":16},"end":{"line":365,"column":23}},"114":{"start":{"line":368,"column":12},"end":{"line":368,"column":67}},"115":{"start":{"line":369,"column":12},"end":{"line":369,"column":81}},"116":{"start":{"line":370,"column":12},"end":{"line":370,"column":69}},"117":{"start":{"line":372,"column":12},"end":{"line":372,"column":77}},"118":{"start":{"line":392,"column":12},"end":{"line":392,"column":90}},"119":{"start":{"line":393,"column":12},"end":{"line":393,"column":51}},"120":{"start":{"line":394,"column":12},"end":{"line":394,"column":53}},"121":{"start":{"line":396,"column":12},"end":{"line":400,"column":13}},"122":{"start":{"line":397,"column":16},"end":{"line":397,"column":59}},"123":{"start":{"line":398,"column":19},"end":{"line":400,"column":13}},"124":{"start":{"line":399,"column":16},"end":{"line":399,"column":51}},"125":{"start":{"line":402,"column":12},"end":{"line":402,"column":25}},"126":{"start":{"line":403,"column":12},"end":{"line":406,"column":13}},"127":{"start":{"line":404,"column":16},"end":{"line":404,"column":30}},"128":{"start":{"line":405,"column":16},"end":{"line":405,"column":23}},"129":{"start":{"line":408,"column":12},"end":{"line":408,"column":67}},"130":{"start":{"line":409,"column":12},"end":{"line":409,"column":83}},"131":{"start":{"line":410,"column":12},"end":{"line":410,"column":69}},"132":{"start":{"line":412,"column":12},"end":{"line":412,"column":81}},"133":{"start":{"line":425,"column":12},"end":{"line":425,"column":90}},"134":{"start":{"line":426,"column":12},"end":{"line":426,"column":51}},"135":{"start":{"line":427,"column":12},"end":{"line":427,"column":53}},"136":{"start":{"line":429,"column":12},"end":{"line":429,"column":70}},"137":{"start":{"line":432,"column":12},"end":{"line":434,"column":13}},"138":{"start":{"line":433,"column":16},"end":{"line":433,"column":74}},"139":{"start":{"line":436,"column":12},"end":{"line":440,"column":13}},"140":{"start":{"line":437,"column":16},"end":{"line":437,"column":88}},"141":{"start":{"line":439,"column":16},"end":{"line":439,"column":101}},"142":{"start":{"line":442,"column":12},"end":{"line":442,"column":65}},"143":{"start":{"line":443,"column":12},"end":{"line":443,"column":86}},"144":{"start":{"line":444,"column":12},"end":{"line":444,"column":67}},"145":{"start":{"line":446,"column":12},"end":{"line":446,"column":100}},"146":{"start":{"line":457,"column":12},"end":{"line":457,"column":90}},"147":{"start":{"line":458,"column":12},"end":{"line":458,"column":51}},"148":{"start":{"line":459,"column":12},"end":{"line":459,"column":53}},"149":{"start":{"line":461,"column":12},"end":{"line":461,"column":65}},"150":{"start":{"line":462,"column":12},"end":{"line":462,"column":75}},"151":{"start":{"line":463,"column":12},"end":{"line":463,"column":67}},"152":{"start":{"line":465,"column":12},"end":{"line":465,"column":69}},"153":{"start":{"line":477,"column":12},"end":{"line":477,"column":90}},"154":{"start":{"line":478,"column":12},"end":{"line":478,"column":51}},"155":{"start":{"line":479,"column":12},"end":{"line":479,"column":53}},"156":{"start":{"line":481,"column":12},"end":{"line":481,"column":67}},"157":{"start":{"line":482,"column":12},"end":{"line":482,"column":77}},"158":{"start":{"line":483,"column":12},"end":{"line":483,"column":69}},"159":{"start":{"line":485,"column":12},"end":{"line":485,"column":28}},"160":{"start":{"line":486,"column":12},"end":{"line":490,"column":15}},"161":{"start":{"line":487,"column":16},"end":{"line":487,"column":67}},"162":{"start":{"line":487,"column":25},"end":{"line":487,"column":67}},"163":{"start":{"line":488,"column":16},"end":{"line":488,"column":91}},"164":{"start":{"line":489,"column":16},"end":{"line":489,"column":51}},"165":{"start":{"line":502,"column":12},"end":{"line":502,"column":90}},"166":{"start":{"line":503,"column":12},"end":{"line":503,"column":51}},"167":{"start":{"line":504,"column":12},"end":{"line":504,"column":53}},"168":{"start":{"line":506,"column":12},"end":{"line":506,"column":65}},"169":{"start":{"line":507,"column":12},"end":{"line":507,"column":75}},"170":{"start":{"line":508,"column":12},"end":{"line":508,"column":67}},"171":{"start":{"line":510,"column":12},"end":{"line":510,"column":70}},"172":{"start":{"line":522,"column":12},"end":{"line":522,"column":90}},"173":{"start":{"line":523,"column":12},"end":{"line":523,"column":51}},"174":{"start":{"line":524,"column":12},"end":{"line":524,"column":53}},"175":{"start":{"line":526,"column":12},"end":{"line":526,"column":67}},"176":{"start":{"line":527,"column":12},"end":{"line":527,"column":77}},"177":{"start":{"line":528,"column":12},"end":{"line":528,"column":69}},"178":{"start":{"line":530,"column":12},"end":{"line":530,"column":77}},"179":{"start":{"line":542,"column":12},"end":{"line":542,"column":90}},"180":{"start":{"line":543,"column":12},"end":{"line":543,"column":51}},"181":{"start":{"line":544,"column":12},"end":{"line":544,"column":53}},"182":{"start":{"line":546,"column":12},"end":{"line":546,"column":61}},"183":{"start":{"line":547,"column":12},"end":{"line":547,"column":71}},"184":{"start":{"line":548,"column":12},"end":{"line":548,"column":63}},"185":{"start":{"line":550,"column":12},"end":{"line":550,"column":71}},"186":{"start":{"line":562,"column":12},"end":{"line":562,"column":90}},"187":{"start":{"line":563,"column":12},"end":{"line":563,"column":51}},"188":{"start":{"line":564,"column":12},"end":{"line":564,"column":53}},"189":{"start":{"line":566,"column":12},"end":{"line":566,"column":67}},"190":{"start":{"line":567,"column":12},"end":{"line":567,"column":77}},"191":{"start":{"line":568,"column":12},"end":{"line":568,"column":69}},"192":{"start":{"line":570,"column":12},"end":{"line":570,"column":77}},"193":{"start":{"line":582,"column":12},"end":{"line":582,"column":90}},"194":{"start":{"line":583,"column":12},"end":{"line":583,"column":51}},"195":{"start":{"line":584,"column":12},"end":{"line":584,"column":53}},"196":{"start":{"line":586,"column":12},"end":{"line":586,"column":59}},"197":{"start":{"line":588,"column":12},"end":{"line":588,"column":64}},"198":{"start":{"line":589,"column":12},"end":{"line":589,"column":74}},"199":{"start":{"line":590,"column":12},"end":{"line":590,"column":66}},"200":{"start":{"line":592,"column":12},"end":{"line":592,"column":74}},"201":{"start":{"line":604,"column":12},"end":{"line":604,"column":90}},"202":{"start":{"line":605,"column":12},"end":{"line":605,"column":51}},"203":{"start":{"line":606,"column":12},"end":{"line":606,"column":53}},"204":{"start":{"line":608,"column":12},"end":{"line":608,"column":60}},"205":{"start":{"line":609,"column":12},"end":{"line":609,"column":70}},"206":{"start":{"line":610,"column":12},"end":{"line":610,"column":62}},"207":{"start":{"line":612,"column":12},"end":{"line":612,"column":70}},"208":{"start":{"line":624,"column":12},"end":{"line":624,"column":90}},"209":{"start":{"line":625,"column":12},"end":{"line":625,"column":51}},"210":{"start":{"line":626,"column":12},"end":{"line":626,"column":53}},"211":{"start":{"line":628,"column":12},"end":{"line":628,"column":62}},"212":{"start":{"line":629,"column":12},"end":{"line":629,"column":72}},"213":{"start":{"line":630,"column":12},"end":{"line":630,"column":64}},"214":{"start":{"line":632,"column":12},"end":{"line":632,"column":72}},"215":{"start":{"line":644,"column":12},"end":{"line":644,"column":90}},"216":{"start":{"line":645,"column":12},"end":{"line":645,"column":51}},"217":{"start":{"line":646,"column":12},"end":{"line":646,"column":53}},"218":{"start":{"line":648,"column":12},"end":{"line":648,"column":65}},"219":{"start":{"line":649,"column":12},"end":{"line":649,"column":75}},"220":{"start":{"line":650,"column":12},"end":{"line":650,"column":67}},"221":{"start":{"line":652,"column":12},"end":{"line":652,"column":75}},"222":{"start":{"line":662,"column":12},"end":{"line":662,"column":59}},"223":{"start":{"line":674,"column":12},"end":{"line":674,"column":75}},"224":{"start":{"line":686,"column":12},"end":{"line":686,"column":75}},"225":{"start":{"line":699,"column":12},"end":{"line":699,"column":84}},"226":{"start":{"line":711,"column":12},"end":{"line":711,"column":75}},"227":{"start":{"line":723,"column":12},"end":{"line":723,"column":69}},"228":{"start":{"line":735,"column":12},"end":{"line":735,"column":71}},"229":{"start":{"line":747,"column":12},"end":{"line":747,"column":74}},"230":{"start":{"line":759,"column":12},"end":{"line":759,"column":86}},"231":{"start":{"line":771,"column":12},"end":{"line":771,"column":82}},"232":{"start":{"line":783,"column":12},"end":{"line":783,"column":75}},"233":{"start":{"line":794,"column":12},"end":{"line":794,"column":28}},"234":{"start":{"line":795,"column":12},"end":{"line":806,"column":15}},"235":{"start":{"line":796,"column":16},"end":{"line":805,"column":34}},"236":{"start":{"line":801,"column":44},"end":{"line":801,"column":68}},"237":{"start":{"line":802,"column":50},"end":{"line":802,"column":62}},"238":{"start":{"line":819,"column":12},"end":{"line":819,"column":28}},"239":{"start":{"line":821,"column":12},"end":{"line":821,"column":65}},"240":{"start":{"line":822,"column":12},"end":{"line":822,"column":80}},"241":{"start":{"line":823,"column":12},"end":{"line":823,"column":67}},"242":{"start":{"line":825,"column":12},"end":{"line":836,"column":15}},"243":{"start":{"line":826,"column":16},"end":{"line":835,"column":30}},"244":{"start":{"line":831,"column":40},"end":{"line":831,"column":74}},"245":{"start":{"line":832,"column":46},"end":{"line":832,"column":58}},"246":{"start":{"line":850,"column":12},"end":{"line":850,"column":89}},"247":{"start":{"line":851,"column":12},"end":{"line":851,"column":32}},"248":{"start":{"line":852,"column":12},"end":{"line":856,"column":13}},"249":{"start":{"line":853,"column":16},"end":{"line":853,"column":64}},"250":{"start":{"line":855,"column":16},"end":{"line":855,"column":100}},"251":{"start":{"line":858,"column":12},"end":{"line":858,"column":79}},"252":{"start":{"line":872,"column":12},"end":{"line":872,"column":28}},"253":{"start":{"line":874,"column":12},"end":{"line":874,"column":67}},"254":{"start":{"line":875,"column":12},"end":{"line":875,"column":85}},"255":{"start":{"line":876,"column":12},"end":{"line":876,"column":69}},"256":{"start":{"line":878,"column":12},"end":{"line":889,"column":15}},"257":{"start":{"line":879,"column":16},"end":{"line":888,"column":30}},"258":{"start":{"line":884,"column":40},"end":{"line":884,"column":73}},"259":{"start":{"line":885,"column":46},"end":{"line":885,"column":58}},"260":{"start":{"line":903,"column":12},"end":{"line":903,"column":28}},"261":{"start":{"line":905,"column":12},"end":{"line":905,"column":65}},"262":{"start":{"line":906,"column":12},"end":{"line":906,"column":86}},"263":{"start":{"line":907,"column":12},"end":{"line":907,"column":67}},"264":{"start":{"line":909,"column":12},"end":{"line":920,"column":15}},"265":{"start":{"line":910,"column":16},"end":{"line":919,"column":34}},"266":{"start":{"line":915,"column":44},"end":{"line":915,"column":70}},"267":{"start":{"line":916,"column":50},"end":{"line":916,"column":62}},"268":{"start":{"line":933,"column":12},"end":{"line":933,"column":28}},"269":{"start":{"line":935,"column":12},"end":{"line":935,"column":65}},"270":{"start":{"line":936,"column":12},"end":{"line":936,"column":80}},"271":{"start":{"line":937,"column":12},"end":{"line":937,"column":67}},"272":{"start":{"line":939,"column":12},"end":{"line":950,"column":15}},"273":{"start":{"line":940,"column":16},"end":{"line":949,"column":30}},"274":{"start":{"line":945,"column":40},"end":{"line":945,"column":60}},"275":{"start":{"line":946,"column":46},"end":{"line":946,"column":58}},"276":{"start":{"line":963,"column":12},"end":{"line":963,"column":28}},"277":{"start":{"line":965,"column":12},"end":{"line":965,"column":61}},"278":{"start":{"line":966,"column":12},"end":{"line":966,"column":82}},"279":{"start":{"line":967,"column":12},"end":{"line":967,"column":63}},"280":{"start":{"line":969,"column":12},"end":{"line":980,"column":15}},"281":{"start":{"line":970,"column":16},"end":{"line":979,"column":30}},"282":{"start":{"line":975,"column":40},"end":{"line":975,"column":66}},"283":{"start":{"line":976,"column":46},"end":{"line":976,"column":58}},"284":{"start":{"line":993,"column":12},"end":{"line":993,"column":28}},"285":{"start":{"line":995,"column":12},"end":{"line":995,"column":67}},"286":{"start":{"line":996,"column":12},"end":{"line":996,"column":85}},"287":{"start":{"line":997,"column":12},"end":{"line":997,"column":69}},"288":{"start":{"line":999,"column":12},"end":{"line":1010,"column":15}},"289":{"start":{"line":1000,"column":16},"end":{"line":1009,"column":30}},"290":{"start":{"line":1005,"column":40},"end":{"line":1005,"column":63}},"291":{"start":{"line":1006,"column":46},"end":{"line":1006,"column":58}},"292":{"start":{"line":1023,"column":12},"end":{"line":1023,"column":28}},"293":{"start":{"line":1025,"column":12},"end":{"line":1025,"column":67}},"294":{"start":{"line":1026,"column":12},"end":{"line":1026,"column":81}},"295":{"start":{"line":1027,"column":12},"end":{"line":1027,"column":69}},"296":{"start":{"line":1029,"column":12},"end":{"line":1040,"column":15}},"297":{"start":{"line":1030,"column":16},"end":{"line":1039,"column":30}},"298":{"start":{"line":1035,"column":40},"end":{"line":1035,"column":75}},"299":{"start":{"line":1036,"column":46},"end":{"line":1036,"column":58}},"300":{"start":{"line":1053,"column":12},"end":{"line":1053,"column":28}},"301":{"start":{"line":1055,"column":12},"end":{"line":1055,"column":67}},"302":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":83}},"303":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":69}},"304":{"start":{"line":1059,"column":12},"end":{"line":1070,"column":15}},"305":{"start":{"line":1060,"column":16},"end":{"line":1069,"column":30}},"306":{"start":{"line":1065,"column":40},"end":{"line":1065,"column":71}},"307":{"start":{"line":1066,"column":46},"end":{"line":1066,"column":58}},"308":{"start":{"line":1083,"column":12},"end":{"line":1083,"column":28}},"309":{"start":{"line":1085,"column":12},"end":{"line":1085,"column":67}},"310":{"start":{"line":1086,"column":12},"end":{"line":1086,"column":86}},"311":{"start":{"line":1087,"column":12},"end":{"line":1087,"column":69}},"312":{"start":{"line":1089,"column":12},"end":{"line":1100,"column":15}},"313":{"start":{"line":1090,"column":16},"end":{"line":1099,"column":30}},"314":{"start":{"line":1095,"column":40},"end":{"line":1095,"column":64}},"315":{"start":{"line":1096,"column":46},"end":{"line":1096,"column":58}},"316":{"start":{"line":1112,"column":12},"end":{"line":1112,"column":90}},"317":{"start":{"line":1113,"column":12},"end":{"line":1113,"column":51}},"318":{"start":{"line":1114,"column":12},"end":{"line":1114,"column":53}},"319":{"start":{"line":1116,"column":12},"end":{"line":1116,"column":65}},"320":{"start":{"line":1117,"column":12},"end":{"line":1117,"column":75}},"321":{"start":{"line":1118,"column":12},"end":{"line":1118,"column":67}},"322":{"start":{"line":1119,"column":12},"end":{"line":1119,"column":79}},"323":{"start":{"line":1131,"column":12},"end":{"line":1131,"column":90}},"324":{"start":{"line":1132,"column":12},"end":{"line":1132,"column":51}},"325":{"start":{"line":1133,"column":12},"end":{"line":1133,"column":53}},"326":{"start":{"line":1135,"column":12},"end":{"line":1135,"column":67}},"327":{"start":{"line":1136,"column":12},"end":{"line":1136,"column":77}},"328":{"start":{"line":1137,"column":12},"end":{"line":1137,"column":69}},"329":{"start":{"line":1139,"column":12},"end":{"line":1139,"column":81}},"330":{"start":{"line":1151,"column":12},"end":{"line":1151,"column":90}},"331":{"start":{"line":1152,"column":12},"end":{"line":1152,"column":51}},"332":{"start":{"line":1153,"column":12},"end":{"line":1153,"column":53}},"333":{"start":{"line":1155,"column":12},"end":{"line":1155,"column":65}},"334":{"start":{"line":1156,"column":12},"end":{"line":1156,"column":75}},"335":{"start":{"line":1157,"column":12},"end":{"line":1157,"column":67}},"336":{"start":{"line":1159,"column":12},"end":{"line":1159,"column":80}},"337":{"start":{"line":1171,"column":12},"end":{"line":1171,"column":90}},"338":{"start":{"line":1172,"column":12},"end":{"line":1172,"column":51}},"339":{"start":{"line":1173,"column":12},"end":{"line":1173,"column":53}},"340":{"start":{"line":1175,"column":12},"end":{"line":1175,"column":67}},"341":{"start":{"line":1176,"column":12},"end":{"line":1176,"column":77}},"342":{"start":{"line":1177,"column":12},"end":{"line":1177,"column":69}},"343":{"start":{"line":1179,"column":12},"end":{"line":1179,"column":87}},"344":{"start":{"line":1191,"column":12},"end":{"line":1191,"column":90}},"345":{"start":{"line":1192,"column":12},"end":{"line":1192,"column":51}},"346":{"start":{"line":1193,"column":12},"end":{"line":1193,"column":53}},"347":{"start":{"line":1195,"column":12},"end":{"line":1195,"column":61}},"348":{"start":{"line":1196,"column":12},"end":{"line":1196,"column":71}},"349":{"start":{"line":1197,"column":12},"end":{"line":1197,"column":63}},"350":{"start":{"line":1199,"column":12},"end":{"line":1199,"column":81}},"351":{"start":{"line":1211,"column":12},"end":{"line":1211,"column":90}},"352":{"start":{"line":1212,"column":12},"end":{"line":1212,"column":51}},"353":{"start":{"line":1213,"column":12},"end":{"line":1213,"column":53}},"354":{"start":{"line":1215,"column":12},"end":{"line":1215,"column":67}},"355":{"start":{"line":1216,"column":12},"end":{"line":1216,"column":77}},"356":{"start":{"line":1217,"column":12},"end":{"line":1217,"column":69}},"357":{"start":{"line":1219,"column":12},"end":{"line":1219,"column":87}},"358":{"start":{"line":1231,"column":12},"end":{"line":1231,"column":90}},"359":{"start":{"line":1232,"column":12},"end":{"line":1232,"column":51}},"360":{"start":{"line":1233,"column":12},"end":{"line":1233,"column":53}},"361":{"start":{"line":1235,"column":12},"end":{"line":1235,"column":64}},"362":{"start":{"line":1236,"column":12},"end":{"line":1236,"column":74}},"363":{"start":{"line":1237,"column":12},"end":{"line":1237,"column":66}},"364":{"start":{"line":1239,"column":12},"end":{"line":1239,"column":84}},"365":{"start":{"line":1251,"column":12},"end":{"line":1251,"column":90}},"366":{"start":{"line":1252,"column":12},"end":{"line":1252,"column":51}},"367":{"start":{"line":1253,"column":12},"end":{"line":1253,"column":53}},"368":{"start":{"line":1255,"column":12},"end":{"line":1255,"column":60}},"369":{"start":{"line":1256,"column":12},"end":{"line":1256,"column":70}},"370":{"start":{"line":1257,"column":12},"end":{"line":1257,"column":62}},"371":{"start":{"line":1259,"column":12},"end":{"line":1259,"column":80}},"372":{"start":{"line":1271,"column":12},"end":{"line":1271,"column":90}},"373":{"start":{"line":1272,"column":12},"end":{"line":1272,"column":51}},"374":{"start":{"line":1273,"column":12},"end":{"line":1273,"column":53}},"375":{"start":{"line":1275,"column":12},"end":{"line":1275,"column":62}},"376":{"start":{"line":1276,"column":12},"end":{"line":1276,"column":72}},"377":{"start":{"line":1277,"column":12},"end":{"line":1277,"column":64}},"378":{"start":{"line":1279,"column":12},"end":{"line":1279,"column":82}},"379":{"start":{"line":1291,"column":12},"end":{"line":1291,"column":90}},"380":{"start":{"line":1292,"column":12},"end":{"line":1292,"column":51}},"381":{"start":{"line":1293,"column":12},"end":{"line":1293,"column":53}},"382":{"start":{"line":1295,"column":12},"end":{"line":1295,"column":65}},"383":{"start":{"line":1296,"column":12},"end":{"line":1296,"column":75}},"384":{"start":{"line":1297,"column":12},"end":{"line":1297,"column":67}},"385":{"start":{"line":1299,"column":12},"end":{"line":1299,"column":85}},"386":{"start":{"line":1312,"column":12},"end":{"line":1312,"column":90}},"387":{"start":{"line":1313,"column":12},"end":{"line":1313,"column":51}},"388":{"start":{"line":1314,"column":12},"end":{"line":1314,"column":53}},"389":{"start":{"line":1316,"column":12},"end":{"line":1316,"column":25}},"390":{"start":{"line":1317,"column":12},"end":{"line":1320,"column":13}},"391":{"start":{"line":1318,"column":16},"end":{"line":1318,"column":30}},"392":{"start":{"line":1319,"column":16},"end":{"line":1319,"column":23}},"393":{"start":{"line":1322,"column":12},"end":{"line":1322,"column":67}},"394":{"start":{"line":1323,"column":12},"end":{"line":1323,"column":77}},"395":{"start":{"line":1324,"column":12},"end":{"line":1324,"column":69}},"396":{"start":{"line":1326,"column":12},"end":{"line":1326,"column":86}},"397":{"start":{"line":1339,"column":12},"end":{"line":1339,"column":90}},"398":{"start":{"line":1340,"column":12},"end":{"line":1340,"column":51}},"399":{"start":{"line":1341,"column":12},"end":{"line":1341,"column":53}},"400":{"start":{"line":1343,"column":12},"end":{"line":1343,"column":28}},"401":{"start":{"line":1345,"column":12},"end":{"line":1357,"column":14}},"402":{"start":{"line":1346,"column":16},"end":{"line":1346,"column":29}},"403":{"start":{"line":1347,"column":16},"end":{"line":1350,"column":17}},"404":{"start":{"line":1348,"column":20},"end":{"line":1348,"column":34}},"405":{"start":{"line":1349,"column":20},"end":{"line":1349,"column":27}},"406":{"start":{"line":1352,"column":16},"end":{"line":1352,"column":69}},"407":{"start":{"line":1353,"column":16},"end":{"line":1353,"column":79}},"408":{"start":{"line":1354,"column":16},"end":{"line":1354,"column":71}},"409":{"start":{"line":1356,"column":16},"end":{"line":1356,"column":90}},"410":{"start":{"line":1359,"column":12},"end":{"line":1369,"column":13}},"411":{"start":{"line":1360,"column":16},"end":{"line":1365,"column":19}},"412":{"start":{"line":1361,"column":20},"end":{"line":1361,"column":69}},"413":{"start":{"line":1361,"column":29},"end":{"line":1361,"column":69}},"414":{"start":{"line":1362,"column":20},"end":{"line":1362,"column":105}},"415":{"start":{"line":1364,"column":20},"end":{"line":1364,"column":27}},"416":{"start":{"line":1368,"column":16},"end":{"line":1368,"column":23}},"417":{"start":{"line":1382,"column":12},"end":{"line":1382,"column":90}},"418":{"start":{"line":1383,"column":12},"end":{"line":1383,"column":51}},"419":{"start":{"line":1384,"column":12},"end":{"line":1384,"column":53}},"420":{"start":{"line":1386,"column":12},"end":{"line":1386,"column":25}},"421":{"start":{"line":1387,"column":12},"end":{"line":1390,"column":13}},"422":{"start":{"line":1388,"column":16},"end":{"line":1388,"column":30}},"423":{"start":{"line":1389,"column":16},"end":{"line":1389,"column":23}},"424":{"start":{"line":1392,"column":12},"end":{"line":1392,"column":67}},"425":{"start":{"line":1393,"column":12},"end":{"line":1393,"column":77}},"426":{"start":{"line":1394,"column":12},"end":{"line":1394,"column":69}},"427":{"start":{"line":1396,"column":12},"end":{"line":1396,"column":92}},"428":{"start":{"line":1409,"column":12},"end":{"line":1409,"column":90}},"429":{"start":{"line":1410,"column":12},"end":{"line":1410,"column":51}},"430":{"start":{"line":1411,"column":12},"end":{"line":1411,"column":53}},"431":{"start":{"line":1413,"column":12},"end":{"line":1413,"column":25}},"432":{"start":{"line":1414,"column":12},"end":{"line":1417,"column":13}},"433":{"start":{"line":1415,"column":16},"end":{"line":1415,"column":30}},"434":{"start":{"line":1416,"column":16},"end":{"line":1416,"column":23}},"435":{"start":{"line":1419,"column":12},"end":{"line":1419,"column":61}},"436":{"start":{"line":1420,"column":12},"end":{"line":1420,"column":71}},"437":{"start":{"line":1421,"column":12},"end":{"line":1421,"column":63}},"438":{"start":{"line":1423,"column":12},"end":{"line":1423,"column":80}},"439":{"start":{"line":1436,"column":12},"end":{"line":1436,"column":90}},"440":{"start":{"line":1437,"column":12},"end":{"line":1437,"column":51}},"441":{"start":{"line":1438,"column":12},"end":{"line":1438,"column":53}},"442":{"start":{"line":1440,"column":12},"end":{"line":1440,"column":25}},"443":{"start":{"line":1441,"column":12},"end":{"line":1444,"column":13}},"444":{"start":{"line":1442,"column":16},"end":{"line":1442,"column":30}},"445":{"start":{"line":1443,"column":16},"end":{"line":1443,"column":23}},"446":{"start":{"line":1446,"column":12},"end":{"line":1446,"column":67}},"447":{"start":{"line":1447,"column":12},"end":{"line":1447,"column":77}},"448":{"start":{"line":1448,"column":12},"end":{"line":1448,"column":69}},"449":{"start":{"line":1450,"column":12},"end":{"line":1450,"column":92}},"450":{"start":{"line":1463,"column":12},"end":{"line":1463,"column":90}},"451":{"start":{"line":1464,"column":12},"end":{"line":1464,"column":51}},"452":{"start":{"line":1465,"column":12},"end":{"line":1465,"column":53}},"453":{"start":{"line":1467,"column":12},"end":{"line":1471,"column":13}},"454":{"start":{"line":1468,"column":16},"end":{"line":1468,"column":63}},"455":{"start":{"line":1469,"column":19},"end":{"line":1471,"column":13}},"456":{"start":{"line":1470,"column":16},"end":{"line":1470,"column":55}},"457":{"start":{"line":1473,"column":12},"end":{"line":1473,"column":25}},"458":{"start":{"line":1474,"column":12},"end":{"line":1477,"column":13}},"459":{"start":{"line":1475,"column":16},"end":{"line":1475,"column":30}},"460":{"start":{"line":1476,"column":16},"end":{"line":1476,"column":23}},"461":{"start":{"line":1479,"column":12},"end":{"line":1479,"column":64}},"462":{"start":{"line":1480,"column":12},"end":{"line":1480,"column":74}},"463":{"start":{"line":1481,"column":12},"end":{"line":1481,"column":66}},"464":{"start":{"line":1483,"column":12},"end":{"line":1483,"column":86}},"465":{"start":{"line":1496,"column":12},"end":{"line":1496,"column":90}},"466":{"start":{"line":1497,"column":12},"end":{"line":1497,"column":51}},"467":{"start":{"line":1498,"column":12},"end":{"line":1498,"column":53}},"468":{"start":{"line":1500,"column":12},"end":{"line":1504,"column":13}},"469":{"start":{"line":1501,"column":16},"end":{"line":1501,"column":55}},"470":{"start":{"line":1502,"column":19},"end":{"line":1504,"column":13}},"471":{"start":{"line":1503,"column":16},"end":{"line":1503,"column":47}},"472":{"start":{"line":1506,"column":12},"end":{"line":1506,"column":25}},"473":{"start":{"line":1507,"column":12},"end":{"line":1510,"column":13}},"474":{"start":{"line":1508,"column":16},"end":{"line":1508,"column":30}},"475":{"start":{"line":1509,"column":16},"end":{"line":1509,"column":23}},"476":{"start":{"line":1512,"column":12},"end":{"line":1512,"column":60}},"477":{"start":{"line":1513,"column":12},"end":{"line":1513,"column":70}},"478":{"start":{"line":1514,"column":12},"end":{"line":1514,"column":62}},"479":{"start":{"line":1516,"column":12},"end":{"line":1516,"column":78}},"480":{"start":{"line":1529,"column":12},"end":{"line":1529,"column":90}},"481":{"start":{"line":1530,"column":12},"end":{"line":1530,"column":51}},"482":{"start":{"line":1531,"column":12},"end":{"line":1531,"column":53}},"483":{"start":{"line":1533,"column":12},"end":{"line":1537,"column":13}},"484":{"start":{"line":1534,"column":16},"end":{"line":1534,"column":59}},"485":{"start":{"line":1535,"column":19},"end":{"line":1537,"column":13}},"486":{"start":{"line":1536,"column":16},"end":{"line":1536,"column":51}},"487":{"start":{"line":1539,"column":12},"end":{"line":1539,"column":25}},"488":{"start":{"line":1540,"column":12},"end":{"line":1543,"column":13}},"489":{"start":{"line":1541,"column":16},"end":{"line":1541,"column":30}},"490":{"start":{"line":1542,"column":16},"end":{"line":1542,"column":23}},"491":{"start":{"line":1545,"column":12},"end":{"line":1545,"column":62}},"492":{"start":{"line":1546,"column":12},"end":{"line":1546,"column":72}},"493":{"start":{"line":1547,"column":12},"end":{"line":1547,"column":64}},"494":{"start":{"line":1549,"column":12},"end":{"line":1549,"column":82}},"495":{"start":{"line":1569,"column":12},"end":{"line":1569,"column":89}},"496":{"start":{"line":1571,"column":12},"end":{"line":1571,"column":31}},"497":{"start":{"line":1572,"column":12},"end":{"line":1576,"column":13}},"498":{"start":{"line":1573,"column":16},"end":{"line":1573,"column":61}},"499":{"start":{"line":1575,"column":16},"end":{"line":1575,"column":94}},"500":{"start":{"line":1578,"column":12},"end":{"line":1578,"column":80}},"501":{"start":{"line":1597,"column":12},"end":{"line":1597,"column":90}},"502":{"start":{"line":1598,"column":12},"end":{"line":1598,"column":51}},"503":{"start":{"line":1599,"column":12},"end":{"line":1599,"column":53}},"504":{"start":{"line":1601,"column":12},"end":{"line":1601,"column":25}},"505":{"start":{"line":1602,"column":12},"end":{"line":1605,"column":13}},"506":{"start":{"line":1603,"column":16},"end":{"line":1603,"column":30}},"507":{"start":{"line":1604,"column":16},"end":{"line":1604,"column":23}},"508":{"start":{"line":1607,"column":12},"end":{"line":1607,"column":65}},"509":{"start":{"line":1608,"column":12},"end":{"line":1608,"column":86}},"510":{"start":{"line":1609,"column":12},"end":{"line":1609,"column":67}},"511":{"start":{"line":1611,"column":12},"end":{"line":1611,"column":85}},"512":{"start":{"line":1625,"column":12},"end":{"line":1625,"column":90}},"513":{"start":{"line":1626,"column":12},"end":{"line":1626,"column":51}},"514":{"start":{"line":1627,"column":12},"end":{"line":1627,"column":53}},"515":{"start":{"line":1629,"column":12},"end":{"line":1629,"column":25}},"516":{"start":{"line":1630,"column":12},"end":{"line":1633,"column":13}},"517":{"start":{"line":1631,"column":16},"end":{"line":1631,"column":30}},"518":{"start":{"line":1632,"column":16},"end":{"line":1632,"column":23}},"519":{"start":{"line":1635,"column":12},"end":{"line":1635,"column":65}},"520":{"start":{"line":1636,"column":12},"end":{"line":1636,"column":80}},"521":{"start":{"line":1637,"column":12},"end":{"line":1637,"column":67}},"522":{"start":{"line":1639,"column":12},"end":{"line":1639,"column":79}},"523":{"start":{"line":1656,"column":12},"end":{"line":1656,"column":90}},"524":{"start":{"line":1657,"column":12},"end":{"line":1657,"column":51}},"525":{"start":{"line":1658,"column":12},"end":{"line":1658,"column":53}},"526":{"start":{"line":1660,"column":12},"end":{"line":1660,"column":25}},"527":{"start":{"line":1661,"column":12},"end":{"line":1664,"column":13}},"528":{"start":{"line":1662,"column":16},"end":{"line":1662,"column":30}},"529":{"start":{"line":1663,"column":16},"end":{"line":1663,"column":23}},"530":{"start":{"line":1666,"column":12},"end":{"line":1666,"column":61}},"531":{"start":{"line":1667,"column":12},"end":{"line":1667,"column":82}},"532":{"start":{"line":1668,"column":12},"end":{"line":1668,"column":63}},"533":{"start":{"line":1670,"column":12},"end":{"line":1670,"column":85}},"534":{"start":{"line":1691,"column":12},"end":{"line":1691,"column":90}},"535":{"start":{"line":1692,"column":12},"end":{"line":1692,"column":51}},"536":{"start":{"line":1693,"column":12},"end":{"line":1693,"column":53}},"537":{"start":{"line":1695,"column":12},"end":{"line":1699,"column":13}},"538":{"start":{"line":1696,"column":16},"end":{"line":1696,"column":63}},"539":{"start":{"line":1697,"column":19},"end":{"line":1699,"column":13}},"540":{"start":{"line":1698,"column":16},"end":{"line":1698,"column":55}},"541":{"start":{"line":1701,"column":12},"end":{"line":1701,"column":25}},"542":{"start":{"line":1702,"column":12},"end":{"line":1705,"column":13}},"543":{"start":{"line":1703,"column":16},"end":{"line":1703,"column":30}},"544":{"start":{"line":1704,"column":16},"end":{"line":1704,"column":23}},"545":{"start":{"line":1707,"column":12},"end":{"line":1707,"column":67}},"546":{"start":{"line":1708,"column":12},"end":{"line":1708,"column":85}},"547":{"start":{"line":1709,"column":12},"end":{"line":1709,"column":69}},"548":{"start":{"line":1711,"column":12},"end":{"line":1711,"column":85}},"549":{"start":{"line":1731,"column":12},"end":{"line":1731,"column":90}},"550":{"start":{"line":1732,"column":12},"end":{"line":1732,"column":51}},"551":{"start":{"line":1733,"column":12},"end":{"line":1733,"column":53}},"552":{"start":{"line":1735,"column":12},"end":{"line":1739,"column":13}},"553":{"start":{"line":1736,"column":16},"end":{"line":1736,"column":55}},"554":{"start":{"line":1737,"column":19},"end":{"line":1739,"column":13}},"555":{"start":{"line":1738,"column":16},"end":{"line":1738,"column":47}},"556":{"start":{"line":1741,"column":12},"end":{"line":1741,"column":25}},"557":{"start":{"line":1742,"column":12},"end":{"line":1745,"column":13}},"558":{"start":{"line":1743,"column":16},"end":{"line":1743,"column":30}},"559":{"start":{"line":1744,"column":16},"end":{"line":1744,"column":23}},"560":{"start":{"line":1747,"column":12},"end":{"line":1747,"column":67}},"561":{"start":{"line":1748,"column":12},"end":{"line":1748,"column":81}},"562":{"start":{"line":1749,"column":12},"end":{"line":1749,"column":69}},"563":{"start":{"line":1751,"column":12},"end":{"line":1751,"column":77}},"564":{"start":{"line":1771,"column":12},"end":{"line":1771,"column":90}},"565":{"start":{"line":1772,"column":12},"end":{"line":1772,"column":51}},"566":{"start":{"line":1773,"column":12},"end":{"line":1773,"column":53}},"567":{"start":{"line":1775,"column":12},"end":{"line":1779,"column":13}},"568":{"start":{"line":1776,"column":16},"end":{"line":1776,"column":59}},"569":{"start":{"line":1777,"column":19},"end":{"line":1779,"column":13}},"570":{"start":{"line":1778,"column":16},"end":{"line":1778,"column":51}},"571":{"start":{"line":1781,"column":12},"end":{"line":1781,"column":25}},"572":{"start":{"line":1782,"column":12},"end":{"line":1785,"column":13}},"573":{"start":{"line":1783,"column":16},"end":{"line":1783,"column":30}},"574":{"start":{"line":1784,"column":16},"end":{"line":1784,"column":23}},"575":{"start":{"line":1787,"column":12},"end":{"line":1787,"column":67}},"576":{"start":{"line":1788,"column":12},"end":{"line":1788,"column":83}},"577":{"start":{"line":1789,"column":12},"end":{"line":1789,"column":69}},"578":{"start":{"line":1791,"column":12},"end":{"line":1791,"column":81}},"579":{"start":{"line":1804,"column":12},"end":{"line":1804,"column":90}},"580":{"start":{"line":1805,"column":12},"end":{"line":1805,"column":51}},"581":{"start":{"line":1806,"column":12},"end":{"line":1806,"column":53}},"582":{"start":{"line":1808,"column":12},"end":{"line":1808,"column":70}},"583":{"start":{"line":1811,"column":12},"end":{"line":1813,"column":13}},"584":{"start":{"line":1812,"column":16},"end":{"line":1812,"column":74}},"585":{"start":{"line":1815,"column":12},"end":{"line":1819,"column":13}},"586":{"start":{"line":1816,"column":16},"end":{"line":1816,"column":88}},"587":{"start":{"line":1818,"column":16},"end":{"line":1818,"column":101}},"588":{"start":{"line":1821,"column":12},"end":{"line":1821,"column":65}},"589":{"start":{"line":1822,"column":12},"end":{"line":1822,"column":86}},"590":{"start":{"line":1823,"column":12},"end":{"line":1823,"column":67}},"591":{"start":{"line":1825,"column":12},"end":{"line":1825,"column":100}},"592":{"start":{"line":1837,"column":12},"end":{"line":1837,"column":57}},"593":{"start":{"line":1838,"column":12},"end":{"line":1838,"column":39}},"594":{"start":{"line":1839,"column":12},"end":{"line":1839,"column":70}},"595":{"start":{"line":1840,"column":12},"end":{"line":1840,"column":84}},"596":{"start":{"line":1841,"column":12},"end":{"line":1841,"column":105}},"597":{"start":{"line":1843,"column":12},"end":{"line":1843,"column":104}},"598":{"start":{"line":1845,"column":12},"end":{"line":1845,"column":28}},"599":{"start":{"line":1847,"column":12},"end":{"line":1849,"column":15}},"600":{"start":{"line":1848,"column":16},"end":{"line":1848,"column":65}},"601":{"start":{"line":1862,"column":12},"end":{"line":1862,"column":90}},"602":{"start":{"line":1863,"column":12},"end":{"line":1863,"column":51}},"603":{"start":{"line":1864,"column":12},"end":{"line":1864,"column":53}},"604":{"start":{"line":1866,"column":12},"end":{"line":1866,"column":53}},"605":{"start":{"line":1867,"column":12},"end":{"line":1867,"column":65}},"606":{"start":{"line":1870,"column":12},"end":{"line":1872,"column":13}},"607":{"start":{"line":1871,"column":16},"end":{"line":1871,"column":74}},"608":{"start":{"line":1874,"column":12},"end":{"line":1878,"column":13}},"609":{"start":{"line":1875,"column":16},"end":{"line":1875,"column":88}},"610":{"start":{"line":1877,"column":16},"end":{"line":1877,"column":101}},"611":{"start":{"line":1880,"column":12},"end":{"line":1880,"column":84}},"612":{"start":{"line":1882,"column":12},"end":{"line":1882,"column":57}},"613":{"start":{"line":1883,"column":12},"end":{"line":1883,"column":39}},"614":{"start":{"line":1884,"column":12},"end":{"line":1884,"column":105}},"615":{"start":{"line":1885,"column":12},"end":{"line":1885,"column":109}},"616":{"start":{"line":1888,"column":12},"end":{"line":1888,"column":28}},"617":{"start":{"line":1889,"column":12},"end":{"line":1891,"column":15}},"618":{"start":{"line":1890,"column":16},"end":{"line":1890,"column":81}},"619":{"start":{"line":1904,"column":12},"end":{"line":1912,"column":13}},"620":{"start":{"line":1905,"column":16},"end":{"line":1905,"column":34}},"621":{"start":{"line":1906,"column":16},"end":{"line":1906,"column":30}},"622":{"start":{"line":1907,"column":16},"end":{"line":1907,"column":28}},"623":{"start":{"line":1909,"column":17},"end":{"line":1912,"column":13}},"624":{"start":{"line":1910,"column":16},"end":{"line":1910,"column":35}},"625":{"start":{"line":1911,"column":16},"end":{"line":1911,"column":29}},"626":{"start":{"line":1914,"column":12},"end":{"line":1914,"column":53}},"627":{"start":{"line":1915,"column":12},"end":{"line":1915,"column":36}},"628":{"start":{"line":1916,"column":12},"end":{"line":1916,"column":73}},"629":{"start":{"line":1919,"column":12},"end":{"line":1921,"column":13}},"630":{"start":{"line":1920,"column":16},"end":{"line":1920,"column":34}},"631":{"start":{"line":1923,"column":12},"end":{"line":1923,"column":62}},"632":{"start":{"line":1924,"column":12},"end":{"line":1924,"column":72}},"633":{"start":{"line":1925,"column":12},"end":{"line":1925,"column":64}},"634":{"start":{"line":1927,"column":12},"end":{"line":1927,"column":101}},"635":{"start":{"line":1930,"column":12},"end":{"line":1930,"column":28}},"636":{"start":{"line":1931,"column":12},"end":{"line":1933,"column":15}},"637":{"start":{"line":1932,"column":16},"end":{"line":1932,"column":74}},"638":{"start":{"line":1945,"column":12},"end":{"line":1945,"column":25}},"639":{"start":{"line":1946,"column":12},"end":{"line":1949,"column":13}},"640":{"start":{"line":1947,"column":16},"end":{"line":1947,"column":30}},"641":{"start":{"line":1948,"column":16},"end":{"line":1948,"column":23}},"642":{"start":{"line":1951,"column":12},"end":{"line":1951,"column":39}},"643":{"start":{"line":1952,"column":12},"end":{"line":1952,"column":75}},"644":{"start":{"line":1953,"column":12},"end":{"line":1953,"column":77}},"645":{"start":{"line":1963,"column":12},"end":{"line":1963,"column":39}},"646":{"start":{"line":1964,"column":12},"end":{"line":1964,"column":75}},"647":{"start":{"line":1965,"column":12},"end":{"line":1965,"column":67}},"648":{"start":{"line":1975,"column":12},"end":{"line":1975,"column":56}},"649":{"start":{"line":1986,"column":12},"end":{"line":1986,"column":28}},"650":{"start":{"line":1987,"column":12},"end":{"line":1998,"column":15}},"651":{"start":{"line":1988,"column":16},"end":{"line":1997,"column":34}},"652":{"start":{"line":1993,"column":44},"end":{"line":1993,"column":65}},"653":{"start":{"line":1994,"column":50},"end":{"line":1994,"column":62}},"654":{"start":{"line":2008,"column":12},"end":{"line":2008,"column":90}},"655":{"start":{"line":2009,"column":12},"end":{"line":2009,"column":51}},"656":{"start":{"line":2010,"column":12},"end":{"line":2010,"column":53}},"657":{"start":{"line":2012,"column":12},"end":{"line":2012,"column":76}},"658":{"start":{"line":2014,"column":12},"end":{"line":2014,"column":92}},"659":{"start":{"line":2015,"column":12},"end":{"line":2034,"column":15}},"660":{"start":{"line":2016,"column":16},"end":{"line":2016,"column":46}},"661":{"start":{"line":2016,"column":25},"end":{"line":2016,"column":46}},"662":{"start":{"line":2018,"column":16},"end":{"line":2018,"column":75}},"663":{"start":{"line":2019,"column":16},"end":{"line":2019,"column":56}},"664":{"start":{"line":2020,"column":16},"end":{"line":2020,"column":54}},"665":{"start":{"line":2021,"column":16},"end":{"line":2021,"column":115}},"666":{"start":{"line":2022,"column":16},"end":{"line":2022,"column":123}},"667":{"start":{"line":2023,"column":16},"end":{"line":2023,"column":81}},"668":{"start":{"line":2026,"column":16},"end":{"line":2028,"column":17}},"669":{"start":{"line":2027,"column":20},"end":{"line":2027,"column":93}},"670":{"start":{"line":2029,"column":16},"end":{"line":2031,"column":17}},"671":{"start":{"line":2030,"column":20},"end":{"line":2030,"column":93}},"672":{"start":{"line":2033,"column":16},"end":{"line":2033,"column":62}},"673":{"start":{"line":2039,"column":12},"end":{"line":2039,"column":90}},"674":{"start":{"line":2040,"column":12},"end":{"line":2040,"column":51}},"675":{"start":{"line":2041,"column":12},"end":{"line":2041,"column":53}},"676":{"start":{"line":2043,"column":12},"end":{"line":2043,"column":28}},"677":{"start":{"line":2045,"column":12},"end":{"line":2062,"column":14}},"678":{"start":{"line":2047,"column":16},"end":{"line":2049,"column":17}},"679":{"start":{"line":2048,"column":20},"end":{"line":2048,"column":52}},"680":{"start":{"line":2051,"column":16},"end":{"line":2051,"column":29}},"681":{"start":{"line":2052,"column":16},"end":{"line":2055,"column":17}},"682":{"start":{"line":2053,"column":20},"end":{"line":2053,"column":34}},"683":{"start":{"line":2054,"column":20},"end":{"line":2054,"column":27}},"684":{"start":{"line":2057,"column":16},"end":{"line":2057,"column":71}},"685":{"start":{"line":2058,"column":16},"end":{"line":2058,"column":85}},"686":{"start":{"line":2059,"column":16},"end":{"line":2059,"column":73}},"687":{"start":{"line":2061,"column":16},"end":{"line":2061,"column":82}},"688":{"start":{"line":2064,"column":12},"end":{"line":2074,"column":13}},"689":{"start":{"line":2065,"column":16},"end":{"line":2070,"column":19}},"690":{"start":{"line":2066,"column":20},"end":{"line":2066,"column":69}},"691":{"start":{"line":2066,"column":29},"end":{"line":2066,"column":69}},"692":{"start":{"line":2067,"column":20},"end":{"line":2067,"column":98}},"693":{"start":{"line":2069,"column":20},"end":{"line":2069,"column":27}},"694":{"start":{"line":2073,"column":16},"end":{"line":2073,"column":23}},"695":{"start":{"line":2079,"column":12},"end":{"line":2079,"column":90}},"696":{"start":{"line":2080,"column":12},"end":{"line":2080,"column":51}},"697":{"start":{"line":2081,"column":12},"end":{"line":2081,"column":53}},"698":{"start":{"line":2083,"column":12},"end":{"line":2083,"column":28}},"699":{"start":{"line":2085,"column":12},"end":{"line":2102,"column":14}},"700":{"start":{"line":2087,"column":16},"end":{"line":2089,"column":17}},"701":{"start":{"line":2088,"column":20},"end":{"line":2088,"column":52}},"702":{"start":{"line":2091,"column":16},"end":{"line":2091,"column":29}},"703":{"start":{"line":2092,"column":16},"end":{"line":2095,"column":17}},"704":{"start":{"line":2093,"column":20},"end":{"line":2093,"column":34}},"705":{"start":{"line":2094,"column":20},"end":{"line":2094,"column":27}},"706":{"start":{"line":2097,"column":16},"end":{"line":2097,"column":71}},"707":{"start":{"line":2098,"column":16},"end":{"line":2098,"column":85}},"708":{"start":{"line":2099,"column":16},"end":{"line":2099,"column":73}},"709":{"start":{"line":2101,"column":16},"end":{"line":2101,"column":82}},"710":{"start":{"line":2104,"column":12},"end":{"line":2114,"column":13}},"711":{"start":{"line":2105,"column":16},"end":{"line":2110,"column":19}},"712":{"start":{"line":2106,"column":20},"end":{"line":2106,"column":69}},"713":{"start":{"line":2106,"column":29},"end":{"line":2106,"column":69}},"714":{"start":{"line":2107,"column":20},"end":{"line":2107,"column":98}},"715":{"start":{"line":2109,"column":20},"end":{"line":2109,"column":27}},"716":{"start":{"line":2113,"column":16},"end":{"line":2113,"column":23}},"717":{"start":{"line":2119,"column":12},"end":{"line":2119,"column":28}},"718":{"start":{"line":2121,"column":12},"end":{"line":2138,"column":15}},"719":{"start":{"line":2122,"column":16},"end":{"line":2122,"column":71}},"720":{"start":{"line":2123,"column":16},"end":{"line":2123,"column":85}},"721":{"start":{"line":2124,"column":16},"end":{"line":2124,"column":73}},"722":{"start":{"line":2126,"column":16},"end":{"line":2137,"column":18}},"723":{"start":{"line":2127,"column":20},"end":{"line":2136,"column":30}},"724":{"start":{"line":2132,"column":40},"end":{"line":2132,"column":64}},"725":{"start":{"line":2133,"column":46},"end":{"line":2133,"column":58}},"726":{"start":{"line":2140,"column":12},"end":{"line":2140,"column":92}},"727":{"start":{"line":2145,"column":12},"end":{"line":2145,"column":67}},"728":{"start":{"line":2146,"column":12},"end":{"line":2146,"column":97}},"729":{"start":{"line":2148,"column":12},"end":{"line":2148,"column":28}},"730":{"start":{"line":2150,"column":12},"end":{"line":2152,"column":15}},"731":{"start":{"line":2151,"column":16},"end":{"line":2151,"column":72}},"732":{"start":{"line":2157,"column":12},"end":{"line":2157,"column":67}},"733":{"start":{"line":2158,"column":12},"end":{"line":2158,"column":97}},"734":{"start":{"line":2159,"column":12},"end":{"line":2159,"column":44}},"735":{"start":{"line":2161,"column":12},"end":{"line":2161,"column":28}},"736":{"start":{"line":2163,"column":12},"end":{"line":2165,"column":15}},"737":{"start":{"line":2164,"column":16},"end":{"line":2164,"column":72}},"738":{"start":{"line":2170,"column":12},"end":{"line":2170,"column":67}},"739":{"start":{"line":2171,"column":12},"end":{"line":2171,"column":96}},"740":{"start":{"line":2173,"column":12},"end":{"line":2173,"column":28}},"741":{"start":{"line":2175,"column":12},"end":{"line":2177,"column":15}},"742":{"start":{"line":2176,"column":16},"end":{"line":2176,"column":75}},"743":{"start":{"line":2182,"column":12},"end":{"line":2182,"column":67}},"744":{"start":{"line":2183,"column":12},"end":{"line":2183,"column":96}},"745":{"start":{"line":2185,"column":12},"end":{"line":2185,"column":28}},"746":{"start":{"line":2187,"column":12},"end":{"line":2189,"column":15}},"747":{"start":{"line":2188,"column":16},"end":{"line":2188,"column":64}},"748":{"start":{"line":2194,"column":12},"end":{"line":2194,"column":67}},"749":{"start":{"line":2195,"column":12},"end":{"line":2195,"column":99}},"750":{"start":{"line":2197,"column":12},"end":{"line":2197,"column":28}},"751":{"start":{"line":2199,"column":12},"end":{"line":2201,"column":15}},"752":{"start":{"line":2200,"column":16},"end":{"line":2200,"column":68}},"753":{"start":{"line":2206,"column":12},"end":{"line":2206,"column":165}},"754":{"start":{"line":2211,"column":12},"end":{"line":2211,"column":161}},"755":{"start":{"line":2216,"column":12},"end":{"line":2216,"column":160}},"756":{"start":{"line":2221,"column":12},"end":{"line":2221,"column":166}},"757":{"start":{"line":2226,"column":12},"end":{"line":2226,"column":168}},"758":{"start":{"line":2237,"column":12},"end":{"line":2239,"column":13}},"759":{"start":{"line":2238,"column":16},"end":{"line":2238,"column":93}},"760":{"start":{"line":2241,"column":12},"end":{"line":2241,"column":28}},"761":{"start":{"line":2243,"column":12},"end":{"line":2246,"column":15}},"762":{"start":{"line":2244,"column":16},"end":{"line":2244,"column":78}},"763":{"start":{"line":2244,"column":25},"end":{"line":2244,"column":78}},"764":{"start":{"line":2245,"column":16},"end":{"line":2245,"column":101}},"765":{"start":{"line":2250,"column":12},"end":{"line":2269,"column":13}},"766":{"start":{"line":2251,"column":16},"end":{"line":2251,"column":38}},"767":{"start":{"line":2252,"column":16},"end":{"line":2266,"column":19}},"768":{"start":{"line":2253,"column":20},"end":{"line":2253,"column":57}},"769":{"start":{"line":2255,"column":20},"end":{"line":2255,"column":39}},"770":{"start":{"line":2256,"column":20},"end":{"line":2263,"column":21}},"771":{"start":{"line":2257,"column":24},"end":{"line":2260,"column":25}},"772":{"start":{"line":2258,"column":28},"end":{"line":2258,"column":37}},"773":{"start":{"line":2259,"column":28},"end":{"line":2259,"column":34}},"774":{"start":{"line":2262,"column":24},"end":{"line":2262,"column":48}},"775":{"start":{"line":2265,"column":20},"end":{"line":2265,"column":43}},"776":{"start":{"line":2268,"column":16},"end":{"line":2268,"column":36}},"777":{"start":{"line":2271,"column":12},"end":{"line":2271,"column":29}},"778":{"start":{"line":2276,"column":12},"end":{"line":2276,"column":28}},"779":{"start":{"line":2278,"column":12},"end":{"line":2278,"column":90}},"780":{"start":{"line":2279,"column":12},"end":{"line":2279,"column":51}},"781":{"start":{"line":2280,"column":12},"end":{"line":2280,"column":53}},"782":{"start":{"line":2282,"column":12},"end":{"line":2295,"column":14}},"783":{"start":{"line":2283,"column":16},"end":{"line":2283,"column":74}},"784":{"start":{"line":2283,"column":25},"end":{"line":2283,"column":74}},"785":{"start":{"line":2284,"column":16},"end":{"line":2284,"column":27}},"786":{"start":{"line":2285,"column":16},"end":{"line":2292,"column":17}},"787":{"start":{"line":2286,"column":20},"end":{"line":2286,"column":46}},"788":{"start":{"line":2289,"column":20},"end":{"line":2291,"column":23}},"789":{"start":{"line":2290,"column":24},"end":{"line":2290,"column":52}},"790":{"start":{"line":2294,"column":16},"end":{"line":2294,"column":61}},"791":{"start":{"line":2298,"column":12},"end":{"line":2323,"column":15}},"792":{"start":{"line":2299,"column":16},"end":{"line":2299,"column":84}},"793":{"start":{"line":2300,"column":16},"end":{"line":2322,"column":17}},"794":{"start":{"line":2301,"column":20},"end":{"line":2301,"column":135}},"795":{"start":{"line":2303,"column":20},"end":{"line":2303,"column":85}},"796":{"start":{"line":2305,"column":20},"end":{"line":2305,"column":75}},"797":{"start":{"line":2306,"column":20},"end":{"line":2318,"column":21}},"798":{"start":{"line":2308,"column":28},"end":{"line":2308,"column":105}},"799":{"start":{"line":2309,"column":28},"end":{"line":2309,"column":34}},"800":{"start":{"line":2313,"column":28},"end":{"line":2315,"column":29}},"801":{"start":{"line":2314,"column":32},"end":{"line":2314,"column":57}},"802":{"start":{"line":2316,"column":28},"end":{"line":2316,"column":111}},"803":{"start":{"line":2317,"column":28},"end":{"line":2317,"column":34}},"804":{"start":{"line":2320,"column":20},"end":{"line":2320,"column":136}},"805":{"start":{"line":2321,"column":20},"end":{"line":2321,"column":93}},"806":{"start":{"line":2328,"column":12},"end":{"line":2342,"column":13}},"807":{"start":{"line":2329,"column":16},"end":{"line":2332,"column":17}},"808":{"start":{"line":2330,"column":20},"end":{"line":2330,"column":57}},"809":{"start":{"line":2331,"column":20},"end":{"line":2331,"column":33}},"810":{"start":{"line":2334,"column":16},"end":{"line":2337,"column":17}},"811":{"start":{"line":2335,"column":20},"end":{"line":2335,"column":63}},"812":{"start":{"line":2336,"column":20},"end":{"line":2336,"column":33}},"813":{"start":{"line":2338,"column":16},"end":{"line":2341,"column":17}},"814":{"start":{"line":2339,"column":20},"end":{"line":2339,"column":58}},"815":{"start":{"line":2340,"column":20},"end":{"line":2340,"column":33}},"816":{"start":{"line":2343,"column":12},"end":{"line":2343,"column":24}},"817":{"start":{"line":2348,"column":12},"end":{"line":2348,"column":78}},"818":{"start":{"line":2349,"column":12},"end":{"line":2351,"column":13}},"819":{"start":{"line":2350,"column":16},"end":{"line":2350,"column":39}},"820":{"start":{"line":2353,"column":12},"end":{"line":2353,"column":75}},"821":{"start":{"line":2354,"column":12},"end":{"line":2354,"column":68}},"822":{"start":{"line":2359,"column":12},"end":{"line":2364,"column":13}},"823":{"start":{"line":2360,"column":16},"end":{"line":2363,"column":18}},"824":{"start":{"line":2366,"column":12},"end":{"line":2366,"column":104}},"825":{"start":{"line":2367,"column":12},"end":{"line":2369,"column":13}},"826":{"start":{"line":2368,"column":16},"end":{"line":2368,"column":34}},"827":{"start":{"line":2370,"column":12},"end":{"line":2370,"column":101}},"828":{"start":{"line":2371,"column":12},"end":{"line":2373,"column":13}},"829":{"start":{"line":2372,"column":16},"end":{"line":2372,"column":34}},"830":{"start":{"line":2374,"column":12},"end":{"line":2374,"column":99}},"831":{"start":{"line":2375,"column":12},"end":{"line":2375,"column":30}},"832":{"start":{"line":2380,"column":12},"end":{"line":2385,"column":13}},"833":{"start":{"line":2381,"column":16},"end":{"line":2384,"column":18}},"834":{"start":{"line":2387,"column":12},"end":{"line":2396,"column":13}},"835":{"start":{"line":2388,"column":16},"end":{"line":2390,"column":18}},"836":{"start":{"line":2392,"column":16},"end":{"line":2395,"column":18}},"837":{"start":{"line":2401,"column":12},"end":{"line":2405,"column":13}},"838":{"start":{"line":2402,"column":16},"end":{"line":2402,"column":36}},"839":{"start":{"line":2404,"column":16},"end":{"line":2404,"column":80}},"840":{"start":{"line":2410,"column":12},"end":{"line":2422,"column":13}},"841":{"start":{"line":2411,"column":16},"end":{"line":2415,"column":17}},"842":{"start":{"line":2412,"column":20},"end":{"line":2412,"column":78}},"843":{"start":{"line":2414,"column":20},"end":{"line":2414,"column":57}},"844":{"start":{"line":2417,"column":16},"end":{"line":2421,"column":17}},"845":{"start":{"line":2418,"column":20},"end":{"line":2418,"column":67}},"846":{"start":{"line":2420,"column":20},"end":{"line":2420,"column":46}},"847":{"start":{"line":2427,"column":12},"end":{"line":2429,"column":13}},"848":{"start":{"line":2428,"column":16},"end":{"line":2428,"column":89}},"849":{"start":{"line":2431,"column":12},"end":{"line":2433,"column":13}},"850":{"start":{"line":2432,"column":16},"end":{"line":2432,"column":144}},"851":{"start":{"line":2435,"column":12},"end":{"line":2435,"column":59}},"852":{"start":{"line":2440,"column":12},"end":{"line":2440,"column":34}},"853":{"start":{"line":2443,"column":12},"end":{"line":2452,"column":13}},"854":{"start":{"line":2444,"column":16},"end":{"line":2444,"column":39}},"855":{"start":{"line":2445,"column":19},"end":{"line":2452,"column":13}},"856":{"start":{"line":2446,"column":16},"end":{"line":2446,"column":37}},"857":{"start":{"line":2447,"column":16},"end":{"line":2447,"column":39}},"858":{"start":{"line":2448,"column":19},"end":{"line":2452,"column":13}},"859":{"start":{"line":2449,"column":16},"end":{"line":2449,"column":139}},"860":{"start":{"line":2451,"column":16},"end":{"line":2451,"column":36}},"861":{"start":{"line":2455,"column":12},"end":{"line":2459,"column":13}},"862":{"start":{"line":2456,"column":16},"end":{"line":2456,"column":143}},"863":{"start":{"line":2457,"column":19},"end":{"line":2459,"column":13}},"864":{"start":{"line":2458,"column":16},"end":{"line":2458,"column":37}},"865":{"start":{"line":2461,"column":12},"end":{"line":2461,"column":60}},"866":{"start":{"line":2467,"column":12},"end":{"line":2467,"column":33}},"867":{"start":{"line":2468,"column":12},"end":{"line":2468,"column":22}},"868":{"start":{"line":2469,"column":12},"end":{"line":2472,"column":15}},"869":{"start":{"line":2471,"column":16},"end":{"line":2471,"column":46}},"870":{"start":{"line":2574,"column":0},"end":{"line":2580,"column":1}},"871":{"start":{"line":2575,"column":4},"end":{"line":2575,"column":44}},"872":{"start":{"line":2576,"column":4},"end":{"line":2576,"column":42}},"873":{"start":{"line":2577,"column":4},"end":{"line":2577,"column":40}},"874":{"start":{"line":2578,"column":4},"end":{"line":2578,"column":24}},"875":{"start":{"line":2579,"column":4},"end":{"line":2579,"column":34}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":12}},{"start":{"line":53,"column":12},"end":{"line":53,"column":12}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":32},"end":{"line":63,"column":48}},{"start":{"line":63,"column":52},"end":{"line":63,"column":89}}]},"4":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"5":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":12},"end":{"line":128,"column":12}},{"start":{"line":128,"column":12},"end":{"line":128,"column":12}}]},"6":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"7":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":12},"end":{"line":193,"column":12}},{"start":{"line":193,"column":12},"end":{"line":193,"column":12}}]},"8":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":16},"end":{"line":193,"column":47}},{"start":{"line":193,"column":51},"end":{"line":193,"column":77}}]},"9":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":12},"end":{"line":223,"column":12}},{"start":{"line":223,"column":12},"end":{"line":223,"column":12}}]},"10":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":12},"end":{"line":251,"column":12}},{"start":{"line":251,"column":12},"end":{"line":251,"column":12}}]},"11":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":12},"end":{"line":282,"column":12}},{"start":{"line":282,"column":12},"end":{"line":282,"column":12}}]},"12":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12}},{"start":{"line":316,"column":12},"end":{"line":316,"column":12}}]},"13":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":19},"end":{"line":318,"column":19}},{"start":{"line":318,"column":19},"end":{"line":318,"column":19}}]},"14":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":12},"end":{"line":323,"column":12}},{"start":{"line":323,"column":12},"end":{"line":323,"column":12}}]},"15":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":12},"end":{"line":356,"column":12}},{"start":{"line":356,"column":12},"end":{"line":356,"column":12}}]},"16":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":19},"end":{"line":358,"column":19}},{"start":{"line":358,"column":19},"end":{"line":358,"column":19}}]},"17":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":12},"end":{"line":363,"column":12}},{"start":{"line":363,"column":12},"end":{"line":363,"column":12}}]},"18":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":12},"end":{"line":396,"column":12}},{"start":{"line":396,"column":12},"end":{"line":396,"column":12}}]},"19":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":19},"end":{"line":398,"column":19}},{"start":{"line":398,"column":19},"end":{"line":398,"column":19}}]},"20":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":12},"end":{"line":403,"column":12}},{"start":{"line":403,"column":12},"end":{"line":403,"column":12}}]},"21":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":12},"end":{"line":432,"column":12}},{"start":{"line":432,"column":12},"end":{"line":432,"column":12}}]},"22":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":12},"end":{"line":436,"column":12}},{"start":{"line":436,"column":12},"end":{"line":436,"column":12}}]},"23":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":16},"end":{"line":487,"column":16}},{"start":{"line":487,"column":16},"end":{"line":487,"column":16}}]},"24":{"line":852,"type":"if","locations":[{"start":{"line":852,"column":12},"end":{"line":852,"column":12}},{"start":{"line":852,"column":12},"end":{"line":852,"column":12}}]},"25":{"line":852,"type":"binary-expr","locations":[{"start":{"line":852,"column":16},"end":{"line":852,"column":47}},{"start":{"line":852,"column":51},"end":{"line":852,"column":77}}]},"26":{"line":855,"type":"binary-expr","locations":[{"start":{"line":855,"column":67},"end":{"line":855,"column":74}},{"start":{"line":855,"column":78},"end":{"line":855,"column":98}}]},"27":{"line":1317,"type":"if","locations":[{"start":{"line":1317,"column":12},"end":{"line":1317,"column":12}},{"start":{"line":1317,"column":12},"end":{"line":1317,"column":12}}]},"28":{"line":1347,"type":"if","locations":[{"start":{"line":1347,"column":16},"end":{"line":1347,"column":16}},{"start":{"line":1347,"column":16},"end":{"line":1347,"column":16}}]},"29":{"line":1359,"type":"if","locations":[{"start":{"line":1359,"column":12},"end":{"line":1359,"column":12}},{"start":{"line":1359,"column":12},"end":{"line":1359,"column":12}}]},"30":{"line":1361,"type":"if","locations":[{"start":{"line":1361,"column":20},"end":{"line":1361,"column":20}},{"start":{"line":1361,"column":20},"end":{"line":1361,"column":20}}]},"31":{"line":1387,"type":"if","locations":[{"start":{"line":1387,"column":12},"end":{"line":1387,"column":12}},{"start":{"line":1387,"column":12},"end":{"line":1387,"column":12}}]},"32":{"line":1414,"type":"if","locations":[{"start":{"line":1414,"column":12},"end":{"line":1414,"column":12}},{"start":{"line":1414,"column":12},"end":{"line":1414,"column":12}}]},"33":{"line":1441,"type":"if","locations":[{"start":{"line":1441,"column":12},"end":{"line":1441,"column":12}},{"start":{"line":1441,"column":12},"end":{"line":1441,"column":12}}]},"34":{"line":1467,"type":"if","locations":[{"start":{"line":1467,"column":12},"end":{"line":1467,"column":12}},{"start":{"line":1467,"column":12},"end":{"line":1467,"column":12}}]},"35":{"line":1469,"type":"if","locations":[{"start":{"line":1469,"column":19},"end":{"line":1469,"column":19}},{"start":{"line":1469,"column":19},"end":{"line":1469,"column":19}}]},"36":{"line":1474,"type":"if","locations":[{"start":{"line":1474,"column":12},"end":{"line":1474,"column":12}},{"start":{"line":1474,"column":12},"end":{"line":1474,"column":12}}]},"37":{"line":1500,"type":"if","locations":[{"start":{"line":1500,"column":12},"end":{"line":1500,"column":12}},{"start":{"line":1500,"column":12},"end":{"line":1500,"column":12}}]},"38":{"line":1502,"type":"if","locations":[{"start":{"line":1502,"column":19},"end":{"line":1502,"column":19}},{"start":{"line":1502,"column":19},"end":{"line":1502,"column":19}}]},"39":{"line":1507,"type":"if","locations":[{"start":{"line":1507,"column":12},"end":{"line":1507,"column":12}},{"start":{"line":1507,"column":12},"end":{"line":1507,"column":12}}]},"40":{"line":1533,"type":"if","locations":[{"start":{"line":1533,"column":12},"end":{"line":1533,"column":12}},{"start":{"line":1533,"column":12},"end":{"line":1533,"column":12}}]},"41":{"line":1535,"type":"if","locations":[{"start":{"line":1535,"column":19},"end":{"line":1535,"column":19}},{"start":{"line":1535,"column":19},"end":{"line":1535,"column":19}}]},"42":{"line":1540,"type":"if","locations":[{"start":{"line":1540,"column":12},"end":{"line":1540,"column":12}},{"start":{"line":1540,"column":12},"end":{"line":1540,"column":12}}]},"43":{"line":1572,"type":"if","locations":[{"start":{"line":1572,"column":12},"end":{"line":1572,"column":12}},{"start":{"line":1572,"column":12},"end":{"line":1572,"column":12}}]},"44":{"line":1572,"type":"binary-expr","locations":[{"start":{"line":1572,"column":16},"end":{"line":1572,"column":47}},{"start":{"line":1572,"column":51},"end":{"line":1572,"column":77}}]},"45":{"line":1602,"type":"if","locations":[{"start":{"line":1602,"column":12},"end":{"line":1602,"column":12}},{"start":{"line":1602,"column":12},"end":{"line":1602,"column":12}}]},"46":{"line":1630,"type":"if","locations":[{"start":{"line":1630,"column":12},"end":{"line":1630,"column":12}},{"start":{"line":1630,"column":12},"end":{"line":1630,"column":12}}]},"47":{"line":1661,"type":"if","locations":[{"start":{"line":1661,"column":12},"end":{"line":1661,"column":12}},{"start":{"line":1661,"column":12},"end":{"line":1661,"column":12}}]},"48":{"line":1695,"type":"if","locations":[{"start":{"line":1695,"column":12},"end":{"line":1695,"column":12}},{"start":{"line":1695,"column":12},"end":{"line":1695,"column":12}}]},"49":{"line":1697,"type":"if","locations":[{"start":{"line":1697,"column":19},"end":{"line":1697,"column":19}},{"start":{"line":1697,"column":19},"end":{"line":1697,"column":19}}]},"50":{"line":1702,"type":"if","locations":[{"start":{"line":1702,"column":12},"end":{"line":1702,"column":12}},{"start":{"line":1702,"column":12},"end":{"line":1702,"column":12}}]},"51":{"line":1735,"type":"if","locations":[{"start":{"line":1735,"column":12},"end":{"line":1735,"column":12}},{"start":{"line":1735,"column":12},"end":{"line":1735,"column":12}}]},"52":{"line":1737,"type":"if","locations":[{"start":{"line":1737,"column":19},"end":{"line":1737,"column":19}},{"start":{"line":1737,"column":19},"end":{"line":1737,"column":19}}]},"53":{"line":1742,"type":"if","locations":[{"start":{"line":1742,"column":12},"end":{"line":1742,"column":12}},{"start":{"line":1742,"column":12},"end":{"line":1742,"column":12}}]},"54":{"line":1775,"type":"if","locations":[{"start":{"line":1775,"column":12},"end":{"line":1775,"column":12}},{"start":{"line":1775,"column":12},"end":{"line":1775,"column":12}}]},"55":{"line":1777,"type":"if","locations":[{"start":{"line":1777,"column":19},"end":{"line":1777,"column":19}},{"start":{"line":1777,"column":19},"end":{"line":1777,"column":19}}]},"56":{"line":1782,"type":"if","locations":[{"start":{"line":1782,"column":12},"end":{"line":1782,"column":12}},{"start":{"line":1782,"column":12},"end":{"line":1782,"column":12}}]},"57":{"line":1811,"type":"if","locations":[{"start":{"line":1811,"column":12},"end":{"line":1811,"column":12}},{"start":{"line":1811,"column":12},"end":{"line":1811,"column":12}}]},"58":{"line":1815,"type":"if","locations":[{"start":{"line":1815,"column":12},"end":{"line":1815,"column":12}},{"start":{"line":1815,"column":12},"end":{"line":1815,"column":12}}]},"59":{"line":1870,"type":"if","locations":[{"start":{"line":1870,"column":12},"end":{"line":1870,"column":12}},{"start":{"line":1870,"column":12},"end":{"line":1870,"column":12}}]},"60":{"line":1874,"type":"if","locations":[{"start":{"line":1874,"column":12},"end":{"line":1874,"column":12}},{"start":{"line":1874,"column":12},"end":{"line":1874,"column":12}}]},"61":{"line":1904,"type":"if","locations":[{"start":{"line":1904,"column":12},"end":{"line":1904,"column":12}},{"start":{"line":1904,"column":12},"end":{"line":1904,"column":12}}]},"62":{"line":1904,"type":"binary-expr","locations":[{"start":{"line":1904,"column":16},"end":{"line":1904,"column":25}},{"start":{"line":1904,"column":29},"end":{"line":1904,"column":37}}]},"63":{"line":1909,"type":"if","locations":[{"start":{"line":1909,"column":17},"end":{"line":1909,"column":17}},{"start":{"line":1909,"column":17},"end":{"line":1909,"column":17}}]},"64":{"line":1919,"type":"if","locations":[{"start":{"line":1919,"column":12},"end":{"line":1919,"column":12}},{"start":{"line":1919,"column":12},"end":{"line":1919,"column":12}}]},"65":{"line":1919,"type":"binary-expr","locations":[{"start":{"line":1919,"column":16},"end":{"line":1919,"column":31}},{"start":{"line":1919,"column":35},"end":{"line":1919,"column":55}},{"start":{"line":1919,"column":59},"end":{"line":1919,"column":87}}]},"66":{"line":1946,"type":"if","locations":[{"start":{"line":1946,"column":12},"end":{"line":1946,"column":12}},{"start":{"line":1946,"column":12},"end":{"line":1946,"column":12}}]},"67":{"line":2012,"type":"binary-expr","locations":[{"start":{"line":2012,"column":32},"end":{"line":2012,"column":53}},{"start":{"line":2012,"column":57},"end":{"line":2012,"column":75}}]},"68":{"line":2016,"type":"if","locations":[{"start":{"line":2016,"column":16},"end":{"line":2016,"column":16}},{"start":{"line":2016,"column":16},"end":{"line":2016,"column":16}}]},"69":{"line":2026,"type":"if","locations":[{"start":{"line":2026,"column":16},"end":{"line":2026,"column":16}},{"start":{"line":2026,"column":16},"end":{"line":2026,"column":16}}]},"70":{"line":2029,"type":"if","locations":[{"start":{"line":2029,"column":16},"end":{"line":2029,"column":16}},{"start":{"line":2029,"column":16},"end":{"line":2029,"column":16}}]},"71":{"line":2047,"type":"if","locations":[{"start":{"line":2047,"column":16},"end":{"line":2047,"column":16}},{"start":{"line":2047,"column":16},"end":{"line":2047,"column":16}}]},"72":{"line":2047,"type":"binary-expr","locations":[{"start":{"line":2047,"column":21},"end":{"line":2047,"column":42}},{"start":{"line":2047,"column":46},"end":{"line":2047,"column":60}},{"start":{"line":2047,"column":65},"end":{"line":2047,"column":102}}]},"73":{"line":2052,"type":"if","locations":[{"start":{"line":2052,"column":16},"end":{"line":2052,"column":16}},{"start":{"line":2052,"column":16},"end":{"line":2052,"column":16}}]},"74":{"line":2064,"type":"if","locations":[{"start":{"line":2064,"column":12},"end":{"line":2064,"column":12}},{"start":{"line":2064,"column":12},"end":{"line":2064,"column":12}}]},"75":{"line":2066,"type":"if","locations":[{"start":{"line":2066,"column":20},"end":{"line":2066,"column":20}},{"start":{"line":2066,"column":20},"end":{"line":2066,"column":20}}]},"76":{"line":2087,"type":"if","locations":[{"start":{"line":2087,"column":16},"end":{"line":2087,"column":16}},{"start":{"line":2087,"column":16},"end":{"line":2087,"column":16}}]},"77":{"line":2087,"type":"binary-expr","locations":[{"start":{"line":2087,"column":21},"end":{"line":2087,"column":42}},{"start":{"line":2087,"column":46},"end":{"line":2087,"column":60}},{"start":{"line":2087,"column":65},"end":{"line":2087,"column":102}}]},"78":{"line":2092,"type":"if","locations":[{"start":{"line":2092,"column":16},"end":{"line":2092,"column":16}},{"start":{"line":2092,"column":16},"end":{"line":2092,"column":16}}]},"79":{"line":2104,"type":"if","locations":[{"start":{"line":2104,"column":12},"end":{"line":2104,"column":12}},{"start":{"line":2104,"column":12},"end":{"line":2104,"column":12}}]},"80":{"line":2106,"type":"if","locations":[{"start":{"line":2106,"column":20},"end":{"line":2106,"column":20}},{"start":{"line":2106,"column":20},"end":{"line":2106,"column":20}}]},"81":{"line":2145,"type":"binary-expr","locations":[{"start":{"line":2145,"column":29},"end":{"line":2145,"column":43}},{"start":{"line":2145,"column":47},"end":{"line":2145,"column":66}}]},"82":{"line":2157,"type":"binary-expr","locations":[{"start":{"line":2157,"column":29},"end":{"line":2157,"column":43}},{"start":{"line":2157,"column":47},"end":{"line":2157,"column":66}}]},"83":{"line":2170,"type":"binary-expr","locations":[{"start":{"line":2170,"column":29},"end":{"line":2170,"column":43}},{"start":{"line":2170,"column":47},"end":{"line":2170,"column":66}}]},"84":{"line":2182,"type":"binary-expr","locations":[{"start":{"line":2182,"column":29},"end":{"line":2182,"column":43}},{"start":{"line":2182,"column":47},"end":{"line":2182,"column":66}}]},"85":{"line":2194,"type":"binary-expr","locations":[{"start":{"line":2194,"column":29},"end":{"line":2194,"column":43}},{"start":{"line":2194,"column":47},"end":{"line":2194,"column":66}}]},"86":{"line":2237,"type":"if","locations":[{"start":{"line":2237,"column":12},"end":{"line":2237,"column":12}},{"start":{"line":2237,"column":12},"end":{"line":2237,"column":12}}]},"87":{"line":2244,"type":"if","locations":[{"start":{"line":2244,"column":16},"end":{"line":2244,"column":16}},{"start":{"line":2244,"column":16},"end":{"line":2244,"column":16}}]},"88":{"line":2250,"type":"if","locations":[{"start":{"line":2250,"column":12},"end":{"line":2250,"column":12}},{"start":{"line":2250,"column":12},"end":{"line":2250,"column":12}}]},"89":{"line":2250,"type":"binary-expr","locations":[{"start":{"line":2250,"column":16},"end":{"line":2250,"column":38}},{"start":{"line":2250,"column":42},"end":{"line":2250,"column":70}},{"start":{"line":2250,"column":74},"end":{"line":2250,"column":113}}]},"90":{"line":2257,"type":"if","locations":[{"start":{"line":2257,"column":24},"end":{"line":2257,"column":24}},{"start":{"line":2257,"column":24},"end":{"line":2257,"column":24}}]},"91":{"line":2283,"type":"if","locations":[{"start":{"line":2283,"column":16},"end":{"line":2283,"column":16}},{"start":{"line":2283,"column":16},"end":{"line":2283,"column":16}}]},"92":{"line":2285,"type":"if","locations":[{"start":{"line":2285,"column":16},"end":{"line":2285,"column":16}},{"start":{"line":2285,"column":16},"end":{"line":2285,"column":16}}]},"93":{"line":2300,"type":"if","locations":[{"start":{"line":2300,"column":16},"end":{"line":2300,"column":16}},{"start":{"line":2300,"column":16},"end":{"line":2300,"column":16}}]},"94":{"line":2306,"type":"switch","locations":[{"start":{"line":2307,"column":24},"end":{"line":2309,"column":34}},{"start":{"line":2310,"column":24},"end":{"line":2310,"column":73}},{"start":{"line":2311,"column":24},"end":{"line":2311,"column":75}},{"start":{"line":2312,"column":24},"end":{"line":2317,"column":34}}]},"95":{"line":2313,"type":"if","locations":[{"start":{"line":2313,"column":28},"end":{"line":2313,"column":28}},{"start":{"line":2313,"column":28},"end":{"line":2313,"column":28}}]},"96":{"line":2328,"type":"if","locations":[{"start":{"line":2328,"column":12},"end":{"line":2328,"column":12}},{"start":{"line":2328,"column":12},"end":{"line":2328,"column":12}}]},"97":{"line":2329,"type":"if","locations":[{"start":{"line":2329,"column":16},"end":{"line":2329,"column":16}},{"start":{"line":2329,"column":16},"end":{"line":2329,"column":16}}]},"98":{"line":2334,"type":"if","locations":[{"start":{"line":2334,"column":16},"end":{"line":2334,"column":16}},{"start":{"line":2334,"column":16},"end":{"line":2334,"column":16}}]},"99":{"line":2334,"type":"binary-expr","locations":[{"start":{"line":2334,"column":20},"end":{"line":2334,"column":51}},{"start":{"line":2334,"column":55},"end":{"line":2334,"column":87}},{"start":{"line":2334,"column":91},"end":{"line":2334,"column":122}},{"start":{"line":2334,"column":126},"end":{"line":2334,"column":157}}]},"100":{"line":2338,"type":"if","locations":[{"start":{"line":2338,"column":16},"end":{"line":2338,"column":16}},{"start":{"line":2338,"column":16},"end":{"line":2338,"column":16}}]},"101":{"line":2349,"type":"if","locations":[{"start":{"line":2349,"column":12},"end":{"line":2349,"column":12}},{"start":{"line":2349,"column":12},"end":{"line":2349,"column":12}}]},"102":{"line":2359,"type":"if","locations":[{"start":{"line":2359,"column":12},"end":{"line":2359,"column":12}},{"start":{"line":2359,"column":12},"end":{"line":2359,"column":12}}]},"103":{"line":2359,"type":"binary-expr","locations":[{"start":{"line":2359,"column":16},"end":{"line":2359,"column":40}},{"start":{"line":2359,"column":44},"end":{"line":2359,"column":73}}]},"104":{"line":2367,"type":"if","locations":[{"start":{"line":2367,"column":12},"end":{"line":2367,"column":12}},{"start":{"line":2367,"column":12},"end":{"line":2367,"column":12}}]},"105":{"line":2371,"type":"if","locations":[{"start":{"line":2371,"column":12},"end":{"line":2371,"column":12}},{"start":{"line":2371,"column":12},"end":{"line":2371,"column":12}}]},"106":{"line":2380,"type":"if","locations":[{"start":{"line":2380,"column":12},"end":{"line":2380,"column":12}},{"start":{"line":2380,"column":12},"end":{"line":2380,"column":12}}]},"107":{"line":2380,"type":"binary-expr","locations":[{"start":{"line":2380,"column":16},"end":{"line":2380,"column":40}},{"start":{"line":2380,"column":44},"end":{"line":2380,"column":73}}]},"108":{"line":2387,"type":"if","locations":[{"start":{"line":2387,"column":12},"end":{"line":2387,"column":12}},{"start":{"line":2387,"column":12},"end":{"line":2387,"column":12}}]},"109":{"line":2401,"type":"if","locations":[{"start":{"line":2401,"column":12},"end":{"line":2401,"column":12}},{"start":{"line":2401,"column":12},"end":{"line":2401,"column":12}}]},"110":{"line":2410,"type":"if","locations":[{"start":{"line":2410,"column":12},"end":{"line":2410,"column":12}},{"start":{"line":2410,"column":12},"end":{"line":2410,"column":12}}]},"111":{"line":2411,"type":"if","locations":[{"start":{"line":2411,"column":16},"end":{"line":2411,"column":16}},{"start":{"line":2411,"column":16},"end":{"line":2411,"column":16}}]},"112":{"line":2417,"type":"if","locations":[{"start":{"line":2417,"column":16},"end":{"line":2417,"column":16}},{"start":{"line":2417,"column":16},"end":{"line":2417,"column":16}}]},"113":{"line":2427,"type":"if","locations":[{"start":{"line":2427,"column":12},"end":{"line":2427,"column":12}},{"start":{"line":2427,"column":12},"end":{"line":2427,"column":12}}]},"114":{"line":2427,"type":"binary-expr","locations":[{"start":{"line":2427,"column":16},"end":{"line":2427,"column":37}},{"start":{"line":2427,"column":41},"end":{"line":2427,"column":57}}]},"115":{"line":2431,"type":"if","locations":[{"start":{"line":2431,"column":12},"end":{"line":2431,"column":12}},{"start":{"line":2431,"column":12},"end":{"line":2431,"column":12}}]},"116":{"line":2443,"type":"if","locations":[{"start":{"line":2443,"column":12},"end":{"line":2443,"column":12}},{"start":{"line":2443,"column":12},"end":{"line":2443,"column":12}}]},"117":{"line":2445,"type":"if","locations":[{"start":{"line":2445,"column":19},"end":{"line":2445,"column":19}},{"start":{"line":2445,"column":19},"end":{"line":2445,"column":19}}]},"118":{"line":2445,"type":"binary-expr","locations":[{"start":{"line":2445,"column":23},"end":{"line":2445,"column":47}},{"start":{"line":2445,"column":51},"end":{"line":2445,"column":82}}]},"119":{"line":2448,"type":"if","locations":[{"start":{"line":2448,"column":19},"end":{"line":2448,"column":19}},{"start":{"line":2448,"column":19},"end":{"line":2448,"column":19}}]},"120":{"line":2455,"type":"if","locations":[{"start":{"line":2455,"column":12},"end":{"line":2455,"column":12}},{"start":{"line":2455,"column":12},"end":{"line":2455,"column":12}}]},"121":{"line":2455,"type":"binary-expr","locations":[{"start":{"line":2455,"column":16},"end":{"line":2455,"column":40}},{"start":{"line":2455,"column":44},"end":{"line":2455,"column":76}}]},"122":{"line":2457,"type":"if","locations":[{"start":{"line":2457,"column":19},"end":{"line":2457,"column":19}},{"start":{"line":2457,"column":19},"end":{"line":2457,"column":19}}]},"123":{"line":2471,"type":"binary-expr","locations":[{"start":{"line":2471,"column":23},"end":{"line":2471,"column":32}},{"start":{"line":2471,"column":36},"end":{"line":2471,"column":45}}]},"124":{"line":2574,"type":"if","locations":[{"start":{"line":2574,"column":0},"end":{"line":2574,"column":0}},{"start":{"line":2574,"column":0},"end":{"line":2574,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\")","  , AzureDocuments = require(\"./documents\")","  , QueryIterator = require(\"./queryIterator\")","  , RequestHandler = require(\"./request\")","  , RetryOptions = require(\"./retryOptions\")","  , GlobalEndpointManager = require(\"./globalEndpointManager\")","  , Constants = require(\"./constants\");","","//SCRIPT START","var DocumentClient = Base.defineClass(","    /**","     * Provides a client-side logical representation of the Azure DocumentDB database account.","     * This client is used to configure and execute requests in the Azure DocumentDB database service.","     * @constructor DocumentClient","     * @param {string} urlConnection           - The service endpoint to use to create the client.","     * @param {object} auth                    - An object that is used for authenticating requests and must contains one of the options","     * @param {string} [auth.masterKey]        - The authorization master key to use to create the client.","     * @param {Object} [auth.resourceTokens]   - An object that contains resources tokens. Keys for the object are resource Ids and values are the resource tokens.","     * @param {Array}  [auth.permissionFeed]   - An array of {@link Permission} objects.","     * @param {object} [connectionPolicy]      - An instance of {@link ConnectionPolicy} class. This parameter is optional and the default connectionPolicy will be used if omitted.","     * @param {string} [consistencyLevel]      - An optional parameter that represents the consistency level. It can take any value from {@link ConsistencyLevel}.","    */","    function DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel) {","        this.urlConnection = urlConnection;","        if (auth !== undefined) {","            this.masterKey = auth.masterKey;","            this.resourceTokens = auth.resourceTokens;","            if (auth.permissionFeed) {","                this.resourceTokens = {};","                for (var i = 0; i < auth.permissionFeed.length; i++) {","                    var resourceParts = auth.permissionFeed[i].resource.split(\"/\");","                    var rid = resourceParts[resourceParts.length - 1];","                    this.resourceTokens[rid] = auth.permissionFeed[i]._token;","                }","            }","        }","        ","        this.connectionPolicy = connectionPolicy || new AzureDocuments.ConnectionPolicy();","        this.defaultHeaders = {};","        this.defaultHeaders[Constants.HttpHeaders.CacheControl] = \"no-cache\";","        this.defaultHeaders[Constants.HttpHeaders.Version] = Constants.CurrentVersion;","        if (consistencyLevel !== undefined) {","            this.defaultHeaders[Constants.HttpHeaders.ConsistencyLevel] = consistencyLevel;","        }","","        this.defaultHeaders[Constants.HttpHeaders.UserAgent] = Base._getUserAgent();","        ","        // overide this for default query params to be added to the url.","        this.defaultUrlParams = \"\";","        ","        // Query compatibility mode.","        // Allows to specify compatibility mode used by client when making query requests. Should be removed when","        // application/sql is no longer supported.","        this.queryCompatibilityMode = AzureDocuments.QueryCompatibilityMode.Default;","        this.partitionResolvers = {};","        ","        this.partitionKeyDefinitionCache = {};","","        this._globalEndpointManager = new GlobalEndpointManager(this);","    }, ","    {","        /** Gets the curent write endpoint for a geo-replicated database account.","         * @memberof DocumentClient","         * @instance","         * @param {function} callback        - The callback function which takes endpoint(string) as an argument.","        */","        getWriteEndpoint: function (callback) {","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                callback(writeEndpoint);","            });","        },","","        /** Gets the curent read endpoint for a geo-replicated database account.","         * @memberof DocumentClient","         * @instance","         * @param {function} callback        - The callback function which takes endpoint(string) as an argument.","        */","        getReadEndpoint: function (callback) {","            this._globalEndpointManager.getReadEndpoint(function (readEndpoint) {","                callback(readEndpoint);","            });","        },","","        /** Send a request for creating a database.","         * <p>","         *  A database manages users, permissions and a set of collections.  <br>","         *  Each Azure DocumentDB Database Account is able to support multiple independent named databases, with the database being the logical container for data. <br>","         *  Each Database consists of one or more collections, each of which in turn contain one or more documents. Since databases are an an administrative resource, the Service Master Key will be required in order to access and successfully complete any action using the User APIs. <br>","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {Object} body              - A json object that represents The database to be created.","         * @param {string} body.id           - The id of the database.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        createDatabase: function (body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var path = \"/dbs\";","            this.create(body, path, \"dbs\", undefined, undefined, options, callback);","        },","        ","        /**","         * Creates a collection.","         * <p>","         * A collection is a named logical container for documents. <br>","         * A database may contain zero or more named collections and each collection consists of zero or more JSON documents. <br>","         * Being schema-free, the documents in a collection do not need to share the same structure or fields. <br>","         * Since collections are application resources, they can be authorized using either the master key or resource keys. <br>","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink                  - The self-link of the database.","         * @param {object} body                          - Represents the body of the collection.","         * @param {string} body.id                       - The id of the collection.","         * @param {IndexingPolicy} body.indexingPolicy   - The indexing policy associated with the collection.","         * @param {number} body.defaultTtl               - The default time to live in seconds for documents in a collection.","         * @param {RequestOptions} [options]             - The request options.","         * @param {RequestCallback} callback             - The callback for the request.","         */","        createCollection: function (databaseLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(databaseLink);","            var path = this.getPathFromLink(databaseLink, \"colls\", isNameBased);","            var id = this.getIdFromLink(databaseLink, isNameBased);","            ","            this.create(body, path, \"colls\", id, undefined, options, callback);","        },","        ","        /**","         * Create a document.","         * <p>","         * There is no set schema for JSON documents. They may contain any number of custom properties as well as an optional list of attachments. <br>","         * A Document is an application resource and can be authorized using the master key or resource keys","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} documentsFeedOrDatabaseLink               - The collection link or database link if using a partition resolver","         * @param {object} body                                      - Represents the body of the document. Can contain any number of user defined properties.","         * @param {string} [body.id]                                 - The id of the document, MUST be unique for each document.","         * @param {number} body.ttl                                  - The time to live in seconds of the document.","         * @param {RequestOptions} [options]                         - The request options.","         * @param {boolean} [options.disableAutomaticIdGeneration]   - Disables the automatic id generation. If id is missing in the body and this option is true, an error will be returned.","         * @param {RequestCallback} callback                         - The callback for the request.","         */","        createDocument: function (documentsFeedOrDatabaseLink, body, options, callback) {","            var partitionResolver = this.partitionResolvers[documentsFeedOrDatabaseLink];","            ","            var collectionLink;","            if (partitionResolver === undefined || partitionResolver === null) {","                collectionLink = documentsFeedOrDatabaseLink;","            } else {","                collectionLink = this.resolveCollectionLinkForCreate(partitionResolver, body);","            }","            ","            this.createDocumentPrivate(collectionLink, body, options, callback);","        },","        ","        /**","         * Create an attachment for the document object.","         * <p>","         * Each document may contain zero or more attachments. Attachments can be of any MIME type - text, image, binary data. <br>","         * These are stored externally in Azure Blob storage. Attachments are automatically deleted when the parent document is deleted.","         * </P>","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink         - The self-link of the document.","         * @param {Object} body                 - The metadata the defines the attachment media like media, contentType. It can include any other properties as part of the metedata.","         * @param {string} body.contentType     - The MIME contentType of the attachment.","         * @param {string} body.media           - Media link associated with the attachment content.","         * @param {RequestOptions} options      - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","        */","        createAttachment: function (documentLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(documentLink);","            var path = this.getPathFromLink(documentLink, \"attachments\", isNameBased);","            var id = this.getIdFromLink(documentLink, isNameBased);","            ","            this.create(body, path, \"attachments\", id, undefined, options, callback);","        },","        ","        /**","         * Create a database user.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink         - The self-link of the database.","         * @param {object} body                 - Represents the body of the user.","         * @param {string} body.id              - The id of the user.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        createUser: function (databaseLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(databaseLink);","            var path = this.getPathFromLink(databaseLink, \"users\", isNameBased);","            var id = this.getIdFromLink(databaseLink, isNameBased);","            ","            this.create(body, path, \"users\", id, undefined, options, callback);","        },","        ","        /**","         * Create a permission.","         * <p> A permission represents a per-User Permission to access a specific resource e.g. Document or Collection.  </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} userLink             - The self-link of the user.","         * @param {object} body                 - Represents the body of the permission.","         * @param {string} body.id              - The id of the permission","         * @param {string} body.permissionMode  - The mode of the permission, must be a value of {@link PermissionMode}","         * @param {string} body.resource        - The link of the resource that the permission will be applied to.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        createPermission: function (userLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(userLink);","            var path = this.getPathFromLink(userLink, \"permissions\", isNameBased);","            var id = this.getIdFromLink(userLink, isNameBased);","            ","            this.create(body, path, \"permissions\", id, undefined, options, callback);","        },","        ","        /**","        * Create a trigger.","        * <p>","        * DocumentDB supports pre and post triggers defined in JavaScript to be executed on creates, updates and deletes. <br>","        * For additional details, refer to the server-side JavaScript API documentation.","        * </p>","        * @memberof DocumentClient","        * @instance","        * @param {string} collectionLink           - The self-link of the collection.","        * @param {object} trigger                  - Represents the body of the trigger.","        * @param {string} trigger.id             - The id of the trigger.","        * @param {string} trigger.triggerType      - The type of the trigger, should be one of the values of {@link TriggerType}.","        * @param {string} trigger.triggerOperation - The trigger operation, should be one of the values of {@link TriggerOperation}.","        * @param {function} trigger.serverScript   - The body of the trigger, it can be passed as stringified too.","        * @param {RequestOptions} [options]        - The request options.","        * @param {RequestCallback} callback        - The callback for the request.","        */","        createTrigger: function (collectionLink, trigger, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (trigger.serverScript) {","                trigger.body = trigger.serverScript.toString();","            } else if (trigger.body) {","                trigger.body = trigger.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(trigger, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"triggers\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.create(trigger, path, \"triggers\", id, undefined, options, callback);","        },","        ","        /**","         * Create a UserDefinedFunction.","         * <p>","         * DocumentDB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers. <br>","         * For additional details, refer to the server-side JavaScript API documentation.","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink                - The self-link of the collection.","         * @param {object} udf                           - Represents the body of the userDefinedFunction.","         * @param {string} udf.id                      - The id of the udf.","         * @param {string} udf.userDefinedFunctionType   - The type of the udf, it should be one of the values of {@link UserDefinedFunctionType}","         * @param {function} udf.serverScript            - Represents the body of the udf, it can be passed as stringified too.","         * @param {RequestOptions} [options]             - The request options.","         * @param {RequestCallback} callback             - The callback for the request.","         */","        createUserDefinedFunction: function (collectionLink, udf, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (udf.serverScript) {","                udf.body = udf.serverScript.toString();","            } else if (udf.body) {","                udf.body = udf.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(udf, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"udfs\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.create(udf, path, \"udfs\", id, undefined, options, callback);","        },","        ","        /**","         * Create a StoredProcedure.","         * <p>","         * DocumentDB allows stored procedures to be executed in the storage tier, directly against a document collection. The script <br>","         * gets executed under ACID transactions on the primary storage partition of the specified collection. For additional details, <br>","         * refer to the server-side JavaScript API documentation.","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink       - The self-link of the collection.","         * @param {object} sproc                - Represents the body of the stored procedure.","         * @param {string} sproc.id           - The id of the stored procedure.","         * @param {function} sproc.serverScript - The body of the stored procedure, it can be passed as stringified too.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        createStoredProcedure: function (collectionLink, sproc, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (sproc.serverScript) {","                sproc.body = sproc.serverScript.toString();","            } else if (sproc.body) {","                sproc.body = sproc.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(sproc, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"sprocs\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.create(sproc, path, \"sprocs\", id, undefined, options, callback);","        },","        ","        /**","         * Create an attachment for the document object.","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink             - The self-link of the document.","         * @param {stream.Readable} readableStream  - the stream that represents the media itself that needs to be uploaded.","         * @param {MediaOptions} [options]          - The request options.","         * @param {RequestCallback} callback        - The callback for the request.","        */","        createAttachmentAndUploadMedia: function (documentLink, readableStream, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var initialHeaders = Base.extend({}, this.defaultHeaders);","            ","            // Add required headers slug and content-type.","            if (options.slug) {","                initialHeaders[Constants.HttpHeaders.Slug] = options.slug;","            }","            ","            if (options.contentType) {","                initialHeaders[Constants.HttpHeaders.ContentType] = options.contentType;","            } else {","                initialHeaders[Constants.HttpHeaders.ContentType] = Constants.MediaTypes.OctetStream;","            }","            ","            var isNameBased = Base.isLinkNameBased(documentLink);","            var path = this.getPathFromLink(documentLink, \"attachments\", isNameBased);","            var id = this.getIdFromLink(documentLink, isNameBased);","            ","            this.create(readableStream, path, \"attachments\", id, initialHeaders, options, callback);","        },","        ","        /** Reads a database.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink         - The self-link of the database.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","        */","        readDatabase: function (databaseLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(databaseLink);","            var path = this.getPathFromLink(databaseLink, \"\", isNameBased);","            var id = this.getIdFromLink(databaseLink, isNameBased);","            ","            this.read(path, \"dbs\", id, undefined, options, callback);","        },","        ","        /**","         * Reads a collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink       - The self-link of the collection.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        readCollection: function (collectionLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            var that = this;","            this.read(path, \"colls\", id, undefined, options, function (err, collection, headers) {","                if (err) return callback(err, collection, headers);","                that.partitionKeyDefinitionCache[collectionLink] = collection.partitionKey;","                callback(err, collection, headers);","            });","        },","        ","        /**","         * Reads a document.","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink         - The self-link of the document.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        readDocument: function (documentLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(documentLink);","            var path = this.getPathFromLink(documentLink, \"\", isNameBased);","            var id = this.getIdFromLink(documentLink, isNameBased);","            ","            this.read(path, \"docs\", id, undefined, options, callback);","        },","        ","        /**","         * Reads an Attachment object.","         * @memberof DocumentClient","         * @instance","         * @param {string} attachmentLink    - The self-link of the attachment.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        readAttachment: function (attachmentLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(attachmentLink);","            var path = this.getPathFromLink(attachmentLink, \"\", isNameBased);","            var id = this.getIdFromLink(attachmentLink, isNameBased);","            ","            this.read(path, \"attachments\", id, undefined, options, callback);","        },","        ","        /**","         * Reads a user.","         * @memberof DocumentClient","         * @instance","         * @param {string} userLink          - The self-link of the user.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        readUser: function (userLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(userLink);","            var path = this.getPathFromLink(userLink, \"\", isNameBased);","            var id = this.getIdFromLink(userLink, isNameBased);","            ","            this.read(path, \"users\", id, undefined, options, callback);","        },","        ","        /**","         * Reads a permission.","         * @memberof DocumentClient","         * @instance","         * @param {string} permissionLink    - The self-link of the permission.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        readPermission: function (permissionLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(permissionLink);","            var path = this.getPathFromLink(permissionLink, \"\", isNameBased);","            var id = this.getIdFromLink(permissionLink, isNameBased);","            ","            this.read(path, \"permissions\", id, undefined, options, callback);","        },","        ","        /**","         * Reads a trigger object.","         * @memberof DocumentClient","         * @instance","         * @param {string} triggerLink       - The self-link of the trigger.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        readTrigger: function (triggerLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var resourceInfo = Base.parseLink(triggerLink);","            ","            var isNameBased = Base.isLinkNameBased(triggerLink);","            var path = this.getPathFromLink(triggerLink, \"\", isNameBased);","            var id = this.getIdFromLink(triggerLink, isNameBased);","            ","            this.read(path, \"triggers\", id, undefined, options, callback);","        },","        ","        /**","         * Reads a udf object.","         * @memberof DocumentClient","         * @instance","         * @param {string} udfLink           - The self-link of the user defined function.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        readUserDefinedFunction: function (udfLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(udfLink);","            var path = this.getPathFromLink(udfLink, \"\", isNameBased);","            var id = this.getIdFromLink(udfLink, isNameBased);","            ","            this.read(path, \"udfs\", id, undefined, options, callback);","        },","        ","        /**","         * Reads a StoredProcedure object.","         * @memberof DocumentClient","         * @instance","         * @param {string} sprocLink         - The self-link of the stored procedure.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        readStoredProcedure: function (sprocLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(sprocLink);","            var path = this.getPathFromLink(sprocLink, \"\", isNameBased);","            var id = this.getIdFromLink(sprocLink, isNameBased);","            ","            this.read(path, \"sprocs\", id, undefined, options, callback);","        },","        ","        /**","         * Reads a conflict.","         * @memberof DocumentClient","         * @instance","         * @param {string} conflictLink      - The self-link of the conflict.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        readConflict: function (conflictLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(conflictLink);","            var path = this.getPathFromLink(conflictLink, \"\", isNameBased);","            var id = this.getIdFromLink(conflictLink, isNameBased);","            ","            this.read(path, \"conflicts\", id, undefined, options, callback);","        },","        ","        /** Lists all databases.","         * @memberof DocumentClient","         * @instance","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","        */","        readDatabases: function (options) {","            return this.queryDatabases(undefined, options);","        },","        ","        /**","         * Get all collections in this database.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink   - The self-link of the database.","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","         */","        readCollections: function (databaseLink, options) {","            return this.queryCollections(databaseLink, undefined, options);","        },","        ","        /**","         * Get all documents in this collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink - The self-link of the collection.","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","         */","        readDocuments: function (collectionLink, options) {","            return this.queryDocuments(collectionLink, undefined, options);","        },","","        /**","         * Get all Partition key Ranges in this collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink - The self-link of the collection.","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","         * @ignore","         */","        readPartitionKeyRanges: function (collectionLink, options) {","            return this.queryPartitionKeyRanges(collectionLink, undefined, options);","        },","        ","        /**","        * Get all attachments for this document.","        * @memberof DocumentClient","        * @instance","        * @param {string} documentLink   - The self-link of the document.","        * @param {FeedOptions} [options] - The feed options.","        * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","       */","        readAttachments: function (documentLink, options) {","            return this.queryAttachments(documentLink, undefined, options);","        },","        ","        /**","         * Get all users in this database.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink       - The self-link of the database.","         * @param {FeedOptions} [feedOptions] - The feed options.","         * @returns {QueryIterator}           - An instance of queryIterator to handle reading feed.","         */","        readUsers: function (databaseLink, options) {","            return this.queryUsers(databaseLink, undefined, options);","        },","        ","        /**","         * Get all permissions for this user.","         * @memberof DocumentClient","         * @instance","         * @param {string} userLink           - The self-link of the user.","         * @param {FeedOptions} [feedOptions] - The feed options.","         * @returns {QueryIterator}           - An instance of queryIterator to handle reading feed.","         */","        readPermissions: function (userLink, options) {","            return this.queryPermissions(userLink, undefined, options);","        },","        ","        /**","         * Get all triggers in this collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink   - The self-link of the collection.","         * @param {FeedOptions} [options]   - The feed options.","         * @returns {QueryIterator}         - An instance of queryIterator to handle reading feed.","         */","        readTriggers: function (collectionLink, options) {","            return this.queryTriggers(collectionLink, undefined, options);","        },","        ","        /**","         * Get all UserDefinedFunctions in this collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink - The self-link of the collection.","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","         */","        readUserDefinedFunctions: function (collectionLink, options) {","            return this.queryUserDefinedFunctions(collectionLink, undefined, options);","        },","        ","        /**","         * Get all StoredProcedures in this collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink - The self-link of the collection.","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","         */","        readStoredProcedures: function (collectionLink, options) {","            return this.queryStoredProcedures(collectionLink, undefined, options);","        },","        ","        /**","         * Get all conflicts in this collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink - The self-link of the collection.","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of QueryIterator to handle reading feed.","         */","        readConflicts: function (collectionLink, options) {","            return this.queryConflicts(collectionLink, undefined, options);","        },","        ","        /** Lists all databases that satisfy a query.","         * @memberof DocumentClient","         * @instance","         * @param {SqlQuerySpec | string} query - A SQL query.","         * @param {FeedOptions} [options]       - The feed options.","         * @returns {QueryIterator}             - An instance of QueryIterator to handle reading feed.","        */","        queryDatabases: function (query, options) {","            var that = this;","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                        that,","                        \"/dbs\",","                        \"dbs\",","                        \"\",","                        function (result) { return result.Databases; },","                        function (parent, body) { return body; },","                        query,","                        options,","                        callback);","            });","        },","        ","        /**","         * Query the collections for the database.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink           - The self-link of the database.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         */","        queryCollections: function (databaseLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(databaseLink);","            var path = this.getPathFromLink(databaseLink, \"colls\", isNameBased);","            var id = this.getIdFromLink(databaseLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"colls\",","                    id,","                    function (result) { return result.DocumentCollections; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","        ","        /**","         * Query the documents for the collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} documentsFeedOrDatabaseLink          - The collection link or database link if using a partition resolver","         * @param {SqlQuerySpec | string} query                 - A SQL query.","         * @param {FeedOptions} [options]                       - Represents the feed options.","         * @param {object} [options.partitionKey]               - Optional partition key to be used with the partition resolver","         * @returns {QueryIterator}                             - An instance of queryIterator to handle reading feed.","         */","        queryDocuments: function (documentsFeedOrDatabaseLink, query, options) {","            var partitionResolver = this.partitionResolvers[documentsFeedOrDatabaseLink];","            var collectionLinks;","            if (partitionResolver === undefined || partitionResolver === null) {","                collectionLinks = [documentsFeedOrDatabaseLink];","            } else {","                collectionLinks = partitionResolver.resolveForRead(options && options.partitionKey);","            }","            ","            return this.queryDocumentsPrivate(collectionLinks, query, options);","        },","","        /**","         * Query the partition key ranges","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink           - The self-link of the database.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         * @ignore","         */","        queryPartitionKeyRanges: function (collectionLink, query, options) {","            var that = this;","","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"pkranges\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"pkranges\",","                    id,","                    function (result) { return result.PartitionKeyRanges; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","","","        /**","         * Query the attachments for the document.","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink           - The self-link of the document.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","        */","        queryAttachments: function (documentLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(documentLink);","            var path = this.getPathFromLink(documentLink, \"attachments\", isNameBased);","            var id = this.getIdFromLink(documentLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                        that,","                        path,","                        \"attachments\",","                        id,","                        function (result) { return result.Attachments; },","                        function (parent, body) { return body; },","                        query,","                        options,","                        callback);","            });","        },","        ","        /**","         * Query the users for the database.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink           - The self-link of the database.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         */","        queryUsers: function (databaseLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(databaseLink);","            var path = this.getPathFromLink(databaseLink, \"users\", isNameBased);","            var id = this.getIdFromLink(databaseLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"users\",","                    id,","                    function (result) { return result.Users; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","        ","        /**","         * Query the permission for the user.","         * @memberof DocumentClient","         * @instance","         * @param {string} userLink               - The self-link of the user.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         */","        queryPermissions: function (userLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(userLink);","            var path = this.getPathFromLink(userLink, \"permissions\", isNameBased);","            var id = this.getIdFromLink(userLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"permissions\",","                    id,","                    function (result) { return result.Permissions; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","        ","        /**","         * Query the triggers for the collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink         - The self-link of the collection.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         */","        queryTriggers: function (collectionLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"triggers\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"triggers\",","                    id,","                    function (result) { return result.Triggers; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","        ","        /**","         * Query the user defined functions for the collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink         - The self-link of the collection.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         */","        queryUserDefinedFunctions: function (collectionLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"udfs\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"udfs\",","                    id,","                    function (result) { return result.UserDefinedFunctions; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","        ","        /**","         * Query the storedProcedures for the collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink         - The self-link of the collection.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         */","        queryStoredProcedures: function (collectionLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"sprocs\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"sprocs\",","                    id,","                    function (result) { return result.StoredProcedures; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","        ","        /**","         * Query the conflicts for the collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink         - The self-link of the collection.","         * @param {SqlQuerySpec | string} query   - A SQL query.","         * @param {FeedOptions} [options]         - Represents the feed options.","         * @returns {QueryIterator}               - An instance of queryIterator to handle reading feed.","         */","        queryConflicts: function (collectionLink, query, options) {","            var that = this;","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"conflicts\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                    that,","                    path,","                    \"conflicts\",","                    id,","                    function (result) { return result.Conflicts; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","            });","        },","        ","        /**","         * Delete the database object.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink         - The self-link of the database.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","        */","        deleteDatabase: function (databaseLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(databaseLink);","            var path = this.getPathFromLink(databaseLink, \"\", isNameBased);","            var id = this.getIdFromLink(databaseLink, isNameBased);","            this.deleteResource(path, \"dbs\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the collection object.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink    - The self-link of the collection.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deleteCollection: function (collectionLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.deleteResource(path, \"colls\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the document object.","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink      - The self-link of the document.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deleteDocument: function (documentLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(documentLink);","            var path = this.getPathFromLink(documentLink, \"\", isNameBased);","            var id = this.getIdFromLink(documentLink, isNameBased);","            ","            this.deleteResource(path, \"docs\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the attachment object.","         * @memberof DocumentClient","         * @instance","         * @param {string} attachmentLink    - The self-link of the attachment.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        deleteAttachment: function (attachmentLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(attachmentLink);","            var path = this.getPathFromLink(attachmentLink, \"\", isNameBased);","            var id = this.getIdFromLink(attachmentLink, isNameBased);","            ","            this.deleteResource(path, \"attachments\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the user object.","         * @memberof DocumentClient","         * @instance","         * @param {string} userLink          - The self-link of the user.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deleteUser: function (userLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(userLink);","            var path = this.getPathFromLink(userLink, \"\", isNameBased);","            var id = this.getIdFromLink(userLink, isNameBased);","            ","            this.deleteResource(path, \"users\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the permission object.","         * @memberof DocumentClient","         * @instance","         * @param {string} permissionLink    - The self-link of the permission.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deletePermission: function (permissionLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(permissionLink);","            var path = this.getPathFromLink(permissionLink, \"\", isNameBased);","            var id = this.getIdFromLink(permissionLink, isNameBased);","            ","            this.deleteResource(path, \"permissions\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the trigger object.","         * @memberof DocumentClient","         * @instance","         * @param {string} triggerLink       - The self-link of the trigger.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deleteTrigger: function (triggerLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(triggerLink);","            var path = this.getPathFromLink(triggerLink, \"\", isNameBased);","            var id = this.getIdFromLink(triggerLink, isNameBased);","            ","            this.deleteResource(path, \"triggers\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the UserDefinedFunction object.","         * @memberof DocumentClient","         * @instance","         * @param {string} udfLink           - The self-link of the user defined function.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deleteUserDefinedFunction: function (udfLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(udfLink);","            var path = this.getPathFromLink(udfLink, \"\", isNameBased);","            var id = this.getIdFromLink(udfLink, isNameBased);","            ","            this.deleteResource(path, \"udfs\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the StoredProcedure object.","         * @memberof DocumentClient","         * @instance","         * @param {string} sprocLink         - The self-link of the stored procedure.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deleteStoredProcedure: function (sprocLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(sprocLink);","            var path = this.getPathFromLink(sprocLink, \"\", isNameBased);","            var id = this.getIdFromLink(sprocLink, isNameBased);","            ","            this.deleteResource(path, \"sprocs\", id, undefined, options, callback);","        },","        ","        /**","         * Delete the conflict object.","         * @memberof DocumentClient","         * @instance","         * @param {string} conflictLink      - The self-link of the conflict.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        deleteConflict: function (conflictLink, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var isNameBased = Base.isLinkNameBased(conflictLink);","            var path = this.getPathFromLink(conflictLink, \"\", isNameBased);","            var id = this.getIdFromLink(conflictLink, isNameBased);","            ","            this.deleteResource(path, \"conflicts\", id, undefined, options, callback);","        },","        ","        /**","         * Replace the document collection.","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink    - The self-link of the document collection.","         * @param {object} collection        - Represent the new document collection body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        replaceCollection: function (collectionLink, collection, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(collection, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.replace(collection, path, \"colls\", id, undefined, options, callback);","        },","        ","        /**","         * Replace the document object.","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink      - The self-link of the document.","         * @param {object} document          - Represent the new document body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        replaceDocument: function (documentLink, newDocument, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var that = this;","            ","            var task = function () {","                var err = {};","                if (!that.isResourceValid(newDocument, err)) {","                    callback(err);","                    return;","                }","                ","                var isNameBased = Base.isLinkNameBased(documentLink);","                var path = that.getPathFromLink(documentLink, \"\", isNameBased);","                var id = that.getIdFromLink(documentLink, isNameBased);","                ","                that.replace(newDocument, path, \"docs\", id, undefined, options, callback);","            };","            ","            if (options.partitionKey === undefined) {","                this.getPartitionKeyDefinition(Base.getCollectionLink(documentLink), function (err, partitionKeyDefinition, response, headers) {","                    if (err) return callback(err, response, headers);","                    options.partitionKey = that.extractPartitionKey(newDocument, partitionKeyDefinition);","                    ","                    task();","                });","            }","            else {","                task();","            }","        },","        ","        /**","         * Replace the attachment object.","         * @memberof DocumentClient","         * @instance","         * @param {string} attachmentLink    - The self-link of the attachment.","         * @param {object} attachment        - Represent the new attachment body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","         */","        replaceAttachment: function (attachmentLink, attachment, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(attachment, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(attachmentLink);","            var path = this.getPathFromLink(attachmentLink, \"\", isNameBased);","            var id = this.getIdFromLink(attachmentLink, isNameBased);","            ","            this.replace(attachment, path, \"attachments\", id, undefined, options, callback);","        },","        ","        /**","         * Replace the user object.","         * @memberof DocumentClient","         * @instance","         * @param {string} userLink          - The self-link of the user.","         * @param {object} user              - Represent the new user body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        replaceUser: function (userLink, user, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(user, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(userLink);","            var path = this.getPathFromLink(userLink, \"\", isNameBased);","            var id = this.getIdFromLink(userLink, isNameBased);","            ","            this.replace(user, path, \"users\", id, undefined, options, callback);","        },","        ","        /**","         * Replace the permission object.","         * @memberof DocumentClient","         * @instance","         * @param {string} permissionLink    - The self-link of the permission.","         * @param {object} permission        - Represent the new permission body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        replacePermission: function (permissionLink, permission, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(permission, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(permissionLink);","            var path = this.getPathFromLink(permissionLink, \"\", isNameBased);","            var id = this.getIdFromLink(permissionLink, isNameBased);","            ","            this.replace(permission, path, \"permissions\", id, undefined, options, callback);","        },","        ","        /**","         * Replace the trigger object.","         * @memberof DocumentClient","         * @instance","         * @param {string} triggerLink       - The self-link of the trigger.","         * @param {object} trigger           - Represent the new trigger body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        replaceTrigger: function (triggerLink, trigger, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (trigger.serverScript) {","                trigger.body = trigger.serverScript.toString();","            } else if (trigger.body) {","                trigger.body = trigger.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(trigger, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(triggerLink);","            var path = this.getPathFromLink(triggerLink, \"\", isNameBased);","            var id = this.getIdFromLink(triggerLink, isNameBased);","            ","            this.replace(trigger, path, \"triggers\", id, undefined, options, callback);","        },","        ","        /**","         * Replace the UserDefinedFunction object.","         * @memberof DocumentClient","         * @instance","         * @param {string} udfLink           - The self-link of the user defined function.","         * @param {object} udf               - Represent the new udf body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        replaceUserDefinedFunction: function (udfLink, udf, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (udf.serverScript) {","                udf.body = udf.serverScript.toString();","            } else if (udf.body) {","                udf.body = udf.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(udf, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(udfLink);","            var path = this.getPathFromLink(udfLink, \"\", isNameBased);","            var id = this.getIdFromLink(udfLink, isNameBased);","            ","            this.replace(udf, path, \"udfs\", id, undefined, options, callback);","        },","        ","        /**","         * Replace the StoredProcedure object.","         * @memberof DocumentClient","         * @instance","         * @param {string} sprocLink         - The self-link of the stored procedure.","         * @param {object} sproc             - Represent the new sproc body.","         * @param {RequestOptions} [options] - The request options.","         * @param {RequestCallback} callback - The callback for the request.","        */","        replaceStoredProcedure: function (sprocLink, sproc, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (sproc.serverScript) {","                sproc.body = sproc.serverScript.toString();","            } else if (sproc.body) {","                sproc.body = sproc.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(sproc, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(sprocLink);","            var path = this.getPathFromLink(sprocLink, \"\", isNameBased);","            var id = this.getIdFromLink(sprocLink, isNameBased);","            ","            this.replace(sproc, path, \"sprocs\", id, undefined, options, callback);","        },","        ","        /**","         * Upsert a document.","         * <p>","         * There is no set schema for JSON documents. They may contain any number of custom properties as well as an optional list of attachments. <br>","         * A Document is an application resource and can be authorized using the master key or resource keys","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} documentsFeedOrDatabaseLink               - The collection link or database link if using a partition resolver","         * @param {object} body                                      - Represents the body of the document. Can contain any number of user defined properties.","         * @param {string} [body.id]                                 - The id of the document, MUST be unique for each document.","         * @param {number} body.ttl                                  - The time to live in seconds of the document.","         * @param {RequestOptions} [options]                         - The request options.","         * @param {boolean} [options.disableAutomaticIdGeneration]   - Disables the automatic id generation. If id is missing in the body and this option is true, an error will be returned.","         * @param {RequestCallback} callback                         - The callback for the request.","         */","        upsertDocument: function (documentsFeedOrDatabaseLink, body, options, callback) {","            var partitionResolver = this.partitionResolvers[documentsFeedOrDatabaseLink];","            ","            var collectionLink;","            if (partitionResolver === undefined || partitionResolver === null) {","                collectionLink = documentsFeedOrDatabaseLink;","            } else {","                collectionLink = this.resolveCollectionLinkForCreate(partitionResolver, body);","            }","            ","            this.upsertDocumentPrivate(collectionLink, body, options, callback);","        },","        ","        /**","         * Upsert an attachment for the document object.","         * <p>","         * Each document may contain zero or more attachments. Attachments can be of any MIME type - text, image, binary data. <br>","         * These are stored externally in Azure Blob storage. Attachments are automatically deleted when the parent document is deleted.","         * </P>","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink         - The self-link of the document.","         * @param {Object} body                 - The metadata the defines the attachment media like media, contentType. It can include any other properties as part of the metedata.","         * @param {string} body.contentType     - The MIME contentType of the attachment.","         * @param {string} body.media           - Media link associated with the attachment content.","         * @param {RequestOptions} options      - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","        */","        upsertAttachment: function (documentLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(documentLink);","            var path = this.getPathFromLink(documentLink, \"attachments\", isNameBased);","            var id = this.getIdFromLink(documentLink, isNameBased);","            ","            this.upsert(body, path, \"attachments\", id, undefined, options, callback);","        },","        ","        /**","         * Upsert a database user.","         * @memberof DocumentClient","         * @instance","         * @param {string} databaseLink         - The self-link of the database.","         * @param {object} body                 - Represents the body of the user.","         * @param {string} body.id              - The id of the user.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        upsertUser: function (databaseLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(databaseLink);","            var path = this.getPathFromLink(databaseLink, \"users\", isNameBased);","            var id = this.getIdFromLink(databaseLink, isNameBased);","            ","            this.upsert(body, path, \"users\", id, undefined, options, callback);","        },","        ","        /**","         * Upsert a permission.","         * <p> A permission represents a per-User Permission to access a specific resource e.g. Document or Collection.  </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} userLink             - The self-link of the user.","         * @param {object} body                 - Represents the body of the permission.","         * @param {string} body.id              - The id of the permission","         * @param {string} body.permissionMode  - The mode of the permission, must be a value of {@link PermissionMode}","         * @param {string} body.resource        - The link of the resource that the permission will be applied to.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        upsertPermission: function (userLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var err = {};","            if (!this.isResourceValid(body, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(userLink);","            var path = this.getPathFromLink(userLink, \"permissions\", isNameBased);","            var id = this.getIdFromLink(userLink, isNameBased);","            ","            this.upsert(body, path, \"permissions\", id, undefined, options, callback);","        },","        ","        /**","        * Upsert a trigger.","        * <p>","        * DocumentDB supports pre and post triggers defined in JavaScript to be executed on creates, updates and deletes. <br>","        * For additional details, refer to the server-side JavaScript API documentation.","        * </p>","        * @memberof DocumentClient","        * @instance","        * @param {string} collectionLink           - The self-link of the collection.","        * @param {object} trigger                  - Represents the body of the trigger.","        * @param {string} trigger.id             - The id of the trigger.","        * @param {string} trigger.triggerType      - The type of the trigger, should be one of the values of {@link TriggerType}.","        * @param {string} trigger.triggerOperation - The trigger operation, should be one of the values of {@link TriggerOperation}.","        * @param {function} trigger.serverScript   - The body of the trigger, it can be passed as stringified too.","        * @param {RequestOptions} [options]        - The request options.","        * @param {RequestCallback} callback        - The callback for the request.","        */","        upsertTrigger: function (collectionLink, trigger, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (trigger.serverScript) {","                trigger.body = trigger.serverScript.toString();","            } else if (trigger.body) {","                trigger.body = trigger.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(trigger, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"triggers\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.upsert(trigger, path, \"triggers\", id, undefined, options, callback);","        },","        ","        /**","         * Upsert a UserDefinedFunction.","         * <p>","         * DocumentDB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers. <br>","         * For additional details, refer to the server-side JavaScript API documentation.","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink                - The self-link of the collection.","         * @param {object} udf                           - Represents the body of the userDefinedFunction.","         * @param {string} udf.id                      - The id of the udf.","         * @param {string} udf.userDefinedFunctionType   - The type of the udf, it should be one of the values of {@link UserDefinedFunctionType}","         * @param {function} udf.serverScript            - Represents the body of the udf, it can be passed as stringified too.","         * @param {RequestOptions} [options]             - The request options.","         * @param {RequestCallback} callback             - The callback for the request.","         */","        upsertUserDefinedFunction: function (collectionLink, udf, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (udf.serverScript) {","                udf.body = udf.serverScript.toString();","            } else if (udf.body) {","                udf.body = udf.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(udf, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"udfs\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.upsert(udf, path, \"udfs\", id, undefined, options, callback);","        },","        ","        /**","         * Upsert a StoredProcedure.","         * <p>","         * DocumentDB allows stored procedures to be executed in the storage tier, directly against a document collection. The script <br>","         * gets executed under ACID transactions on the primary storage partition of the specified collection. For additional details, <br>","         * refer to the server-side JavaScript API documentation.","         * </p>","         * @memberof DocumentClient","         * @instance","         * @param {string} collectionLink       - The self-link of the collection.","         * @param {object} sproc                - Represents the body of the stored procedure.","         * @param {string} sproc.id           - The id of the stored procedure.","         * @param {function} sproc.serverScript - The body of the stored procedure, it can be passed as stringified too.","         * @param {RequestOptions} [options]    - The request options.","         * @param {RequestCallback} callback    - The callback for the request.","         */","        upsertStoredProcedure: function (collectionLink, sproc, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            if (sproc.serverScript) {","                sproc.body = sproc.serverScript.toString();","            } else if (sproc.body) {","                sproc.body = sproc.body.toString();","            }","            ","            var err = {};","            if (!this.isResourceValid(sproc, err)) {","                callback(err);","                return;","            }","            ","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var path = this.getPathFromLink(collectionLink, \"sprocs\", isNameBased);","            var id = this.getIdFromLink(collectionLink, isNameBased);","            ","            this.upsert(sproc, path, \"sprocs\", id, undefined, options, callback);","        },","        ","        /**","         * Upsert an attachment for the document object.","         * @memberof DocumentClient","         * @instance","         * @param {string} documentLink             - The self-link of the document.","         * @param {stream.Readable} readableStream  - the stream that represents the media itself that needs to be uploaded.","         * @param {MediaOptions} [options]          - The request options.","         * @param {RequestCallback} callback        - The callback for the request.","        */","        upsertAttachmentAndUploadMedia: function (documentLink, readableStream, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var initialHeaders = Base.extend({}, this.defaultHeaders);","            ","            // Add required headers slug and content-type.","            if (options.slug) {","                initialHeaders[Constants.HttpHeaders.Slug] = options.slug;","            }","            ","            if (options.contentType) {","                initialHeaders[Constants.HttpHeaders.ContentType] = options.contentType;","            } else {","                initialHeaders[Constants.HttpHeaders.ContentType] = Constants.MediaTypes.OctetStream;","            }","            ","            var isNameBased = Base.isLinkNameBased(documentLink);","            var path = this.getPathFromLink(documentLink, \"attachments\", isNameBased);","            var id = this.getIdFromLink(documentLink, isNameBased);","            ","            this.upsert(readableStream, path, \"attachments\", id, initialHeaders, options, callback);","        },","        ","        /**","          * Read the media for the attachment object.","          * @memberof DocumentClient","          * @instance","          * @param {string} mediaLink         - The media link of the media in the attachment.","          * @param {RequestCallback} callback - The callback for the request, the result parameter can be a buffer or a stream","          *                                     depending on the value of {@link MediaReadMode}.","          */","        readMedia: function (mediaLink, callback) {","            var resourceInfo = Base.parseLink(mediaLink);","            var path = \"/\" + mediaLink;","            var initialHeaders = Base.extend({}, this.defaultHeaders);","            initialHeaders[Constants.HttpHeaders.Accept] = Constants.MediaTypes.Any;","            var attachmentId = Base.getAttachmentIdFromMediaId(resourceInfo.objectBody.id).toLowerCase();","","            var headers = Base.getHeaders(this, initialHeaders, \"get\", path, attachmentId, \"media\", {});","            ","            var that = this;","            // readMedia will always use WriteEndpoint since it's not replicated in readable Geo regions","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                that.get(writeEndpoint, path, headers, callback);","            });","        },","        ","        /**","         * Update media for the attachment","         * @memberof DocumentClient","         * @instance","         * @param {string} mediaLink                - The media link of the media in the attachment.","         * @param {stream.Readable} readableStream  - The stream that represents the media itself that needs to be uploaded.","         * @param {MediaOptions} [options]          - options for the media","         * @param {RequestCallback} callback        - The callback for the request.","         */","        updateMedia: function (mediaLink, readableStream, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var defaultHeaders = this.defaultHeaders;","            var initialHeaders = Base.extend({}, defaultHeaders);","            ","            // Add required headers slug and content-type in case the body is a stream","            if (options.slug) {","                initialHeaders[Constants.HttpHeaders.Slug] = options.slug;","            }","            ","            if (options.contentType) {","                initialHeaders[Constants.HttpHeaders.ContentType] = options.contentType;","            } else {","                initialHeaders[Constants.HttpHeaders.ContentType] = Constants.MediaTypes.OctetStream;","            }","            ","            initialHeaders[Constants.HttpHeaders.Accept] = Constants.MediaTypes.Any;","            ","            var resourceInfo = Base.parseLink(mediaLink);","            var path = \"/\" + mediaLink;","            var attachmentId = Base.getAttachmentIdFromMediaId(resourceInfo.objectBody.id).toLowerCase();","            var headers = Base.getHeaders(this, initialHeaders, \"put\", path, attachmentId, \"media\", options);","","            // updateMedia will use WriteEndpoint since it uses PUT operation","            var that = this;","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                that.put(writeEndpoint, path, readableStream, headers, callback);","            });","        },","        ","        /**","         * Execute the StoredProcedure represented by the object with partition key.","         * @memberof DocumentClient","         * @instance","         * @param {string} sprocLink            - The self-link of the stored procedure.","         * @param {Array} [params]              - represent the parameters of the stored procedure.","         * @param {Object} [options]            - partition key","         * @param {RequestCallback} callback    - The callback for the request.","        */","        executeStoredProcedure: function (sprocLink, params, options, callback) {","            if (!callback && !options) {","                callback = params;","                params = null;","                options = {}","            }","            else if(!callback) {","                callback = options;","                options = {};","            }","            ","            var defaultHeaders = this.defaultHeaders;","            var initialHeaders = {};","            initialHeaders = Base.extend(initialHeaders, defaultHeaders);","            ","            // Accept a single parameter or an array of parameters.","            if (params !== null && params !== undefined && params.constructor !== Array) {","                params = [params];","            }","            ","            var isNameBased = Base.isLinkNameBased(sprocLink);","            var path = this.getPathFromLink(sprocLink, \"\", isNameBased);","            var id = this.getIdFromLink(sprocLink, isNameBased);","            ","            var headers = Base.getHeaders(this, initialHeaders, \"post\", path, id, \"sprocs\", options);","            ","            // executeStoredProcedure will use WriteEndpoint since it uses POST operation","            var that = this;","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                that.post(writeEndpoint, path, params, headers, callback);","            });","        },","        ","        /**","         * Replace the offer object.","         * @memberof DocumentClient","         * @instance","         * @param {string} offerLink         - The self-link of the offer.","         * @param {object} offer             - Represent the new offer body.","         * @param {RequestCallback} callback - The callback for the request.","         */","        replaceOffer: function (offerLink, offer, callback) {","            var err = {};","            if (!this.isResourceValid(offer, err)) {","                callback(err);","                return;","            }","            ","            var path = \"/\" + offerLink;","            var id = Base.parseLink(offerLink).objectBody.id.toLowerCase();","            this.replace(offer, path, \"offers\", id, undefined, {}, callback);","        },","        ","        /** Reads an offer.","         * @memberof DocumentClient","         * @instance","         * @param {string} offerLink         - The self-link of the offer.","         * @param {RequestCallback} callback    - The callback for the request.","        */","        readOffer: function (offerLink, callback) {","            var path = \"/\" + offerLink;","            var id = Base.parseLink(offerLink).objectBody.id.toLowerCase();","            this.read(path, \"offers\", id, undefined, {}, callback);","        },","        ","        /** Lists all offers.","         * @memberof DocumentClient","         * @instance","         * @param {FeedOptions} [options] - The feed options.","         * @returns {QueryIterator}       - An instance of queryIterator to handle reading feed.","        */","        readOffers: function (options) {","            return this.queryOffers(undefined, options);","        },","        ","        /** Lists all offers that satisfy a query.","         * @memberof DocumentClient","         * @instance","         * @param {SqlQuerySpec | string} query - A SQL query.","         * @param {FeedOptions} [options]       - The feed options.","         * @returns {QueryIterator}             - An instance of QueryIterator to handle reading feed.","        */","        queryOffers: function (query, options) {","            var that = this;","            return new QueryIterator(this, query, options, function (options, callback) {","                that.queryFeed.call(that,","                        that,","                        \"/offers\",","                        \"offers\",","                        \"\",","                        function (result) { return result.Offers; },","                        function (parent, body) { return body; },","                        query,","                        options,","                        callback);","            });","        },","        ","        /** Gets the Database account information.","       * @memberof DocumentClient","       * @instance","       * @param {string} [options.urlConnection]   - The endpoint url whose database account needs to be retrieved. If not present, current client's url will be used.","       * @param {RequestCallback} callback         - The callback for the request. The second parameter of the callback will be of type {@link DatabaseAccount}.","       */","        getDatabaseAccount: function (options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","","            var urlConnection = options.urlConnection || this.urlConnection;","","            var headers = Base.getHeaders(this, this.defaultHeaders, \"get\", \"\", \"\", \"\", {});","            this.get(urlConnection, \"\", headers, function (err, result, headers) {","                if (err) return callback(err);","                ","                var databaseAccount = new AzureDocuments.DatabaseAccount();","                databaseAccount.DatabasesLink = \"/dbs/\";","                databaseAccount.MediaLink = \"/media/\";","                databaseAccount.MaxMediaStorageUsageInMB = headers[Constants.HttpHeaders.MaxMediaStorageUsageInMB];","                databaseAccount.CurrentMediaStorageUsageInMB = headers[Constants.HttpHeaders.CurrentMediaStorageUsageInMB];","                databaseAccount.ConsistencyPolicy = result.userConsistencyPolicy;","                ","                // WritableLocations and ReadableLocations properties will be available only for geo-replicated database accounts","                if (Constants.WritableLocations in result) {","                    databaseAccount._writableLocations = result[Constants.WritableLocations];","                }","                if (Constants.ReadableLocations in result) {","                    databaseAccount._readableLocations = result[Constants.ReadableLocations];","                }","                ","                callback(undefined, databaseAccount, headers);","            });","        },","        ","        /** @ignore */","        createDocumentPrivate: function (collectionLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var that = this;","            ","            var task = function () {","                // Generate random document id if the id is missing in the payload and options.disableAutomaticIdGeneration != true","                if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {","                    body.id = Base.generateGuidId();","                }","                ","                var err = {};","                if (!that.isResourceValid(body, err)) {","                    callback(err);","                    return;","                }","                ","                var isNameBased = Base.isLinkNameBased(collectionLink);","                var path = that.getPathFromLink(collectionLink, \"docs\", isNameBased);","                var id = that.getIdFromLink(collectionLink, isNameBased);","                ","                that.create(body, path, \"docs\", id, undefined, options, callback);","            };","            ","            if (options.partitionKey === undefined) {","                this.getPartitionKeyDefinition(collectionLink, function (err, partitionKeyDefinition, response, headers) {","                    if (err) return callback(err, response, headers);","                    options.partitionKey = that.extractPartitionKey(body, partitionKeyDefinition);","                    ","                    task();","                });","            }","            else {","                task();","            }","        },","        ","        /** @ignore */","        upsertDocumentPrivate: function (collectionLink, body, options, callback) {","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var that = this;","            ","            var task = function () {","                // Generate random document id if the id is missing in the payload and options.disableAutomaticIdGeneration != true","                if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {","                    body.id = Base.generateGuidId();","                }","                ","                var err = {};","                if (!that.isResourceValid(body, err)) {","                    callback(err);","                    return;","                }","                ","                var isNameBased = Base.isLinkNameBased(collectionLink);","                var path = that.getPathFromLink(collectionLink, \"docs\", isNameBased);","                var id = that.getIdFromLink(collectionLink, isNameBased);","                ","                that.upsert(body, path, \"docs\", id, undefined, options, callback);","            };","            ","            if (options.partitionKey === undefined) {","                this.getPartitionKeyDefinition(collectionLink, function (err, partitionKeyDefinition, response, headers) {","                    if (err) return callback(err, response, headers);","                    options.partitionKey = that.extractPartitionKey(body, partitionKeyDefinition);","                    ","                    task();","                });","            }","            else {","                task();","            }","        },","        ","        /** @ignore */","        queryDocumentsPrivate: function (collectionLinks, query, options) {","            var that = this;","            ","            var fetchFunctions = Base.map(collectionLinks, function (collectionLink) {","                var isNameBased = Base.isLinkNameBased(collectionLink);","                var path = that.getPathFromLink(collectionLink, \"docs\", isNameBased);","                var id = that.getIdFromLink(collectionLink, isNameBased);","                ","                return function (options, callback) {","                    that.queryFeed.call(that,","                    that,","                    path,","                    \"docs\",","                    id,","                    function (result) { return result.Documents; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback);","                };","            });","            ","            return new QueryIterator(this, query, options, fetchFunctions, collectionLinks);","        },","        ","        /** @ignore */","        create: function (body, path, type, id, initialHeaders, options, callback) {","            initialHeaders = initialHeaders || this.defaultHeaders;","            var headers = Base.getHeaders(this, initialHeaders, \"post\", path, id, type, options);","","            var that = this;","            // create will use WriteEndpoint since it uses POST operation","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                that.post(writeEndpoint, path, body, headers, callback);","            });","        },","        ","        /** @ignore */","        upsert: function (body, path, type, id, initialHeaders, options, callback) {","            initialHeaders = initialHeaders || this.defaultHeaders;","            var headers = Base.getHeaders(this, initialHeaders, \"post\", path, id, type, options);","            this.setIsUpsertHeader(headers);","","            var that = this;","            // upsert will use WriteEndpoint since it uses POST operation","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                that.post(writeEndpoint, path, body, headers, callback);","            });","        },","        ","        /** @ignore */","        replace: function (resource, path, type, id, initialHeaders, options, callback) {","            initialHeaders = initialHeaders || this.defaultHeaders;","            var headers = Base.getHeaders(this, initialHeaders, \"put\", path, id, type, options);","            ","            var that = this;","            // replace will use WriteEndpoint since it uses PUT operation","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                that.put(writeEndpoint, path, resource, headers, callback);","            });","        },","        ","        /** @ignore */","        read: function (path, type, id, initialHeaders, options, callback) {","            initialHeaders = initialHeaders || this.defaultHeaders;","            var headers = Base.getHeaders(this, initialHeaders, \"get\", path, id, type, options);","","            var that = this;","            // read will use ReadEndpoint since it uses GET operation","            this._globalEndpointManager.getReadEndpoint(function (readEndpoint) {","                that.get(readEndpoint, path, headers, callback);","            });","        },","        ","        /** @ignore */","        deleteResource: function (path, type, id, initialHeaders, options, callback) {","            initialHeaders = initialHeaders || this.defaultHeaders;","            var headers = Base.getHeaders(this, initialHeaders, \"delete\", path, id, type, options);","","            var that = this;","            // deleteResource will use WriteEndpoint since it uses DELETE operation","            this._globalEndpointManager.getWriteEndpoint(function (writeEndpoint) {","                that.delete(writeEndpoint, path, headers, callback);","            });","        },","        ","        /** @ignore */","        get: function (url, path, headers, callback) {","            return RequestHandler.request(this._globalEndpointManager, this.connectionPolicy, \"GET\", url, path, undefined, this.defaultUrlParams, headers, callback);","        },","        ","        /** @ignore */","        post: function (url, path, body, headers, callback) {","            return RequestHandler.request(this._globalEndpointManager, this.connectionPolicy, \"POST\", url, path, body, this.defaultUrlParams, headers, callback);","        },","        ","        /** @ignore */","        put: function (url, path, body, headers, callback) {","            return RequestHandler.request(this._globalEndpointManager, this.connectionPolicy, \"PUT\", url, path, body, this.defaultUrlParams, headers, callback);","        },","        ","        /** @ignore */","        head: function (url, path, headers, callback) {","            return RequestHandler.request(this._globalEndpointManager, this.connectionPolicy, \"HEAD\", url, path, undefined, this.defaultUrlParams, headers, callback);","        },","        ","        /** @ignore */","        delete: function (url, path, headers, callback) {","            return RequestHandler.request(this._globalEndpointManager, this.connectionPolicy, \"DELETE\", url, path, undefined, this.defaultUrlParams, headers, callback);","        },","        ","        /** Gets the partition key definition first by looking into the cache otherwise by reading the collection.","        * @ignore","        * @param {string} collectionLink   - Link to the collection whose partition key needs to be extracted.","        * @param {function} callback       - The arguments to the callback are(in order): error, partitionKeyDefinition, response object and response headers","        */","        getPartitionKeyDefinition: function (collectionLink, callback) {","            // $ISSUE-felixfan-2016-03-17: Make name based path and link based path use the same key","            // $ISSUE-felixfan-2016-03-17: Refresh partitionKeyDefinitionCache when necessary","            if (collectionLink in this.partitionKeyDefinitionCache) {","                return callback(undefined, this.partitionKeyDefinitionCache[collectionLink]);","            }","            ","            var that = this;","            ","            this.readCollection(collectionLink, function (err, collection, headers) {","                if (err) return callback(err, undefined, collection, headers);","                callback(err, that.partitionKeyDefinitionCache[collectionLink], collection, headers);","            });","        },","        ","        extractPartitionKey: function (document, partitionKeyDefinition) {","            if (partitionKeyDefinition && partitionKeyDefinition.paths && partitionKeyDefinition.paths.length > 0) {","                var partitionKey = [];","                partitionKeyDefinition.paths.forEach(function (path) {","                    var pathParts = Base.parsePath(path);","                    ","                    var obj = document;","                    for (var i = 0; i < pathParts.length; ++i) {","                        if (!(pathParts[i] in obj)) {","                            obj = {};","                            break;","                        }","                        ","                        obj = obj[pathParts[i]];","                    }","                    ","                    partitionKey.push(obj);","                });","                ","                return partitionKey;","            }","            ","            return undefined;","        },","        ","        /** @ignore */","        queryFeed: function (documentclient, path, type, id, resultFn, createFn, query, options, callback, partitionKeyRangeId) {","            var that = this;","            ","            var optionsCallbackTuple = this.validateOptionsAndCallback(options, callback);","            options = optionsCallbackTuple.options;","            callback = optionsCallbackTuple.callback;","            ","            var successCallback = function (err, result, responseHeaders) {","                if (err) return callback(err, undefined, responseHeaders);","                var bodies;","                if (query) {","                    bodies = resultFn(result);","                }","                else {","                    bodies = Base.map(resultFn(result), function (body) {","                        return createFn(that, body);","                    });","                }","                ","                callback(undefined, bodies, responseHeaders);","            };","            ","            // Query operations will use ReadEndpoint even though it uses GET(for queryFeed) and POST(for regular query operations)","            this._globalEndpointManager.getReadEndpoint(function (readEndpoint) {","                var initialHeaders = Base.extend({}, documentclient.defaultHeaders);","                if (query === undefined) {","                    var headers = Base.getHeaders(documentclient, initialHeaders, \"get\", path, id, type, options, partitionKeyRangeId);","","                    documentclient.get(readEndpoint, path, headers, successCallback);","                } else {","                    initialHeaders[Constants.HttpHeaders.IsQuery] = \"true\";","                    switch (that.queryCompatibilityMode) {","                        case AzureDocuments.QueryCompatibilityMode.SqlQuery:","                            initialHeaders[Constants.HttpHeaders.ContentType] = Constants.MediaTypes.SQL;","                            break;","                        case AzureDocuments.QueryCompatibilityMode.Query:","                        case AzureDocuments.QueryCompatibilityMode.Default:","                        default:","                            if (typeof query === \"string\") {","                                query = { query: query };  // Converts query text to query object.","                            }","                            initialHeaders[Constants.HttpHeaders.ContentType] = Constants.MediaTypes.QueryJson;","                            break;","                    }","                    ","                    var headers = Base.getHeaders(documentclient, initialHeaders, \"post\", path, id, type, options, partitionKeyRangeId);","                    documentclient.post(readEndpoint, path, query, headers, successCallback);","                }","            });","        },","        ","        /** @ignore */","        isResourceValid: function (resource, err) {","            if (resource.id) {","                if (typeof resource.id !== \"string\") {","                    err.message = \"Id must be a string.\";","                    return false;","                }","","                if (resource.id.indexOf(\"/\") !== -1 || resource.id.indexOf(\"\\\\\") !== -1 || resource.id.indexOf(\"?\") !== -1 || resource.id.indexOf(\"#\") !== -1) {","                    err.message = \"Id contains illegal chars.\";","                    return false;","                }","                if (resource.id[resource.id.length - 1] === \" \") {","                    err.message = \"Id ends with a space.\";","                    return false;","                }","            }","            return true;","        },","        ","        /** @ignore */","        resolveCollectionLinkForCreate: function (partitionResolver, document) {","            var validation = this.isPartitionResolverValid(partitionResolver);","            if (!validation.valid) {","                throw validation.error;","            }","            ","            var partitionKey = partitionResolver.getPartitionKey(document);","            return partitionResolver.resolveForCreate(partitionKey);","        },","        ","        /** @ignore */","        isPartitionResolverValid: function (partionResolver) {","            if (partionResolver === null || partionResolver === undefined) {","                return {","                    valid: false,","                    error: new Error(\"The partition resolver is null or undefined\")","                };","            }","            ","            var validation = this.isPartitionResolveFunctionDefined(partionResolver, \"getPartitionKey\");","            if (!validation.valid) {","                return validation;","            }","            validation = this.isPartitionResolveFunctionDefined(partionResolver, \"resolveForCreate\");","            if (!validation.valid) {","                return validation;","            }","            validation = this.isPartitionResolveFunctionDefined(partionResolver, \"resolveForRead\");","            return validation;","        },","        ","        /** @ignore */","        isPartitionResolveFunctionDefined: function (partionResolver, functionName) {","            if (partionResolver === null || partionResolver === undefined) {","                return {","                    valid: false,","                    error: new Error(\"The partition resolver is null or undefined\")","                };","            }","            ","            if (typeof partionResolver[functionName] === \"function\") {","                return {","                    valid: true","                };","            } else {","                return {","                    valid: false,","                    error: new Error(this.sprintf(\"The partition resolver does not implement method %s. The type of %s is \\\"%s\\\"\", functionName, functionName, typeof partionResolver[functionName]))","                };","            }","        },","        ","        /** @ignore */","        getIdFromLink: function (resourceLink, isNameBased) {","            if (isNameBased) {","                return resourceLink;","            } else {","                return Base.parseLink(resourceLink).objectBody.id.toLowerCase();","            }","        },","        ","        /** @ignore */","        getPathFromLink: function (resourceLink, resourceType, isNameBased) {","            if (isNameBased) {","                if (resourceType) {","                    return \"/\" + encodeURI(resourceLink) + \"/\" + resourceType;","                } else {","                    return \"/\" + encodeURI(resourceLink);","                }","            } else {","                if (resourceType) {","                    return \"/\" + resourceLink + resourceType + \"/\";","                } else {","                    return \"/\" + resourceLink;","                }","            }","        },","        ","        /** @ignore */","        setIsUpsertHeader: function (headers) {","            if (headers === undefined || headers === null) {","                throw new Error('The \"headers\" parameter must not be null or undefined');","            }","            ","            if (!(headers instanceof Object)) {","                throw new Error(this.sprintf('The \"headers\" parameter must be an instance of \"Object\". Actual type is: \"%s\".', typeof headers));","            }","            ","            headers[Constants.HttpHeaders.IsUpsert] = true;","        },","        ","        /** @ignore */","        validateOptionsAndCallback: function (optionsIn, callbackIn) {","            var options, callback;","            ","            // options","            if (optionsIn === undefined) {","                options = new Object();","            } else if (callbackIn === undefined && typeof optionsIn === 'function') {","                callback = optionsIn;","                options = new Object();","            } else if (typeof optionsIn !== 'object') {","                throw new Error(this.sprintf('The \"options\" parameter must be of type \"object\". Actual type is: \"%s\".', typeof optionsIn));","            } else {","                options = optionsIn;","            }","            ","            // callback","            if (callbackIn !== undefined && typeof callbackIn !== 'function') {","                throw new Error(this.sprintf('The \"callback\" parameter must be of type \"function\". Actual type is: \"%s\".', typeof callbackIn));","            } else if (typeof callbackIn === 'function') {","                callback = callbackIn","            }","            ","            return { options: options, callback: callback };","        },","        ","        /** @ignore */","        // Like C sprintf, currently only works for %s and %%.","        sprintf: function (format) {","            var args = arguments;","            var i = 1;","            return format.replace(/%((%)|s)/g, function (matchStr, subMatch1, subMatch2) {","                // In case of %% subMatch2 would be '%'.","                return subMatch2 || args[i++];","            });","        }","    }",");","//SCRIPT END","","/**"," * The request options"," * @typedef {Object} RequestOptions               -         Options that can be specified for a requested issued to the DocumentDB servers."," * @property {string} [preTriggerInclude]         -         Indicates what is the pre trigger to be invoked before the operation."," * @property {string} [postTriggerInclude]        -         Indicates what is the post trigger to be invoked after the operation."," * @property {object} [accessCondition]           -         Conditions Associated with the request."," * @property {string} accessCondition.type        -         Conditional HTTP method header type (IfMatch or IfNoneMatch)."," * @property {string} accessCondition.condition   -         Conditional HTTP method header value (the _etag field from the last version you read)."," * @property {string} [indexingDirective]         -         Specifies indexing directives (index, do not index .. etc)."," * @property {string} [consistencyLevel]          -         Consistency level required by the client."," * @property {string} [sessionToken]              -         Token for use with Session consistency."," * @property {number} [resourceTokenExpirySeconds]-         Expiry time (in seconds) for resource token associated with permission (applicable only for requests on permissions)."," * @property {string} [offerType]                 -         Offer type when creating document collections."," */","","/**"," * The feed options"," * @typedef {Object} FeedOptions                  -         The feed options and query methods."," * @property {number} [maxItemCount]              -         Max number of items to be returned in the enumeration operation."," * @property {string} [continuation]              -         Opaque token for continuing the enumeration."," * @property {string} [sessionToken]              -         Token for use with Session consistency."," * @property {boolean} [EnableScanInQuery]        -         Allow scan on the queries which couldn't be served as indexing was opted out on the requested paths."," *"," */","","/**","* The media options","* @typedef {Object} MediaOptions                                          -         Options associated with upload media.","* @property {string} [slug]                                               -         HTTP Slug header value.","* @property {string} [contentType=application/octet-stream]               -         HTTP ContentType header value.","*","*/","","/**"," * The Sql query parameter."," * @typedef {Object} SqlParameter"," * @property {string} name         -       The name of the parameter."," * @property {string} value        -       The value of the parameter."," */","","/**","* The Sql query specification.","* @typedef {Object} SqlQuerySpec","* @property {string} query                       -       The body of the query.","* @property {Array<SqlParameter>} parameters     -       The array of {@link SqlParameter}.","*/","","/**","* The callback to execute after the request execution.","* @callback RequestCallback","* @param {object} error            -       Will contain error information if an error occurs, undefined otherwise.","* @param {number} error.code       -       The response code corresponding to the error.","* @param {string} error.body       -       A string represents the error information.","* @param {Object} resource         -       An object that represents the requested resource (Db, collection, document ... etc) if no error happens.","* @param {object} responseHeaders  -       An object that contain the response headers.","*/","","/**","* The Indexing Policy represents the indexing policy configuration for a collection.","* @typedef {Object} IndexingPolicy","* @property {boolean} automatic                                           -         Specifies whether automatic indexing is enabled for a collection.","                                                                                   <p>In automatic indexing, documents can be explicitly excluded from indexing using {@link RequestOptions}.","                                                                                   In manual indexing, documents can be explicitly included. </p>","* @property {string} indexingMode                                         -         The indexing mode (consistent or lazy) {@link IndexingMode}.","* @property {Array} IncludedPaths                                         -         An array of {@link IncludedPath} represents the paths to be included for indexing.","* @property {Array} ExcludedPaths                                         -         An array of {@link ExcludedPath} represents the paths to be excluded from indexing.","*","*/","","/**","* <p> Included path. <br>","* </p>","* @typedef {Object} IncludedPath","* @property {Array} Indexes                                               -         An array of {@link Indexes}.","* @property {string} Path                                                 -         Path to be indexed.","*","*/","","/**","* <p> Index specification. <br>","* </p>","* @typedef {Object} Indexes","* @property {string} Kind                                                  -         The index kind {@link IndexKind}.","* @property {string} DataType                                              -         The data type {@link DataType}.","* @property {number} Precision                                             -         The precision.","*","*/","","/**","* <p> Excluded path. <br>","* </p>","* @typedef {Object} ExcludedPath","* @property {string} Path                                                  -         Path to be indexed.","*","*/","","if (typeof exports !== \"undefined\") {","    exports.DocumentClient = DocumentClient;","    exports.DocumentBase = AzureDocuments;","    exports.RetryOptions = RetryOptions;","    exports.Base = Base;","    exports.Constants = Constants;","}",""],"l":{"26":1,"35":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"71":0,"74":0,"79":0,"80":0,"82":0,"84":0,"93":0,"94":0,"104":0,"105":0,"123":0,"124":0,"125":0,"127":0,"128":0,"129":0,"130":0,"133":0,"134":0,"156":0,"157":0,"158":0,"160":0,"161":0,"162":0,"163":0,"166":0,"167":0,"168":0,"170":0,"190":0,"192":0,"193":0,"194":0,"196":0,"199":0,"218":0,"219":0,"220":0,"222":0,"223":0,"224":0,"225":0,"228":0,"229":0,"230":0,"232":0,"246":0,"247":0,"248":0,"250":0,"251":0,"252":0,"253":0,"256":0,"257":0,"258":0,"260":0,"277":0,"278":0,"279":0,"281":0,"282":0,"283":0,"284":0,"287":0,"288":0,"289":0,"291":0,"312":0,"313":0,"314":0,"316":0,"317":0,"318":0,"319":0,"322":0,"323":0,"324":0,"325":0,"328":0,"329":0,"330":0,"332":0,"352":0,"353":0,"354":0,"356":0,"357":0,"358":0,"359":0,"362":0,"363":0,"364":0,"365":0,"368":0,"369":0,"370":0,"372":0,"392":0,"393":0,"394":0,"396":0,"397":0,"398":0,"399":0,"402":0,"403":0,"404":0,"405":0,"408":0,"409":0,"410":0,"412":0,"425":0,"426":0,"427":0,"429":0,"432":0,"433":0,"436":0,"437":0,"439":0,"442":0,"443":0,"444":0,"446":0,"457":0,"458":0,"459":0,"461":0,"462":0,"463":0,"465":0,"477":0,"478":0,"479":0,"481":0,"482":0,"483":0,"485":0,"486":0,"487":0,"488":0,"489":0,"502":0,"503":0,"504":0,"506":0,"507":0,"508":0,"510":0,"522":0,"523":0,"524":0,"526":0,"527":0,"528":0,"530":0,"542":0,"543":0,"544":0,"546":0,"547":0,"548":0,"550":0,"562":0,"563":0,"564":0,"566":0,"567":0,"568":0,"570":0,"582":0,"583":0,"584":0,"586":0,"588":0,"589":0,"590":0,"592":0,"604":0,"605":0,"606":0,"608":0,"609":0,"610":0,"612":0,"624":0,"625":0,"626":0,"628":0,"629":0,"630":0,"632":0,"644":0,"645":0,"646":0,"648":0,"649":0,"650":0,"652":0,"662":0,"674":0,"686":0,"699":0,"711":0,"723":0,"735":0,"747":0,"759":0,"771":0,"783":0,"794":0,"795":0,"796":0,"801":0,"802":0,"819":0,"821":0,"822":0,"823":0,"825":0,"826":0,"831":0,"832":0,"850":0,"851":0,"852":0,"853":0,"855":0,"858":0,"872":0,"874":0,"875":0,"876":0,"878":0,"879":0,"884":0,"885":0,"903":0,"905":0,"906":0,"907":0,"909":0,"910":0,"915":0,"916":0,"933":0,"935":0,"936":0,"937":0,"939":0,"940":0,"945":0,"946":0,"963":0,"965":0,"966":0,"967":0,"969":0,"970":0,"975":0,"976":0,"993":0,"995":0,"996":0,"997":0,"999":0,"1000":0,"1005":0,"1006":0,"1023":0,"1025":0,"1026":0,"1027":0,"1029":0,"1030":0,"1035":0,"1036":0,"1053":0,"1055":0,"1056":0,"1057":0,"1059":0,"1060":0,"1065":0,"1066":0,"1083":0,"1085":0,"1086":0,"1087":0,"1089":0,"1090":0,"1095":0,"1096":0,"1112":0,"1113":0,"1114":0,"1116":0,"1117":0,"1118":0,"1119":0,"1131":0,"1132":0,"1133":0,"1135":0,"1136":0,"1137":0,"1139":0,"1151":0,"1152":0,"1153":0,"1155":0,"1156":0,"1157":0,"1159":0,"1171":0,"1172":0,"1173":0,"1175":0,"1176":0,"1177":0,"1179":0,"1191":0,"1192":0,"1193":0,"1195":0,"1196":0,"1197":0,"1199":0,"1211":0,"1212":0,"1213":0,"1215":0,"1216":0,"1217":0,"1219":0,"1231":0,"1232":0,"1233":0,"1235":0,"1236":0,"1237":0,"1239":0,"1251":0,"1252":0,"1253":0,"1255":0,"1256":0,"1257":0,"1259":0,"1271":0,"1272":0,"1273":0,"1275":0,"1276":0,"1277":0,"1279":0,"1291":0,"1292":0,"1293":0,"1295":0,"1296":0,"1297":0,"1299":0,"1312":0,"1313":0,"1314":0,"1316":0,"1317":0,"1318":0,"1319":0,"1322":0,"1323":0,"1324":0,"1326":0,"1339":0,"1340":0,"1341":0,"1343":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1352":0,"1353":0,"1354":0,"1356":0,"1359":0,"1360":0,"1361":0,"1362":0,"1364":0,"1368":0,"1382":0,"1383":0,"1384":0,"1386":0,"1387":0,"1388":0,"1389":0,"1392":0,"1393":0,"1394":0,"1396":0,"1409":0,"1410":0,"1411":0,"1413":0,"1414":0,"1415":0,"1416":0,"1419":0,"1420":0,"1421":0,"1423":0,"1436":0,"1437":0,"1438":0,"1440":0,"1441":0,"1442":0,"1443":0,"1446":0,"1447":0,"1448":0,"1450":0,"1463":0,"1464":0,"1465":0,"1467":0,"1468":0,"1469":0,"1470":0,"1473":0,"1474":0,"1475":0,"1476":0,"1479":0,"1480":0,"1481":0,"1483":0,"1496":0,"1497":0,"1498":0,"1500":0,"1501":0,"1502":0,"1503":0,"1506":0,"1507":0,"1508":0,"1509":0,"1512":0,"1513":0,"1514":0,"1516":0,"1529":0,"1530":0,"1531":0,"1533":0,"1534":0,"1535":0,"1536":0,"1539":0,"1540":0,"1541":0,"1542":0,"1545":0,"1546":0,"1547":0,"1549":0,"1569":0,"1571":0,"1572":0,"1573":0,"1575":0,"1578":0,"1597":0,"1598":0,"1599":0,"1601":0,"1602":0,"1603":0,"1604":0,"1607":0,"1608":0,"1609":0,"1611":0,"1625":0,"1626":0,"1627":0,"1629":0,"1630":0,"1631":0,"1632":0,"1635":0,"1636":0,"1637":0,"1639":0,"1656":0,"1657":0,"1658":0,"1660":0,"1661":0,"1662":0,"1663":0,"1666":0,"1667":0,"1668":0,"1670":0,"1691":0,"1692":0,"1693":0,"1695":0,"1696":0,"1697":0,"1698":0,"1701":0,"1702":0,"1703":0,"1704":0,"1707":0,"1708":0,"1709":0,"1711":0,"1731":0,"1732":0,"1733":0,"1735":0,"1736":0,"1737":0,"1738":0,"1741":0,"1742":0,"1743":0,"1744":0,"1747":0,"1748":0,"1749":0,"1751":0,"1771":0,"1772":0,"1773":0,"1775":0,"1776":0,"1777":0,"1778":0,"1781":0,"1782":0,"1783":0,"1784":0,"1787":0,"1788":0,"1789":0,"1791":0,"1804":0,"1805":0,"1806":0,"1808":0,"1811":0,"1812":0,"1815":0,"1816":0,"1818":0,"1821":0,"1822":0,"1823":0,"1825":0,"1837":0,"1838":0,"1839":0,"1840":0,"1841":0,"1843":0,"1845":0,"1847":0,"1848":0,"1862":0,"1863":0,"1864":0,"1866":0,"1867":0,"1870":0,"1871":0,"1874":0,"1875":0,"1877":0,"1880":0,"1882":0,"1883":0,"1884":0,"1885":0,"1888":0,"1889":0,"1890":0,"1904":0,"1905":0,"1906":0,"1907":0,"1909":0,"1910":0,"1911":0,"1914":0,"1915":0,"1916":0,"1919":0,"1920":0,"1923":0,"1924":0,"1925":0,"1927":0,"1930":0,"1931":0,"1932":0,"1945":0,"1946":0,"1947":0,"1948":0,"1951":0,"1952":0,"1953":0,"1963":0,"1964":0,"1965":0,"1975":0,"1986":0,"1987":0,"1988":0,"1993":0,"1994":0,"2008":0,"2009":0,"2010":0,"2012":0,"2014":0,"2015":0,"2016":0,"2018":0,"2019":0,"2020":0,"2021":0,"2022":0,"2023":0,"2026":0,"2027":0,"2029":0,"2030":0,"2033":0,"2039":0,"2040":0,"2041":0,"2043":0,"2045":0,"2047":0,"2048":0,"2051":0,"2052":0,"2053":0,"2054":0,"2057":0,"2058":0,"2059":0,"2061":0,"2064":0,"2065":0,"2066":0,"2067":0,"2069":0,"2073":0,"2079":0,"2080":0,"2081":0,"2083":0,"2085":0,"2087":0,"2088":0,"2091":0,"2092":0,"2093":0,"2094":0,"2097":0,"2098":0,"2099":0,"2101":0,"2104":0,"2105":0,"2106":0,"2107":0,"2109":0,"2113":0,"2119":0,"2121":0,"2122":0,"2123":0,"2124":0,"2126":0,"2127":0,"2132":0,"2133":0,"2140":0,"2145":0,"2146":0,"2148":0,"2150":0,"2151":0,"2157":0,"2158":0,"2159":0,"2161":0,"2163":0,"2164":0,"2170":0,"2171":0,"2173":0,"2175":0,"2176":0,"2182":0,"2183":0,"2185":0,"2187":0,"2188":0,"2194":0,"2195":0,"2197":0,"2199":0,"2200":0,"2206":0,"2211":0,"2216":0,"2221":0,"2226":0,"2237":0,"2238":0,"2241":0,"2243":0,"2244":0,"2245":0,"2250":0,"2251":0,"2252":0,"2253":0,"2255":0,"2256":0,"2257":0,"2258":0,"2259":0,"2262":0,"2265":0,"2268":0,"2271":0,"2276":0,"2278":0,"2279":0,"2280":0,"2282":0,"2283":0,"2284":0,"2285":0,"2286":0,"2289":0,"2290":0,"2294":0,"2298":0,"2299":0,"2300":0,"2301":0,"2303":0,"2305":0,"2306":0,"2308":0,"2309":0,"2313":0,"2314":0,"2316":0,"2317":0,"2320":0,"2321":0,"2328":0,"2329":0,"2330":0,"2331":0,"2334":0,"2335":0,"2336":0,"2338":0,"2339":0,"2340":0,"2343":0,"2348":0,"2349":0,"2350":0,"2353":0,"2354":0,"2359":0,"2360":0,"2366":0,"2367":0,"2368":0,"2370":0,"2371":0,"2372":0,"2374":0,"2375":0,"2380":0,"2381":0,"2387":0,"2388":0,"2392":0,"2401":0,"2402":0,"2404":0,"2410":0,"2411":0,"2412":0,"2414":0,"2417":0,"2418":0,"2420":0,"2427":0,"2428":0,"2431":0,"2432":0,"2435":0,"2440":0,"2443":0,"2444":0,"2445":0,"2446":0,"2447":0,"2448":0,"2449":0,"2451":0,"2455":0,"2456":0,"2457":0,"2458":0,"2461":0,"2467":0,"2468":0,"2469":0,"2471":0,"2574":1,"2575":1,"2576":1,"2577":1,"2578":1,"2579":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/base.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/base.js","s":{"1":1,"2":1,"3":1,"4":1,"5":41,"6":41,"7":41,"8":41,"9":261,"10":261,"11":261,"12":261,"13":14,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":261,"22":52,"23":52,"24":52,"25":209,"26":41,"27":20,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":34,"44":34,"45":27,"46":34,"47":14,"48":34,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1,"240":1},"b":{"1":[14,247],"2":[261,261],"3":[0,14],"4":[14,14,14],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[52,209],"10":[52,20],"11":[20,21],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[34,4],"18":[27,7],"19":[14,20],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[1,0]},"f":{"1":41,"2":0,"3":0,"4":34,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"initializeProperties","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":55}}},"2":{"name":"defineWithParent","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":58}}},"3":{"name":"define","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":31}}},"4":{"name":"defineClass","line":111,"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":66}}},"5":{"name":"(anonymous_5)","line":112,"loc":{"start":{"line":112,"column":33},"end":{"line":112,"column":45}}},"6":{"name":"derive","line":130,"loc":{"start":{"line":130,"column":0},"end":{"line":130,"column":72}}},"7":{"name":"(anonymous_7)","line":132,"loc":{"start":{"line":132,"column":37},"end":{"line":132,"column":49}}},"8":{"name":"mix","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":26}}},"9":{"name":"(anonymous_9)","line":155,"loc":{"start":{"line":155,"column":33},"end":{"line":155,"column":45}}},"10":{"name":"(anonymous_10)","line":176,"loc":{"start":{"line":176,"column":12},"end":{"line":176,"column":35}}},"11":{"name":"(anonymous_11)","line":185,"loc":{"start":{"line":185,"column":9},"end":{"line":185,"column":29}}},"12":{"name":"(anonymous_12)","line":194,"loc":{"start":{"line":194,"column":16},"end":{"line":194,"column":126}}},"13":{"name":"(anonymous_13)","line":307,"loc":{"start":{"line":307,"column":15},"end":{"line":307,"column":39}}},"14":{"name":"(anonymous_14)","line":355,"loc":{"start":{"line":355,"column":15},"end":{"line":355,"column":31}}},"15":{"name":"(anonymous_15)","line":359,"loc":{"start":{"line":359,"column":25},"end":{"line":359,"column":37}}},"16":{"name":"(anonymous_16)","line":363,"loc":{"start":{"line":363,"column":30},"end":{"line":363,"column":42}}},"17":{"name":"(anonymous_17)","line":383,"loc":{"start":{"line":383,"column":23},"end":{"line":383,"column":35}}},"18":{"name":"(anonymous_18)","line":418,"loc":{"start":{"line":418,"column":21},"end":{"line":418,"column":37}}},"19":{"name":"(anonymous_19)","line":423,"loc":{"start":{"line":423,"column":23},"end":{"line":423,"column":39}}},"20":{"name":"(anonymous_20)","line":428,"loc":{"start":{"line":428,"column":32},"end":{"line":428,"column":51}}},"21":{"name":"(anonymous_21)","line":444,"loc":{"start":{"line":444,"column":18},"end":{"line":444,"column":30}}},"22":{"name":"(anonymous_22)","line":449,"loc":{"start":{"line":449,"column":20},"end":{"line":449,"column":32}}},"23":{"name":"(anonymous_23)","line":483,"loc":{"start":{"line":483,"column":21},"end":{"line":483,"column":37}}},"24":{"name":"(anonymous_24)","line":509,"loc":{"start":{"line":509,"column":18},"end":{"line":509,"column":36}}},"25":{"name":"(anonymous_25)","line":515,"loc":{"start":{"line":515,"column":28},"end":{"line":515,"column":44}}},"26":{"name":"(anonymous_26)","line":537,"loc":{"start":{"line":537,"column":19},"end":{"line":537,"column":31}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":39}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}},"4":{"start":{"line":31,"column":0},"end":{"line":62,"column":1}},"5":{"start":{"line":32,"column":4},"end":{"line":32,"column":36}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":19}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":15}},"8":{"start":{"line":35,"column":4},"end":{"line":58,"column":5}},"9":{"start":{"line":36,"column":8},"end":{"line":36,"column":26}},"10":{"start":{"line":37,"column":8},"end":{"line":37,"column":56}},"11":{"start":{"line":38,"column":8},"end":{"line":38,"column":34}},"12":{"start":{"line":39,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":40,"column":12},"end":{"line":50,"column":13}},"14":{"start":{"line":41,"column":16},"end":{"line":43,"column":17}},"15":{"start":{"line":42,"column":20},"end":{"line":42,"column":51}},"16":{"start":{"line":44,"column":16},"end":{"line":46,"column":17}},"17":{"start":{"line":45,"column":20},"end":{"line":45,"column":55}},"18":{"start":{"line":47,"column":16},"end":{"line":47,"column":46}},"19":{"start":{"line":48,"column":16},"end":{"line":48,"column":41}},"20":{"start":{"line":49,"column":16},"end":{"line":49,"column":25}},"21":{"start":{"line":52,"column":8},"end":{"line":56,"column":9}},"22":{"start":{"line":53,"column":12},"end":{"line":53,"column":42}},"23":{"start":{"line":54,"column":12},"end":{"line":54,"column":108}},"24":{"start":{"line":55,"column":12},"end":{"line":55,"column":21}},"25":{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},"26":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"27":{"start":{"line":60,"column":8},"end":{"line":60,"column":52}},"28":{"start":{"line":71,"column":0},"end":{"line":92,"column":1}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":49}},"30":{"start":{"line":74,"column":4},"end":{"line":85,"column":5}},"31":{"start":{"line":75,"column":8},"end":{"line":75,"column":49}},"32":{"start":{"line":76,"column":8},"end":{"line":84,"column":9}},"33":{"start":{"line":77,"column":12},"end":{"line":77,"column":54}},"34":{"start":{"line":78,"column":12},"end":{"line":82,"column":13}},"35":{"start":{"line":79,"column":16},"end":{"line":81,"column":18}},"36":{"start":{"line":83,"column":12},"end":{"line":83,"column":63}},"37":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"38":{"start":{"line":88,"column":8},"end":{"line":88,"column":79}},"39":{"start":{"line":91,"column":4},"end":{"line":91,"column":28}},"40":{"start":{"line":100,"column":0},"end":{"line":102,"column":1}},"41":{"start":{"line":101,"column":4},"end":{"line":101,"column":54}},"42":{"start":{"line":111,"column":0},"end":{"line":120,"column":1}},"43":{"start":{"line":112,"column":4},"end":{"line":112,"column":49}},"44":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"45":{"start":{"line":114,"column":8},"end":{"line":114,"column":69}},"46":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"47":{"start":{"line":117,"column":8},"end":{"line":117,"column":57}},"48":{"start":{"line":119,"column":4},"end":{"line":119,"column":23}},"49":{"start":{"line":130,"column":0},"end":{"line":146,"column":1}},"50":{"start":{"line":131,"column":4},"end":{"line":145,"column":5}},"51":{"start":{"line":132,"column":8},"end":{"line":132,"column":53}},"52":{"start":{"line":133,"column":8},"end":{"line":133,"column":48}},"53":{"start":{"line":134,"column":8},"end":{"line":134,"column":61}},"54":{"start":{"line":135,"column":8},"end":{"line":135,"column":146}},"55":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"56":{"start":{"line":137,"column":12},"end":{"line":137,"column":73}},"57":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"58":{"start":{"line":140,"column":12},"end":{"line":140,"column":61}},"59":{"start":{"line":142,"column":8},"end":{"line":142,"column":27}},"60":{"start":{"line":144,"column":8},"end":{"line":144,"column":72}},"61":{"start":{"line":154,"column":0},"end":{"line":161,"column":1}},"62":{"start":{"line":155,"column":4},"end":{"line":155,"column":49}},"63":{"start":{"line":156,"column":4},"end":{"line":156,"column":15}},"64":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"65":{"start":{"line":158,"column":8},"end":{"line":158,"column":66}},"66":{"start":{"line":160,"column":4},"end":{"line":160,"column":23}},"67":{"start":{"line":163,"column":0},"end":{"line":540,"column":2}},"68":{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},"69":{"start":{"line":178,"column":12},"end":{"line":180,"column":13}},"70":{"start":{"line":179,"column":16},"end":{"line":179,"column":49}},"71":{"start":{"line":182,"column":8},"end":{"line":182,"column":19}},"72":{"start":{"line":186,"column":8},"end":{"line":186,"column":24}},"73":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"74":{"start":{"line":188,"column":12},"end":{"line":188,"column":37}},"75":{"start":{"line":191,"column":8},"end":{"line":191,"column":22}},"76":{"start":{"line":196,"column":8},"end":{"line":196,"column":54}},"77":{"start":{"line":197,"column":8},"end":{"line":197,"column":32}},"78":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"79":{"start":{"line":200,"column":12},"end":{"line":200,"column":79}},"80":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"81":{"start":{"line":204,"column":12},"end":{"line":204,"column":177}},"82":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"83":{"start":{"line":208,"column":12},"end":{"line":208,"column":181}},"84":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"85":{"start":{"line":212,"column":12},"end":{"line":212,"column":73}},"86":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"87":{"start":{"line":216,"column":12},"end":{"line":216,"column":85}},"88":{"start":{"line":219,"column":8},"end":{"line":221,"column":9}},"89":{"start":{"line":220,"column":12},"end":{"line":220,"column":75}},"90":{"start":{"line":223,"column":8},"end":{"line":229,"column":9}},"91":{"start":{"line":224,"column":12},"end":{"line":228,"column":13}},"92":{"start":{"line":225,"column":16},"end":{"line":225,"column":91}},"93":{"start":{"line":227,"column":16},"end":{"line":227,"column":95}},"94":{"start":{"line":231,"column":8},"end":{"line":233,"column":9}},"95":{"start":{"line":232,"column":12},"end":{"line":232,"column":89}},"96":{"start":{"line":236,"column":8},"end":{"line":238,"column":9}},"97":{"start":{"line":237,"column":12},"end":{"line":237,"column":87}},"98":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"99":{"start":{"line":241,"column":12},"end":{"line":241,"column":100}},"100":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"101":{"start":{"line":246,"column":12},"end":{"line":246,"column":79}},"102":{"start":{"line":249,"column":8},"end":{"line":251,"column":9}},"103":{"start":{"line":250,"column":12},"end":{"line":250,"column":89}},"104":{"start":{"line":253,"column":8},"end":{"line":255,"column":9}},"105":{"start":{"line":254,"column":12},"end":{"line":254,"column":105}},"106":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"107":{"start":{"line":258,"column":12},"end":{"line":258,"column":81}},"108":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"109":{"start":{"line":262,"column":12},"end":{"line":262,"column":68}},"110":{"start":{"line":266,"column":8},"end":{"line":275,"column":9}},"111":{"start":{"line":267,"column":12},"end":{"line":274,"column":13}},"112":{"start":{"line":268,"column":16},"end":{"line":268,"column":56}},"113":{"start":{"line":269,"column":16},"end":{"line":271,"column":17}},"114":{"start":{"line":270,"column":20},"end":{"line":270,"column":50}},"115":{"start":{"line":273,"column":16},"end":{"line":273,"column":91}},"116":{"start":{"line":277,"column":8},"end":{"line":279,"column":9}},"117":{"start":{"line":278,"column":12},"end":{"line":278,"column":76}},"118":{"start":{"line":281,"column":8},"end":{"line":283,"column":9}},"119":{"start":{"line":282,"column":12},"end":{"line":282,"column":177}},"120":{"start":{"line":285,"column":8},"end":{"line":289,"column":9}},"121":{"start":{"line":286,"column":12},"end":{"line":288,"column":13}},"122":{"start":{"line":287,"column":16},"end":{"line":287,"column":87}},"123":{"start":{"line":291,"column":8},"end":{"line":293,"column":9}},"124":{"start":{"line":292,"column":12},"end":{"line":292,"column":78}},"125":{"start":{"line":295,"column":8},"end":{"line":297,"column":9}},"126":{"start":{"line":296,"column":12},"end":{"line":296,"column":85}},"127":{"start":{"line":299,"column":8},"end":{"line":301,"column":9}},"128":{"start":{"line":300,"column":12},"end":{"line":300,"column":93}},"129":{"start":{"line":303,"column":8},"end":{"line":303,"column":23}},"130":{"start":{"line":308,"column":8},"end":{"line":314,"column":9}},"131":{"start":{"line":310,"column":12},"end":{"line":313,"column":14}},"132":{"start":{"line":316,"column":8},"end":{"line":318,"column":9}},"133":{"start":{"line":317,"column":12},"end":{"line":317,"column":46}},"134":{"start":{"line":320,"column":8},"end":{"line":322,"column":9}},"135":{"start":{"line":321,"column":12},"end":{"line":321,"column":46}},"136":{"start":{"line":331,"column":8},"end":{"line":331,"column":48}},"137":{"start":{"line":332,"column":8},"end":{"line":332,"column":21}},"138":{"start":{"line":333,"column":8},"end":{"line":341,"column":9}},"139":{"start":{"line":335,"column":12},"end":{"line":335,"column":49}},"140":{"start":{"line":336,"column":12},"end":{"line":336,"column":51}},"141":{"start":{"line":339,"column":12},"end":{"line":339,"column":49}},"142":{"start":{"line":340,"column":12},"end":{"line":340,"column":51}},"143":{"start":{"line":343,"column":8},"end":{"line":349,"column":10}},"144":{"start":{"line":351,"column":8},"end":{"line":351,"column":22}},"145":{"start":{"line":356,"column":8},"end":{"line":356,"column":27}},"146":{"start":{"line":357,"column":8},"end":{"line":357,"column":29}},"147":{"start":{"line":359,"column":8},"end":{"line":361,"column":10}},"148":{"start":{"line":360,"column":12},"end":{"line":360,"column":85}},"149":{"start":{"line":363,"column":8},"end":{"line":381,"column":10}},"150":{"start":{"line":364,"column":12},"end":{"line":364,"column":43}},"151":{"start":{"line":365,"column":12},"end":{"line":365,"column":42}},"152":{"start":{"line":367,"column":12},"end":{"line":376,"column":13}},"153":{"start":{"line":368,"column":16},"end":{"line":368,"column":57}},"154":{"start":{"line":369,"column":16},"end":{"line":371,"column":17}},"155":{"start":{"line":370,"column":20},"end":{"line":370,"column":33}},"156":{"start":{"line":373,"column":16},"end":{"line":373,"column":55}},"157":{"start":{"line":373,"column":49},"end":{"line":373,"column":55}},"158":{"start":{"line":375,"column":16},"end":{"line":375,"column":27}},"159":{"start":{"line":378,"column":12},"end":{"line":378,"column":75}},"160":{"start":{"line":379,"column":12},"end":{"line":379,"column":40}},"161":{"start":{"line":380,"column":12},"end":{"line":380,"column":25}},"162":{"start":{"line":383,"column":8},"end":{"line":397,"column":10}},"163":{"start":{"line":384,"column":12},"end":{"line":384,"column":59}},"164":{"start":{"line":385,"column":12},"end":{"line":385,"column":29}},"165":{"start":{"line":386,"column":12},"end":{"line":393,"column":13}},"166":{"start":{"line":387,"column":16},"end":{"line":387,"column":50}},"167":{"start":{"line":388,"column":16},"end":{"line":388,"column":43}},"168":{"start":{"line":391,"column":16},"end":{"line":391,"column":75}},"169":{"start":{"line":392,"column":16},"end":{"line":392,"column":40}},"170":{"start":{"line":395,"column":12},"end":{"line":395,"column":33}},"171":{"start":{"line":396,"column":12},"end":{"line":396,"column":25}},"172":{"start":{"line":399,"column":8},"end":{"line":412,"column":9}},"173":{"start":{"line":400,"column":12},"end":{"line":402,"column":13}},"174":{"start":{"line":401,"column":16},"end":{"line":401,"column":29}},"175":{"start":{"line":404,"column":12},"end":{"line":404,"column":53}},"176":{"start":{"line":404,"column":47},"end":{"line":404,"column":53}},"177":{"start":{"line":406,"column":12},"end":{"line":411,"column":13}},"178":{"start":{"line":407,"column":16},"end":{"line":407,"column":50}},"179":{"start":{"line":410,"column":16},"end":{"line":410,"column":43}},"180":{"start":{"line":414,"column":8},"end":{"line":414,"column":25}},"181":{"start":{"line":419,"column":8},"end":{"line":419,"column":53}},"182":{"start":{"line":424,"column":8},"end":{"line":424,"column":53}},"183":{"start":{"line":430,"column":8},"end":{"line":430,"column":70}},"184":{"start":{"line":431,"column":8},"end":{"line":431,"column":33}},"185":{"start":{"line":432,"column":8},"end":{"line":432,"column":30}},"186":{"start":{"line":433,"column":8},"end":{"line":438,"column":9}},"187":{"start":{"line":435,"column":12},"end":{"line":435,"column":93}},"188":{"start":{"line":437,"column":12},"end":{"line":437,"column":35}},"189":{"start":{"line":440,"column":8},"end":{"line":440,"column":28}},"190":{"start":{"line":445,"column":8},"end":{"line":445,"column":59}},"191":{"start":{"line":450,"column":8},"end":{"line":450,"column":20}},"192":{"start":{"line":452,"column":8},"end":{"line":454,"column":9}},"193":{"start":{"line":453,"column":12},"end":{"line":453,"column":38}},"194":{"start":{"line":456,"column":8},"end":{"line":456,"column":18}},"195":{"start":{"line":458,"column":8},"end":{"line":460,"column":9}},"196":{"start":{"line":459,"column":12},"end":{"line":459,"column":38}},"197":{"start":{"line":462,"column":8},"end":{"line":462,"column":18}},"198":{"start":{"line":464,"column":8},"end":{"line":466,"column":9}},"199":{"start":{"line":465,"column":12},"end":{"line":465,"column":38}},"200":{"start":{"line":468,"column":8},"end":{"line":468,"column":18}},"201":{"start":{"line":470,"column":8},"end":{"line":472,"column":9}},"202":{"start":{"line":471,"column":12},"end":{"line":471,"column":38}},"203":{"start":{"line":474,"column":8},"end":{"line":474,"column":18}},"204":{"start":{"line":476,"column":8},"end":{"line":478,"column":9}},"205":{"start":{"line":477,"column":12},"end":{"line":477,"column":38}},"206":{"start":{"line":480,"column":8},"end":{"line":480,"column":18}},"207":{"start":{"line":484,"column":8},"end":{"line":484,"column":36}},"208":{"start":{"line":485,"column":8},"end":{"line":485,"column":25}},"209":{"start":{"line":486,"column":8},"end":{"line":486,"column":22}},"210":{"start":{"line":488,"column":8},"end":{"line":501,"column":9}},"211":{"start":{"line":489,"column":12},"end":{"line":492,"column":13}},"212":{"start":{"line":491,"column":16},"end":{"line":491,"column":25}},"213":{"start":{"line":493,"column":12},"end":{"line":493,"column":20}},"214":{"start":{"line":494,"column":12},"end":{"line":496,"column":13}},"215":{"start":{"line":495,"column":16},"end":{"line":495,"column":29}},"216":{"start":{"line":497,"column":12},"end":{"line":500,"column":13}},"217":{"start":{"line":498,"column":16},"end":{"line":498,"column":35}},"218":{"start":{"line":499,"column":16},"end":{"line":499,"column":22}},"219":{"start":{"line":502,"column":8},"end":{"line":502,"column":35}},"220":{"start":{"line":502,"column":22},"end":{"line":502,"column":35}},"221":{"start":{"line":503,"column":8},"end":{"line":503,"column":46}},"222":{"start":{"line":503,"column":34},"end":{"line":503,"column":46}},"223":{"start":{"line":504,"column":8},"end":{"line":504,"column":51}},"224":{"start":{"line":505,"column":8},"end":{"line":505,"column":45}},"225":{"start":{"line":505,"column":33},"end":{"line":505,"column":45}},"226":{"start":{"line":506,"column":8},"end":{"line":506,"column":21}},"227":{"start":{"line":510,"column":8},"end":{"line":511,"column":81}},"228":{"start":{"line":516,"column":8},"end":{"line":518,"column":9}},"229":{"start":{"line":517,"column":12},"end":{"line":517,"column":25}},"230":{"start":{"line":520,"column":8},"end":{"line":520,"column":55}},"231":{"start":{"line":522,"column":8},"end":{"line":524,"column":9}},"232":{"start":{"line":523,"column":12},"end":{"line":523,"column":25}},"233":{"start":{"line":526,"column":8},"end":{"line":528,"column":9}},"234":{"start":{"line":527,"column":12},"end":{"line":527,"column":25}},"235":{"start":{"line":530,"column":8},"end":{"line":532,"column":9}},"236":{"start":{"line":531,"column":12},"end":{"line":531,"column":25}},"237":{"start":{"line":534,"column":8},"end":{"line":534,"column":20}},"238":{"start":{"line":538,"column":8},"end":{"line":538,"column":39}},"239":{"start":{"line":543,"column":0},"end":{"line":545,"column":1}},"240":{"start":{"line":544,"column":4},"end":{"line":544,"column":26}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":18}},{"start":{"line":39,"column":22},"end":{"line":39,"column":48}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":12}},{"start":{"line":40,"column":12},"end":{"line":40,"column":12}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":42}},{"start":{"line":40,"column":46},"end":{"line":40,"column":78}},{"start":{"line":40,"column":82},"end":{"line":40,"column":114}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":16}},{"start":{"line":41,"column":16},"end":{"line":41,"column":16}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":16}},{"start":{"line":44,"column":16},"end":{"line":44,"column":16}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":20},"end":{"line":44,"column":26}},{"start":{"line":44,"column":30},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":84}}]},"8":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":29},"end":{"line":47,"column":39}},{"start":{"line":47,"column":43},"end":{"line":47,"column":45}}]},"9":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"10":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":25},"end":{"line":53,"column":35}},{"start":{"line":53,"column":39},"end":{"line":53,"column":41}}]},"11":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"12":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":27},"end":{"line":72,"column":42}},{"start":{"line":72,"column":46},"end":{"line":72,"column":48}}]},"13":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"14":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":12}},{"start":{"line":78,"column":12},"end":{"line":78,"column":12}}]},"15":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"16":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":56},"end":{"line":88,"column":60}},{"start":{"line":88,"column":64},"end":{"line":88,"column":77}}]},"17":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":18},"end":{"line":112,"column":29}},{"start":{"line":112,"column":33},"end":{"line":112,"column":48}}]},"18":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"19":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"20":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"21":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":22},"end":{"line":132,"column":33}},{"start":{"line":132,"column":37},"end":{"line":132,"column":52}}]},"22":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"23":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"24":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":18},"end":{"line":155,"column":29}},{"start":{"line":155,"column":33},"end":{"line":155,"column":48}}]},"25":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":12}},{"start":{"line":178,"column":12},"end":{"line":178,"column":12}}]},"26":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":18},"end":{"line":197,"column":25}},{"start":{"line":197,"column":29},"end":{"line":197,"column":31}}]},"27":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":8}},{"start":{"line":199,"column":8},"end":{"line":199,"column":8}}]},"28":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"29":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":113},"end":{"line":204,"column":148}},{"start":{"line":204,"column":151},"end":{"line":204,"column":176}}]},"30":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"31":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":115},"end":{"line":208,"column":151}},{"start":{"line":208,"column":154},"end":{"line":208,"column":180}}]},"32":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":8}},{"start":{"line":211,"column":8},"end":{"line":211,"column":8}}]},"33":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":8}},{"start":{"line":215,"column":8},"end":{"line":215,"column":8}}]},"34":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":219,"column":8}},{"start":{"line":219,"column":8},"end":{"line":219,"column":8}}]},"35":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":8}},{"start":{"line":223,"column":8},"end":{"line":223,"column":8}}]},"36":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":224,"column":12}},{"start":{"line":224,"column":12},"end":{"line":224,"column":12}}]},"37":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":8}},{"start":{"line":231,"column":8},"end":{"line":231,"column":8}}]},"38":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"39":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"40":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":8}},{"start":{"line":245,"column":8},"end":{"line":245,"column":8}}]},"41":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":8},"end":{"line":249,"column":8}},{"start":{"line":249,"column":8},"end":{"line":249,"column":8}}]},"42":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":8},"end":{"line":253,"column":8}},{"start":{"line":253,"column":8},"end":{"line":253,"column":8}}]},"43":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":257,"column":8}},{"start":{"line":257,"column":8},"end":{"line":257,"column":8}}]},"44":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":8}},{"start":{"line":261,"column":8},"end":{"line":261,"column":8}}]},"45":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":8},"end":{"line":266,"column":8}},{"start":{"line":266,"column":8},"end":{"line":266,"column":8}}]},"46":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":12},"end":{"line":266,"column":58}},{"start":{"line":266,"column":62},"end":{"line":266,"column":103}}]},"47":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":12},"end":{"line":267,"column":12}},{"start":{"line":267,"column":12},"end":{"line":267,"column":12}}]},"48":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":16},"end":{"line":269,"column":16}},{"start":{"line":269,"column":16},"end":{"line":269,"column":16}}]},"49":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":20},"end":{"line":269,"column":41}},{"start":{"line":269,"column":45},"end":{"line":269,"column":79}}]},"50":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":8},"end":{"line":277,"column":8}},{"start":{"line":277,"column":8},"end":{"line":277,"column":8}}]},"51":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":8},"end":{"line":281,"column":8}},{"start":{"line":281,"column":8},"end":{"line":281,"column":8}}]},"52":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":12},"end":{"line":281,"column":36}},{"start":{"line":281,"column":40},"end":{"line":281,"column":69}}]},"53":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":8},"end":{"line":285,"column":8}},{"start":{"line":285,"column":8},"end":{"line":285,"column":8}}]},"54":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":12},"end":{"line":285,"column":27}},{"start":{"line":285,"column":31},"end":{"line":285,"column":45}}]},"55":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":12},"end":{"line":286,"column":12}},{"start":{"line":286,"column":12},"end":{"line":286,"column":12}}]},"56":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":8}},{"start":{"line":291,"column":8},"end":{"line":291,"column":8}}]},"57":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":8},"end":{"line":295,"column":8}},{"start":{"line":295,"column":8},"end":{"line":295,"column":8}}]},"58":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":8}},{"start":{"line":299,"column":8},"end":{"line":299,"column":8}}]},"59":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":8}},{"start":{"line":308,"column":8},"end":{"line":308,"column":8}}]},"60":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":8},"end":{"line":316,"column":8}},{"start":{"line":316,"column":8},"end":{"line":316,"column":8}}]},"61":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":8},"end":{"line":320,"column":8}},{"start":{"line":320,"column":8},"end":{"line":320,"column":8}}]},"62":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":8},"end":{"line":333,"column":8}},{"start":{"line":333,"column":8},"end":{"line":333,"column":8}}]},"63":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":16},"end":{"line":369,"column":16}},{"start":{"line":369,"column":16},"end":{"line":369,"column":16}}]},"64":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":16},"end":{"line":373,"column":16}},{"start":{"line":373,"column":16},"end":{"line":373,"column":16}}]},"65":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":12},"end":{"line":386,"column":12}},{"start":{"line":386,"column":12},"end":{"line":386,"column":12}}]},"66":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":12},"end":{"line":400,"column":12}},{"start":{"line":400,"column":12},"end":{"line":400,"column":12}}]},"67":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":12},"end":{"line":404,"column":12}},{"start":{"line":404,"column":12},"end":{"line":404,"column":12}}]},"68":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":12},"end":{"line":406,"column":12}},{"start":{"line":406,"column":12},"end":{"line":406,"column":12}}]},"69":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":16},"end":{"line":406,"column":43}},{"start":{"line":406,"column":47},"end":{"line":406,"column":74}}]},"70":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":8},"end":{"line":433,"column":8}},{"start":{"line":433,"column":8},"end":{"line":433,"column":8}}]},"71":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":12},"end":{"line":489,"column":12}},{"start":{"line":489,"column":12},"end":{"line":489,"column":12}}]},"72":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":12},"end":{"line":494,"column":12}},{"start":{"line":494,"column":12},"end":{"line":494,"column":12}}]},"73":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":16},"end":{"line":494,"column":27}},{"start":{"line":494,"column":31},"end":{"line":494,"column":63}}]},"74":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":12},"end":{"line":497,"column":12}},{"start":{"line":497,"column":12},"end":{"line":497,"column":12}}]},"75":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":8},"end":{"line":502,"column":8}},{"start":{"line":502,"column":8},"end":{"line":502,"column":8}}]},"76":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":8},"end":{"line":503,"column":8}},{"start":{"line":503,"column":8},"end":{"line":503,"column":8}}]},"77":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":8},"end":{"line":505,"column":8}},{"start":{"line":505,"column":8},"end":{"line":505,"column":8}}]},"78":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":8},"end":{"line":516,"column":8}},{"start":{"line":516,"column":8},"end":{"line":516,"column":8}}]},"79":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":8},"end":{"line":522,"column":8}},{"start":{"line":522,"column":8},"end":{"line":522,"column":8}}]},"80":{"line":522,"type":"binary-expr","locations":[{"start":{"line":522,"column":12},"end":{"line":522,"column":17}},{"start":{"line":522,"column":21},"end":{"line":522,"column":39}}]},"81":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":8},"end":{"line":526,"column":8}},{"start":{"line":526,"column":8},"end":{"line":526,"column":8}}]},"82":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":8},"end":{"line":530,"column":8}},{"start":{"line":530,"column":8},"end":{"line":530,"column":8}}]},"83":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":0},"end":{"line":543,"column":0}},{"start":{"line":543,"column":0},"end":{"line":543,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var AuthHandler = require(\"./auth\");","var Constants = require(\"./constants\");","var Platform = require(\"./platform\");","","//SCRIPT START","function initializeProperties(target, members, prefix) {","    var keys = Object.keys(members);","    var properties;","    var i, len;","    for (i = 0, len = keys.length; i < len; i++) {","        var key = keys[i];","        var enumerable = key.charCodeAt(0) !== /*_*/ 95;","        var member = members[key];","        if (member && typeof member === \"object\") {","            if (member.value !== undefined || typeof member.get === \"function\" || typeof member.set === \"function\") {","                if (member.enumerable === undefined) {","                    member.enumerable = enumerable;","                }","                if (prefix && member.setName && typeof member.setName === \"function\") {","                    member.setName(prefix + \".\" + key);","                }","                properties = properties || {};","                properties[key] = member;","                continue;","            }","        }","        if (!enumerable) {","            properties = properties || {};","            properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };","            continue;","        }","        target[key] = member;","    }","    if (properties) {","        Object.defineProperties(target, properties);","    }","}","","/**","*  Defines a new namespace with the specified name under the specified parent namespace.","* @param {Object} parentNamespace - The parent namespace.","* @param {String} name - The name of the new namespace.","* @param {Object} members - The members of the new namespace.","* @returns {Function} - The newly-defined namespace.","*/","function defineWithParent(parentNamespace, name, members) {","    var currentNamespace = parentNamespace || {};","    ","    if (name) {","        var namespaceFragments = name.split(\".\");","        for (var i = 0, len = namespaceFragments.length; i < len; i++) {","            var namespaceName = namespaceFragments[i];","            if (!currentNamespace[namespaceName]) {","                Object.defineProperty(currentNamespace, namespaceName,","                    { value: {}, writable: false, enumerable: true, configurable: true }","                );","            }","            currentNamespace = currentNamespace[namespaceName];","        }","    }","    ","    if (members) {","        initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");","    }","    ","    return currentNamespace;","}","","/**","*  Defines a new namespace with the specified name.","* @param {String} name - The name of the namespace. This could be a dot-separated name for nested namespaces.","* @param {Object} members - The members of the new namespace.","* @returns {Function} - The newly-defined namespace.","*/","function define(name, members) {","    return defineWithParent(undefined, name, members);","}","","/**","*  Defines a class using the given constructor and the specified instance members.","* @param {Function} constructor - A constructor function that is used to instantiate this class.","* @param {Object} instanceMembers - The set of instance fields, properties, and methods to be made available on the class.","* @param {Object} staticMembers - The set of static fields, properties, and methods to be made available on the class.","* @returns {Function} - The newly-defined class.","*/","function defineClass(constructor, instanceMembers, staticMembers) {","    constructor = constructor || function () { };","    if (instanceMembers) {","        initializeProperties(constructor.prototype, instanceMembers);","    }","    if (staticMembers) {","        initializeProperties(constructor, staticMembers);","    }","    return constructor;","}","","/**","*  Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.","* @param {Function} baseClass - The class to inherit from.","* @param {Function} constructor - A constructor function that is used to instantiate this class.","* @param {Object} instanceMembers - The set of instance fields, properties, and methods to be made available on the class.","* @param {Object} staticMembers - The set of static fields, properties, and methods to be made available on the class.","* @returns {Function} - The newly-defined class.","*/","function derive(baseClass, constructor, instanceMembers, staticMembers) {","    if (baseClass) {","        constructor = constructor || function () { };","        var basePrototype = baseClass.prototype;","        constructor.prototype = Object.create(basePrototype);","        Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });","        if (instanceMembers) {","            initializeProperties(constructor.prototype, instanceMembers);","        }","        if (staticMembers) {","            initializeProperties(constructor, staticMembers);","        }","        return constructor;","    } else {","        return defineClass(constructor, instanceMembers, staticMembers);","    }","}","","/**","*  Defines a class using the given constructor and the union of the set of instance members","*   specified by all the mixin objects. The mixin parameter list is of variable length.","* @param {object} constructor - A constructor function that is used to instantiate this class.","* @returns {Function} - The newly-defined class.","*/","function mix(constructor) {","    constructor = constructor || function () { };","    var i, len;","    for (i = 1, len = arguments.length; i < len; i++) {","        initializeProperties(constructor.prototype, arguments[i]);","    }","    return constructor;","}","","var Base = {","    NotImplementedException: \"NotImplementedException\",","    ","    defineWithParent: defineWithParent,","    ","    define: define,","    ","    defineClass: defineClass,","    ","    derive: derive,","    ","    mix: mix,","    ","    extend: function (obj, extent) {","        for (var property in extent) {","            if (typeof extent[property] !== \"function\") {","                obj[property] = extent[property];","            }","        }","        return obj;","    },","    ","    map: function (list, fn) {","        var result = [];","        for (var i = 0, n = list.length; i < n; i++) {","            result.push(fn(list[i]));","        }","        ","        return result;","    },","    ","    getHeaders: function (documentClient, defaultHeaders, verb, path, resourceId, resourceType, options, partitionKeyRangeId) {","        ","        var headers = Base.extend({}, defaultHeaders);","        options = options || {};","        ","        if (options.continuation) {","            headers[Constants.HttpHeaders.Continuation] = options.continuation;","        }","        ","        if (options.preTriggerInclude) {","            headers[Constants.HttpHeaders.PreTriggerInclude] = options.preTriggerInclude.constructor === Array ? options.preTriggerInclude.join(\",\") : options.preTriggerInclude;","        }","        ","        if (options.postTriggerInclude) {","            headers[Constants.HttpHeaders.PostTriggerInclude] = options.postTriggerInclude.constructor === Array ? options.postTriggerInclude.join(\",\") : options.postTriggerInclude;","        }","        ","        if (options.offerType) {","            headers[Constants.HttpHeaders.OfferType] = options.offerType;","        }","        ","        if (options.offerThroughput) {","            headers[Constants.HttpHeaders.OfferThroughput] = options.offerThroughput;","        }","        ","        if (options.maxItemCount) {","            headers[Constants.HttpHeaders.PageSize] = options.maxItemCount;","        }","        ","        if (options.accessCondition) {","            if (options.accessCondition.type === \"IfMatch\") {","                headers[Constants.HttpHeaders.IfMatch] = options.accessCondition.condition;","            } else {","                headers[Constants.HttpHeaders.IfNoneMatch] = options.accessCondition.condition;","            }","        }","        ","        if (options.indexingDirective) {","            headers[Constants.HttpHeaders.IndexingDirective] = options.indexingDirective;","        }","        ","        // TODO: add consistency level validation.","        if (options.consistencyLevel) {","            headers[Constants.HttpHeaders.ConsistencyLevel] = options.consistencyLevel;","        }","        ","        if (options.resourceTokenExpirySeconds) {","            headers[Constants.HttpHeaders.ResourceTokenExpiry] = options.resourceTokenExpirySeconds;","        }","        ","        // TODO: add session token automatic handling in case of session consistency.","        if (options.sessionToken) {","            headers[Constants.HttpHeaders.SessionToken] = options.sessionToken;","        }","        ","        if (options.enableScanInQuery) {","            headers[Constants.HttpHeaders.EnableScanInQuery] = options.enableScanInQuery;","        }","        ","        if (options.enableCrossPartitionQuery) {","            headers[Constants.HttpHeaders.EnableCrossPartitionQuery] = options.enableCrossPartitionQuery;","        }","","        if (options.maxDegreeOfParallelism) {","            headers[Constants.HttpHeaders.ParallelizeCrossPartitionQuery] = true;","        }","","        if (options.populateQuotaInfo) {","            headers[Constants.HttpHeaders.PopulateQuotaInfo] = true;","        }","        ","        // If the user is not using partition resolver, we add options.partitonKey to the header for elastic collections","        if (documentClient.partitionResolver === undefined || documentClient.partitionResolver === null) {","            if (options.partitionKey !== undefined) {","                var partitionKey = options.partitionKey;","                if (partitionKey === null || partitionKey.constructor !== Array) {","                    partitionKey = [partitionKey];","                }","                ","                headers[Constants.HttpHeaders.PartitionKey] = JSON.stringify(partitionKey);","            }","        }","        ","        if (documentClient.masterKey) {","            headers[Constants.HttpHeaders.XDate] = new Date().toUTCString();","        }","        ","        if (documentClient.masterKey || documentClient.resourceTokens) {","            headers[Constants.HttpHeaders.Authorization] = encodeURIComponent(AuthHandler.getAuthorizationHeader(documentClient, verb, path, resourceId, resourceType, headers));","        }","        ","        if (verb === \"post\" || verb === \"put\") {","            if (!headers[Constants.HttpHeaders.ContentType]) {","                headers[Constants.HttpHeaders.ContentType] = Constants.MediaTypes.Json;","            }","        }","        ","        if (!headers[Constants.HttpHeaders.Accept]) {","            headers[Constants.HttpHeaders.Accept] = Constants.MediaTypes.Json;","        }","        ","        if (partitionKeyRangeId !== undefined) {","            headers[Constants.HttpHeaders.PartitionKeyRangeID] = partitionKeyRangeId;","        }","","        if (options.enableScriptLogging ) {","            headers[Constants.HttpHeaders.EnableScriptLogging] = options.enableScriptLogging;","        }","","        return headers;","    },","    ","    /** @ignore */","    parseLink: function (resourcePath) {","        if (resourcePath.length === 0) {","            /* for DatabaseAccount case, both type and objectBody will be undefined. */","            return {","                type: undefined,","                objectBody: undefined","            };","        }","        ","        if (resourcePath[resourcePath.length - 1] !== \"/\") {","            resourcePath = resourcePath + \"/\";","        }","        ","        if (resourcePath[0] !== \"/\") {","            resourcePath = \"/\" + resourcePath;","        }","        ","        /*","        / The path will be in the form of /[resourceType]/[resourceId]/ .... /[resourceType]//[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/","        / or /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/","        / The result of split will be in the form of [[[resourceType], [resourceId] ... ,[resourceType], [resourceId], \"\"]","        / In the first case, to extract the resourceId it will the element before last ( at length -2 ) and the the type will before it ( at length -3 )","        / In the second case, to extract the resource type it will the element before last ( at length -2 )","        */","        var pathParts = resourcePath.split(\"/\");","        var id, type;","        if (pathParts.length % 2 === 0) {","            // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId].","            id = pathParts[pathParts.length - 2];","            type = pathParts[pathParts.length - 3];","        } else {","            // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/.","            id = pathParts[pathParts.length - 3];","            type = pathParts[pathParts.length - 2];","        }","        ","        var result = {","            type: type,","            objectBody: {","                id: id,","                self: resourcePath","            }","        };","        ","        return result;","    },","    ","    /** @ignore */","    parsePath: function (path) {","        var pathParts = [];","        var currentIndex = 0;","        ","        var throwError = function () {","            throw new Error(\"Path \" + path + \" is invalid at index \" + currentIndex);","        };","        ","        var getEscapedToken = function () {","            var quote = path[currentIndex];","            var newIndex = ++currentIndex;","            ","            while (true) {","                newIndex = path.indexOf(quote, newIndex);","                if (newIndex == -1) {","                    throwError();","                }","                ","                if (path[newIndex - 1] !== '\\\\') break;","                ","                ++newIndex;","            }","            ","            var token = path.substr(currentIndex, newIndex - currentIndex);","            currentIndex = newIndex + 1;","            return token;","        };","        ","        var getToken = function () {","            var newIndex = path.indexOf('/', currentIndex);","            var token = null;","            if (newIndex == -1) {","                token = path.substr(currentIndex);","                currentIndex = path.length;","            }","            else {","                token = path.substr(currentIndex, newIndex - currentIndex);","                currentIndex = newIndex;","            }","            ","            token = token.trim();","            return token;","        };","        ","        while (currentIndex < path.length) {","            if (path[currentIndex] !== '/') {","                throwError();","            }","            ","            if (++currentIndex == path.length) break;","            ","            if (path[currentIndex] === '\\\"' || path[currentIndex] === '\\'') {","                pathParts.push(getEscapedToken());","            }","            else {","                pathParts.push(getToken());","            }","        }","        ","        return pathParts;","    },","    ","    /** @ignore */","    getDatabaseLink: function (link) {","        return link.split('/').slice(0, 2).join('/');","    },","    ","    /** @ignore */","    getCollectionLink: function (link) {","        return link.split('/').slice(0, 4).join('/');","    },","    ","    /** @ignore */","    getAttachmentIdFromMediaId: function (mediaId) {","        // Replace - with / on the incoming mediaId.  This will preserve the / so that we can revert it later.","        var buffer = new Buffer(mediaId.replace(/-/g, \"/\"), \"base64\");","        var ResoureIdLength = 20;","        var attachmentId = \"\";","        if (buffer.length > ResoureIdLength) {","            // After the base64 conversion, change the / back to a - to get the proper attachmentId","            attachmentId = buffer.toString(\"base64\", 0, ResoureIdLength).replace(/\\//g, \"-\");","        } else {","            attachmentId = mediaId;","        }","        ","        return attachmentId;","    },","    ","    /** @ignore */","    getHexaDigit: function () {","        return Math.floor(Math.random() * 16).toString(16);","    },","    ","    /** @ignore */","    generateGuidId: function () {","        var id = \"\";","        ","        for (var i = 0; i < 8; i++) {","            id += Base.getHexaDigit();","        }","        ","        id += \"-\";","        ","        for (var i = 0; i < 4; i++) {","            id += Base.getHexaDigit();","        }","        ","        id += \"-\";","        ","        for (var i = 0; i < 4; i++) {","            id += Base.getHexaDigit();","        }","        ","        id += \"-\";","        ","        for (var i = 0; i < 4; i++) {","            id += Base.getHexaDigit();","        }","        ","        id += \"-\";","        ","        for (var i = 0; i < 12; i++) {","            id += Base.getHexaDigit();","        }","        ","        return id;","    },","    ","    isLinkNameBased: function (link) {","        var parts = link.split(\"/\");","        var firstId = \"\";","        var count = 0;","        // Get the first id from path.","        for (var i = 0; i < parts.length; ++i) {","            if (!parts[i]) {","                // Skip empty string.","                continue;","            }","            ++count;","            if (count === 1 && parts[i].toLowerCase() !== \"dbs\") {","                return false;","            }","            if (count === 2) {","                firstId = parts[i];","                break;","            }","        }","        if (!firstId) return false;","        if (firstId.length !== 8) return true;","        var buffer = new Buffer(firstId, \"base64\");","        if (buffer.length !== 4) return true;","        return false;","    },","    /** @ignore */","    _trimSlashes: function (source) {","        return source.replace(Constants.RegularExpressions.TrimLeftSlashes, \"\")","                     .replace(Constants.RegularExpressions.TrimRightSlashes, \"\");","    },","    ","    /** @ignore */","    _isValidCollectionLink: function (link) {","        if (typeof link !== \"string\") {","            return false;","        }","        ","        var parts = Base._trimSlashes(link).split(\"/\");","        ","        if (parts && parts.length !== 4) {","            return false;","        }","        ","        if (parts[0] !== \"dbs\") {","            return false;","        }","        ","        if (parts[2] !== \"colls\") {","            return false;","        }","        ","        return true;","    },","    /** @ignore */","    _getUserAgent: function () {","        return Platform.getUserAgent();","    }","};","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = Base;","}",""],"l":{"26":1,"27":1,"28":1,"31":1,"32":41,"33":41,"34":41,"35":41,"36":261,"37":261,"38":261,"39":261,"40":14,"41":0,"42":0,"44":0,"45":0,"47":0,"48":0,"49":0,"52":261,"53":52,"54":52,"55":52,"57":209,"59":41,"60":20,"71":1,"72":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"83":0,"87":0,"88":0,"91":0,"100":1,"101":0,"111":1,"112":34,"113":34,"114":27,"116":34,"117":14,"119":34,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"139":0,"140":0,"142":0,"144":0,"154":1,"155":0,"156":0,"157":0,"158":0,"160":0,"163":1,"177":0,"178":0,"179":0,"182":0,"186":0,"187":0,"188":0,"191":0,"196":0,"197":0,"199":0,"200":0,"203":0,"204":0,"207":0,"208":0,"211":0,"212":0,"215":0,"216":0,"219":0,"220":0,"223":0,"224":0,"225":0,"227":0,"231":0,"232":0,"236":0,"237":0,"240":0,"241":0,"245":0,"246":0,"249":0,"250":0,"253":0,"254":0,"257":0,"258":0,"261":0,"262":0,"266":0,"267":0,"268":0,"269":0,"270":0,"273":0,"277":0,"278":0,"281":0,"282":0,"285":0,"286":0,"287":0,"291":0,"292":0,"295":0,"296":0,"299":0,"300":0,"303":0,"308":0,"310":0,"316":0,"317":0,"320":0,"321":0,"331":0,"332":0,"333":0,"335":0,"336":0,"339":0,"340":0,"343":0,"351":0,"356":0,"357":0,"359":0,"360":0,"363":0,"364":0,"365":0,"367":0,"368":0,"369":0,"370":0,"373":0,"375":0,"378":0,"379":0,"380":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"391":0,"392":0,"395":0,"396":0,"399":0,"400":0,"401":0,"404":0,"406":0,"407":0,"410":0,"414":0,"419":0,"424":0,"430":0,"431":0,"432":0,"433":0,"435":0,"437":0,"440":0,"445":0,"450":0,"452":0,"453":0,"456":0,"458":0,"459":0,"462":0,"464":0,"465":0,"468":0,"470":0,"471":0,"474":0,"476":0,"477":0,"480":0,"484":0,"485":0,"486":0,"488":0,"489":0,"491":0,"493":0,"494":0,"495":0,"497":0,"498":0,"499":0,"502":0,"503":0,"504":0,"505":0,"506":0,"510":0,"516":0,"517":0,"520":0,"522":0,"523":0,"526":0,"527":0,"530":0,"531":0,"534":0,"538":0,"543":1,"544":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/auth.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/auth.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[1,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":101}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":41},"end":{"line":37,"column":103}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":46},"end":{"line":57,"column":90}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}},"2":{"start":{"line":28,"column":0},"end":{"line":81,"column":2}},"3":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"4":{"start":{"line":31,"column":12},"end":{"line":31,"column":127}},"5":{"start":{"line":32,"column":15},"end":{"line":34,"column":9}},"6":{"start":{"line":33,"column":12},"end":{"line":33,"column":114}},"7":{"start":{"line":38,"column":8},"end":{"line":38,"column":50}},"8":{"start":{"line":40,"column":8},"end":{"line":44,"column":64}},"9":{"start":{"line":46,"column":8},"end":{"line":46,"column":44}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":87}},"11":{"start":{"line":50,"column":8},"end":{"line":50,"column":35}},"12":{"start":{"line":52,"column":8},"end":{"line":52,"column":33}},"13":{"start":{"line":54,"column":8},"end":{"line":54,"column":84}},"14":{"start":{"line":58,"column":8},"end":{"line":78,"column":9}},"15":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"16":{"start":{"line":62,"column":16},"end":{"line":62,"column":70}},"17":{"start":{"line":64,"column":12},"end":{"line":77,"column":13}},"18":{"start":{"line":65,"column":16},"end":{"line":65,"column":50}},"19":{"start":{"line":67,"column":4},"end":{"line":67,"column":50}},"20":{"start":{"line":68,"column":16},"end":{"line":68,"column":162}},"21":{"start":{"line":70,"column":16},"end":{"line":76,"column":17}},"22":{"start":{"line":71,"column":20},"end":{"line":75,"column":21}},"23":{"start":{"line":72,"column":24},"end":{"line":74,"column":25}},"24":{"start":{"line":73,"column":28},"end":{"line":73,"column":64}},"25":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"26":{"start":{"line":83,"column":0},"end":{"line":85,"column":1}},"27":{"start":{"line":84,"column":4},"end":{"line":84,"column":33}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":15},"end":{"line":32,"column":15}},{"start":{"line":32,"column":15},"end":{"line":32,"column":15}}]},"3":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":20},"end":{"line":40,"column":24}},{"start":{"line":40,"column":28},"end":{"line":40,"column":30}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":20},"end":{"line":41,"column":32}},{"start":{"line":41,"column":36},"end":{"line":41,"column":38}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":20},"end":{"line":42,"column":30}},{"start":{"line":42,"column":34},"end":{"line":42,"column":36}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":20},"end":{"line":43,"column":40}},{"start":{"line":43,"column":44},"end":{"line":43,"column":46}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":20},"end":{"line":44,"column":35}},{"start":{"line":44,"column":39},"end":{"line":44,"column":41}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"9":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":26}},{"start":{"line":58,"column":30},"end":{"line":58,"column":68}}]},"10":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]},"11":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":16},"end":{"line":61,"column":21}},{"start":{"line":61,"column":25},"end":{"line":61,"column":36}}]},"12":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":12}},{"start":{"line":64,"column":12},"end":{"line":64,"column":12}}]},"13":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":24}},{"start":{"line":67,"column":28},"end":{"line":67,"column":43}},{"start":{"line":67,"column":47},"end":{"line":67,"column":49}}]},"14":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":20},"end":{"line":71,"column":20}},{"start":{"line":71,"column":20},"end":{"line":71,"column":20}}]},"15":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":24},"end":{"line":72,"column":24}},{"start":{"line":72,"column":24},"end":{"line":72,"column":24}}]},"16":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":0},"end":{"line":83,"column":0}},{"start":{"line":83,"column":0},"end":{"line":83,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var crypto = require(\"crypto\");","","var AuthHandler = {","    getAuthorizationHeader: function (documentClient, verb, path, resourceId, resourceType, headers) {","        if (documentClient.masterKey) {","            return this.getAuthorizationTokenUsingMasterKey(verb, resourceId, resourceType, headers, documentClient.masterKey);","        } else if (documentClient.resourceTokens) {","            return this.getAuthorizationTokenUsingResourceTokens(documentClient.resourceTokens, path, resourceId);","        }","    },","","    getAuthorizationTokenUsingMasterKey: function (verb, resourceId, resourceType, headers, masterKey) {","        var key = new Buffer(masterKey, \"base64\");","","        var text = (verb || \"\").toLowerCase() + \"\\n\" +","                   (resourceType || \"\").toLowerCase() + \"\\n\" +","                   (resourceId || \"\") + \"\\n\" +","                   (headers[\"x-ms-date\"] || \"\").toLowerCase() + \"\\n\" +","                   (headers[\"date\"] || \"\").toLowerCase() + \"\\n\";","","        var body = new Buffer(text, \"utf8\");","","        var signature = crypto.createHmac(\"sha256\", key).update(body).digest(\"base64\");","","        var MasterToken = \"master\";","","        var TokenVersion = \"1.0\";","","        return \"type=\" + MasterToken + \"&ver=\" + TokenVersion + \"&sig=\" + signature;","    },","","    getAuthorizationTokenUsingResourceTokens: function (resourceTokens, path, resourceId) {","        if (resourceTokens && Object.keys(resourceTokens).length > 0) {","            // For database account access(through getDatabaseAccount API), path and resourceId are \"\", ","            // so in this case we return the first token to be used for creating the auth header as the service will accept any token in this case","            if (!path && !resourceId) {","                return resourceTokens[Object.keys(resourceTokens)[0]];","            }","            if (resourceTokens[resourceId]) {","                return resourceTokens[resourceId];","            } else {","\t\t\t\tvar pathParts = path && path.split(\"/\") || [];","                var resourceTypes = [\"dbs\", \"colls\", \"docs\", \"sprocs\", \"udfs\", \"triggers\", \"users\", \"permissions\", \"attachments\", \"media\", \"conflicts\", \"offers\"];","                // Get the last resource id from the path and get it's token from resourceTokens","                for (var i = pathParts.length - 1; i >= 0; i--) {","                    if (resourceTypes.indexOf(pathParts[i]) === -1) {","                        if (resourceTokens[pathParts[i]]) {","                            return resourceTokens[pathParts[i]];","                        }","                    }","                }","            }","        }","        return null;","    }","};","","if (typeof exports !== \"undefined\") {","    module.exports = AuthHandler;","}"],"l":{"26":1,"28":1,"30":0,"31":0,"32":0,"33":0,"38":0,"40":0,"46":0,"48":0,"50":0,"52":0,"54":0,"58":0,"61":0,"62":0,"64":0,"65":0,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"79":0,"83":1,"84":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/constants.js","s":{"1":1,"2":1,"3":1},"b":{"1":[1,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":27,"column":0},"end":{"line":198,"column":2}},"2":{"start":{"line":202,"column":0},"end":{"line":204,"column":1}},"3":{"start":{"line":203,"column":4},"end":{"line":203,"column":31}}},"branchMap":{"1":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":0},"end":{"line":202,"column":0}},{"start":{"line":202,"column":0},"end":{"line":202,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","","//SCRIPT START","","var Constants = {","    MediaTypes: {","        Any: \"*/*\",","        ImageJpeg: \"image/jpeg\",","        ImagePng: \"image/png\",","        Javascript: \"application/x-javascript\",","        Json: \"application/json\",","        OctetStream: \"application/octet-stream\",","        QueryJson: \"application/query+json\",","        SQL: \"application/sql\",","        TextHtml: \"text/html\",","        TextPlain: \"text/plain\",","        Xml: \"application/xml\"","    },","    ","    HttpMethods: {","        Get: \"GET\",","        Post: \"POST\",","        Put: \"PUT\",","        Delete: \"DELETE\",","        Head: \"HEAD\",","        Options: \"OPTIONS\"","    },","    ","    HttpHeaders: {","        Authorization: \"authorization\",","        ETag: \"etag\",","        MethodOverride: \"X-HTTP-Method\",","        Slug: \"Slug\",","        ContentType: \"Content-Type\",","        LastModified: \"Last-Modified\",","        ContentEncoding: \"Content-Encoding\",","        CharacterSet: \"CharacterSet\",","        UserAgent: \"User-Agent\",","        IfModifiedSince: \"If-Modified-Since\",","        IfMatch: \"If-Match\",","        IfNoneMatch: \"If-None-Match\",","        ContentLength: \"Content-Length\",","        AcceptEncoding: \"Accept-Encoding\",","        KeepAlive: \"Keep-Alive\",","        CacheControl: \"Cache-Control\",","        TransferEncoding: \"Transfer-Encoding\",","        ContentLanguage: \"Content-Language\",","        ContentLocation: \"Content-Location\",","        ContentMd5: \"Content-Md5\",","        ContentRange: \"Content-Range\",","        Accept: \"Accept\",","        AcceptCharset: \"Accept-Charset\",","        AcceptLanguage: \"Accept-Language\",","        IfRange: \"If-Range\",","        IfUnmodifiedSince: \"If-Unmodified-Since\",","        MaxForwards: \"Max-Forwards\",","        ProxyAuthorization: \"Proxy-Authorization\",","        AcceptRanges: \"Accept-Ranges\",","        ProxyAuthenticate: \"Proxy-Authenticate\",","        RetryAfter: \"Retry-After\",","        SetCookie: \"Set-Cookie\",","        WwwAuthenticate: \"Www-Authenticate\",","        Origin: \"Origin\",","        Host: \"Host\",","        AccessControlAllowOrigin: \"Access-Control-Allow-Origin\",","        AccessControlAllowHeaders: \"Access-Control-Allow-Headers\",","        KeyValueEncodingFormat: \"application/x-www-form-urlencoded\",","        WrapAssertionFormat: \"wrap_assertion_format\",","        WrapAssertion: \"wrap_assertion\",","        WrapScope: \"wrap_scope\",","        SimpleToken: \"SWT\",","        HttpDate: \"date\",","        Prefer: \"Prefer\",","        Location: \"Location\",","        Referer: \"referer\",","        ","        // Query","        Query: \"x-ms-documentdb-query\",","        IsQuery: \"x-ms-documentdb-isquery\",","        ","        // Our custom DocumentDB headers","        Continuation: \"x-ms-continuation\",","        PageSize: \"x-ms-max-item-count\",","        ","        // Request sender generated. Simply echoed by backend.","        ActivityId: \"x-ms-activity-id\",","        PreTriggerInclude: \"x-ms-documentdb-pre-trigger-include\",","        PreTriggerExclude: \"x-ms-documentdb-pre-trigger-exclude\",","        PostTriggerInclude: \"x-ms-documentdb-post-trigger-include\",","        PostTriggerExclude: \"x-ms-documentdb-post-trigger-exclude\",","        IndexingDirective: \"x-ms-indexing-directive\",","        SessionToken: \"x-ms-session-token\",","        ConsistencyLevel: \"x-ms-consistency-level\",","        XDate: \"x-ms-date\",","        CollectionPartitionInfo: \"x-ms-collection-partition-info\",","        CollectionServiceInfo: \"x-ms-collection-service-info\",","        RetryAfterInMilliseconds: \"x-ms-retry-after-ms\",","        IsFeedUnfiltered: \"x-ms-is-feed-unfiltered\",","        ResourceTokenExpiry: \"x-ms-documentdb-expiry-seconds\",","        EnableScanInQuery: \"x-ms-documentdb-query-enable-scan\",","        EmitVerboseTracesInQuery: \"x-ms-documentdb-query-emit-traces\",","        EnableCrossPartitionQuery: \"x-ms-documentdb-query-enablecrosspartition\",","        ParallelizeCrossPartitionQuery: \"x-ms-documentdb-query-parallelizecrosspartitionquery\",","","        // Version headers and values","        Version: \"x-ms-version\",","        ","        // Partition Key","        PartitionKey: \"x-ms-documentdb-partitionkey\",","        PartitionKeyRangeID: 'x-ms-documentdb-partitionkeyrangeid',","","        //Quota Info","        MaxEntityCount: \"x-ms-root-entity-max-count\",","        CurrentEntityCount: \"x-ms-root-entity-current-count\",","        CollectionQuotaInMb: \"x-ms-collection-quota-mb\",","        CollectionCurrentUsageInMb: \"x-ms-collection-usage-mb\",","        MaxMediaStorageUsageInMB: \"x-ms-max-media-storage-usage-mb\",","        CurrentMediaStorageUsageInMB: \"x-ms-media-storage-usage-mb\",","        RequestCharge: \"x-ms-request-charge\",","        PopulateQuotaInfo: \"x-ms-documentdb-populatequotainfo\",","        MaxResourceQuota: \"x-ms-resource-quota\",","        ","        // Offer header","        OfferType: \"x-ms-offer-type\",","        OfferThroughput: \"x-ms-offer-throughput\",","        ","        // Index progress headers","        IndexTransformationProgress: \"x-ms-documentdb-collection-index-transformation-progress\",","        LazyIndexingProgress: \"x-ms-documentdb-collection-lazy-indexing-progress\",","        ","        // Upsert header","        IsUpsert: \"x-ms-documentdb-is-upsert\",","","        // Sub status of the error","        SubStatus: \"x-ms-substatus\",","","        // StoredProcedure related headers","        EnableScriptLogging: \"x-ms-documentdb-script-enable-logging\",","        ScriptLogResults: \"x-ms-documentdb-script-log-results\"","    },","    ","    // GlobalDB related constants","    WritableLocations: 'writableLocations',","    ReadableLocations: 'readableLocations',","    Name: 'name',","    DatabaseAccountEndpoint: 'databaseAccountEndpoint',","    ","    // Client generated retry count response header","    ThrottleRetryCount: \"x-ms-throttle-retry-count\",","    ThrottleRetryWaitTimeInMs: \"x-ms-throttle-retry-wait-time-ms\",","    ","    CurrentVersion: \"2017-01-19\",","    ","    SDKName: \"documentdb-nodejs-sdk\",","    SDKVersion: \"1.11.0\",","","    DefaultPrecisions: {","        DefaultNumberHashPrecision: 3,","        DefaultNumberRangePrecision: -1,","        DefaultStringHashPrecision: 3,","        DefaultStringRangePrecision: -1","    },","    ","    ConsistentHashRing: {","        DefaultVirtualNodesPerCollection: 128","    },","    ","    RegularExpressions: {","        TrimLeftSlashes: new RegExp(\"^[/]+\"),","        TrimRightSlashes: new RegExp(\"[/]+$\")","    },","","    Quota: {","        CollectionSize: \"collectionSize\"","    }","};","","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = Constants;","}",""],"l":{"27":1,"202":1,"203":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/platform.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/platform.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[1,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":18},"end":{"line":33,"column":30}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":34},"end":{"line":50,"column":47}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":23}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"4":{"start":{"line":30,"column":0},"end":{"line":62,"column":1}},"5":{"start":{"line":39,"column":8},"end":{"line":39,"column":74}},"6":{"start":{"line":40,"column":8},"end":{"line":40,"column":76}},"7":{"start":{"line":41,"column":8},"end":{"line":41,"column":83}},"8":{"start":{"line":43,"column":8},"end":{"line":45,"column":53}},"9":{"start":{"line":47,"column":8},"end":{"line":47,"column":25}},"10":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"11":{"start":{"line":53,"column":12},"end":{"line":53,"column":26}},"12":{"start":{"line":56,"column":8},"end":{"line":56,"column":34}},"13":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"14":{"start":{"line":58,"column":12},"end":{"line":58,"column":26}},"15":{"start":{"line":60,"column":8},"end":{"line":60,"column":16}},"16":{"start":{"line":64,"column":0},"end":{"line":66,"column":1}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":30}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":0},"end":{"line":64,"column":0}},{"start":{"line":64,"column":0},"end":{"line":64,"column":0}}]}},"code":["﻿/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Constants = require(\"./constants\");","var os = require(\"os\");","var util = require(\"util\");","","var Platform = {","","    /** @ignore */","    getUserAgent: function () {","        // gets the user agent in the following format","        // \"{OSName}/{OSVersion} Nodejs/{NodejsVersion} documentdb-nodejs-sdk/{SDKVersion}\"","        // for example:","        // \"linux/3.4.0+ Nodejs/v0.10.25 documentdb-nodejs-sdk/1.10.0\"","        // \"win32/10.0.14393 Nodejs/v4.4.7 documentdb-nodejs-sdk/1.10.0\"","        var osName = Platform._getSafeUserAgentSegmentInfo(os.platform());","        var osVersion = Platform._getSafeUserAgentSegmentInfo(os.release());","        var nodejsVersion = Platform._getSafeUserAgentSegmentInfo(process.version);","","        var userAgent = util.format(\"%s/%s Nodejs/%s %s/%s\", osName, osVersion,","            nodejsVersion,","            Constants.SDKName, Constants.SDKVersion);","","        return userAgent;","    },","    /** @ignore */","    _getSafeUserAgentSegmentInfo: function (s) {","        // catch null, undefined, etc","        if (typeof (s) !== 'string') {","            s = \"unknown\";","        }","        // remove all white spaces","        s = s.replace(/\\s+/g, '');","        if (!s) {","            s = \"unknown\";","        }","        return s","    }","}","","if (typeof exports !== \"undefined\") {","    module.exports = Platform;","}"],"l":{"26":1,"27":1,"28":1,"30":1,"39":0,"40":0,"41":0,"43":0,"47":0,"52":0,"53":0,"56":0,"57":0,"58":0,"60":0,"64":1,"65":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/documents.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/documents.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1},"b":{"1":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":48,"loc":{"start":{"line":48,"column":42},"end":{"line":48,"column":54}}},"2":{"name":"(anonymous_2)","line":109,"loc":{"start":{"line":109,"column":21},"end":{"line":109,"column":33}}},"3":{"name":"(anonymous_3)","line":116,"loc":{"start":{"line":116,"column":21},"end":{"line":116,"column":33}}},"4":{"name":"(anonymous_4)","line":281,"loc":{"start":{"line":281,"column":43},"end":{"line":281,"column":54}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":27,"column":45}},"2":{"start":{"line":30,"column":0},"end":{"line":307,"column":2}},"3":{"start":{"line":49,"column":12},"end":{"line":49,"column":41}},"4":{"start":{"line":50,"column":12},"end":{"line":50,"column":41}},"5":{"start":{"line":52,"column":12},"end":{"line":57,"column":15}},"6":{"start":{"line":59,"column":12},"end":{"line":64,"column":15}},"7":{"start":{"line":66,"column":12},"end":{"line":71,"column":15}},"8":{"start":{"line":73,"column":12},"end":{"line":78,"column":15}},"9":{"start":{"line":80,"column":12},"end":{"line":85,"column":15}},"10":{"start":{"line":87,"column":12},"end":{"line":92,"column":15}},"11":{"start":{"line":94,"column":12},"end":{"line":99,"column":15}},"12":{"start":{"line":101,"column":12},"end":{"line":106,"column":15}},"13":{"start":{"line":108,"column":12},"end":{"line":113,"column":15}},"14":{"start":{"line":110,"column":20},"end":{"line":110,"column":51}},"15":{"start":{"line":115,"column":12},"end":{"line":120,"column":15}},"16":{"start":{"line":117,"column":20},"end":{"line":117,"column":51}},"17":{"start":{"line":282,"column":12},"end":{"line":287,"column":15}},"18":{"start":{"line":290,"column":12},"end":{"line":295,"column":15}},"19":{"start":{"line":297,"column":12},"end":{"line":297,"column":72}},"20":{"start":{"line":298,"column":12},"end":{"line":298,"column":71}},"21":{"start":{"line":299,"column":12},"end":{"line":299,"column":72}},"22":{"start":{"line":300,"column":12},"end":{"line":300,"column":62}},"23":{"start":{"line":301,"column":12},"end":{"line":301,"column":48}},"24":{"start":{"line":302,"column":12},"end":{"line":302,"column":41}},"25":{"start":{"line":303,"column":12},"end":{"line":303,"column":51}},"26":{"start":{"line":304,"column":12},"end":{"line":304,"column":48}},"27":{"start":{"line":310,"column":0},"end":{"line":312,"column":1}},"28":{"start":{"line":311,"column":4},"end":{"line":311,"column":36}}},"branchMap":{"1":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":0},"end":{"line":310,"column":0}},{"start":{"line":310,"column":0},"end":{"line":310,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\"),","    RetryOptions = require(\"./retryOptions\");","//SCRIPT START","","var AzureDocuments = Base.defineClass(null, null,","    {","       /**","         * Represents a DatabaseAccount in the Azure DocumentDB database service. A DatabaseAccount is the container for databases.","         * @global","         * @property {string} DatabasesLink                                     -  The self-link for Databases in the databaseAccount.","         * @property {string} MediaLink                                         -  The self-link for Media in the databaseAccount.","         * @property {number} MaxMediaStorageUsageInMB                          -  Attachment content (media) storage quota in MBs ( Retrieved from gateway ).","         * @property {number} CurrentMediaStorageUsageInMB                      -  <p> Current attachment content (media) usage in MBs (Retrieved from gateway )<br>","                                                                                    Value is returned from cached information updated periodically and is not guaranteed to be real time. </p>","         * @property {object} ConsistencyPolicy                                 -  Gets the UserConsistencyPolicy settings.","         * @property {string} ConsistencyPolicy.defaultConsistencyLevel         -  The default consistency level and it's of type {@link ConsistencyLevel}.","         * @property {number} ConsistencyPolicy.maxStalenessPrefix              -  In bounded staleness consistency, the maximum allowed staleness in terms difference in sequence numbers (aka version).","         * @property {number} ConsistencyPolicy.maxStalenessIntervalInSeconds   -  In bounded staleness consistency, the maximum allowed staleness in terms time interval.","         ","         * @property {Array}  WritableLocations                                 -  The list of writable locations for a geo-replicated database account.","         * @property {Array}  ReadableLocations                                 -  The list of readable locations for a geo-replicated database account.","         */","        DatabaseAccount: Base.defineClass(function () {","            this._writableLocations = [];","            this._readableLocations = [];","","            Object.defineProperty(this, \"DatabasesLink\", {","                value: \"\",","                writable: true,","                configurable: true,","                enumerable: true","            });","","            Object.defineProperty(this, \"MediaLink\", {","                value: \"\",","                writable: true,","                configurable: true,","                enumerable: true","            });","","            Object.defineProperty(this, \"MaxMediaStorageUsageInMB\", {","                value: 0,","                writable: true,","                configurable: true,","                enumerable: true","            });","","            Object.defineProperty(this, \"CurrentMediaStorageUsageInMB\", {","                value: 0,","                writable: true,","                configurable: true,","                enumerable: true","            });","","            Object.defineProperty(this, \"ConsumedDocumentStorageInMB\", {","                value: 0,","                writable: true,","                configurable: true,","                enumerable: true","            });","","            Object.defineProperty(this, \"ReservedDocumentStorageInMB\", {","                value: 0,","                writable: true,","                configurable: true,","                enumerable: true","            });","","            Object.defineProperty(this, \"ProvisionedDocumentStorageInMB\", {","                value: 0,","                writable: true,","                configurable: true,","                enumerable: true","            });","","            Object.defineProperty(this, \"ConsistencyPolicy\", {","                value: \"\",","                writable: true,","                configurable: true,","                enumerable: true","            });","        ","            Object.defineProperty(this, \"WritableLocations\", {","                get: function () {","                    return this._writableLocations;","                },","                enumerable: true","            });","","            Object.defineProperty(this, \"ReadableLocations\", {","                get: function () {","                    return this._readableLocations;","                },","                enumerable: true","            });","        }),","","        /**","         * <p>Represents the consistency levels supported for DocumentDB client operations.<br>","         * The requested ConsistencyLevel must match or be weaker than that provisioned for the database account. Consistency levels.<br>","         * Consistency levels by order of strength are Strong, BoundedStaleness, Session and Eventual.</p>","         * @readonly","         * @enum {string}","         * @property Strong           Strong Consistency guarantees that read operations always return the value that was last written.","         * @property BoundedStaleness Bounded Staleness guarantees that reads are not too out-of-date. This can be configured based on number of operations (MaxStalenessPrefix) or time (MaxStalenessIntervalInSeconds).","         * @property Session          Session Consistency guarantees monotonic reads (you never read old data, then new, then old again), monotonic writes (writes are ordered)","                                      and read your writes (your writes are immediately visible to your reads) within any single session.","         * @property Eventual         Eventual Consistency guarantees that reads will return a subset of writes. All writes","                                      will be eventually be available for reads.","         */","        ConsistencyLevel: Object.freeze({","            Strong: \"Strong\",","            BoundedStaleness: \"BoundedStaleness\",","            Session: \"Session\",","            Eventual: \"Eventual\"","        }),","","","        /**","         * Specifies the supported indexing modes.","         * @readonly","         * @enum {string}","         * @property Consistent     <p>Index is updated synchronously with a create or update operation. <br>","                                    With consistent indexing, query behavior is the same as the default consistency level for the collection. The index is","                                    always kept up to date with the data. </p>","         * @property Lazy           <p>Index is updated asynchronously with respect to a create or update operation. <br>","                                    With lazy indexing, queries are eventually consistent. The index is updated when the collection is idle.</p>","         */","        IndexingMode: Object.freeze({","            Consistent: \"consistent\",","            Lazy: \"lazy\",","            None: \"none\"","        }),","","        /**","         * Specifies the supported Index types.","         * @readonly","         * @enum {string}","         * @property Hash     This is supplied for a path which has no sorting requirement.","         *                    This kind of an index has better precision than corresponding range index.","         * @property Range    This is supplied for a path which requires sorting.","         * @property Spatial  This is supplied for a path which requires geospatial indexing.","         */","","        IndexKind: Object.freeze({","            Hash: \"Hash\",","            Range: \"Range\",","            Spatial: \"Spatial\"","        }),","","        DataType: Object.freeze({","            Number: \"Number\",","            String: \"String\",","            Point: \"Point\",","            LineString: \"LineString\",","            Polygon: \"Polygon\"","        }),","","        PartitionKind: Object.freeze({","            Hash: \"Hash\"","        }),","","        ConnectionMode: Object.freeze({","            Gateway: 0","        }),","","        QueryCompatibilityMode: Object.freeze({","            Default: 0,","            Query: 1,","            SqlQuery: 2","        }),","","        /**","         * Enum for media read mode values.","         * @readonly","         * @enum {sting}","         * @property Buffered Content is buffered at the client and not directly streamed from the content store.","                              <p>Use Buffered to reduce the time taken to read and write media files.</p>","         * @property Streamed Content is directly streamed from the content store without any buffering at the client.","                              <p>Use Streamed to reduce the client memory overhead of reading and writing media files. </p>","         */","        MediaReadMode: Object.freeze({","            Buffered: \"Buffered\",","            Streamed: \"Streamed\"","        }),","","        /**","         * Enum for permission mode values.","         * @readonly","         * @enum {string}","         * @property None Permission not valid.","         * @property Read Permission applicable for read operations only.","         * @property All Permission applicable for all operations.","         */","        PermissionMode: Object.freeze({","            None: \"none\",","            Read: \"read\",","            All: \"all\"","        }),","","        /**","         * Enum for trigger type values.","         * Specifies the type of the trigger.","         * @readonly","         * @enum {string}","         * @property Pre  Trigger should be executed before the associated operation(s).","         * @property Post Trigger should be executed after the associated operation(s).","         */","        TriggerType: Object.freeze({","            Pre: \"pre\",","            Post: \"post\"","        }),","","        /**","         * Enum for trigger operation values.","         * specifies the operations on which a trigger should be executed.","         * @readonly","         * @enum {string}","         * @property All All operations.","         * @property Create Create operations only.","         * @property Update Update operations only.","         * @property Delete Delete operations only.","         * @property Replace Replace operations only.","         */","        TriggerOperation: Object.freeze({","            All: \"all\",","            Create: \"create\",","            Update: \"update\",","            Delete: \"delete\",","            Replace: \"replace\"","        }),","","        /**","         * Enum for udf type values.","         * Specifies the types of user defined functions.","         * @readonly","         * @enum {string}","         * @property Javascript Javascript type.","         */","        UserDefinedFunctionType: Object.freeze({","            Javascript: \"Javascript\"","        }),","","        /**","         * @global","         * Represents the Connection policy associated with a DocumentClient in the Azure DocumentDB database service.","         * @property {string} MediaReadMode                - Attachment content (aka media) download mode. Should be one of the values of {@link MediaReadMode}","         * @property {number} MediaRequestTimeout          - Time to wait for response from network peer for attachment content (aka media) operations. Represented in milliseconds.","         * @property {number} RequestTimeout               - Request timeout (time to wait for response from network peer). Represented in milliseconds.","         * @property {bool} EnableEndpointDiscovery        - Flag to enable/disable automatic redirecting of requests based on read/write operations.","         * @property {Array} PreferredLocations            - List of azure regions to be used as preferred locations for read requests.","         * @property {RetryOptions} RetryOptions           - RetryOptions instance which defines several configurable properties used during retry.","         * @property {bool} DisableSSLVerification         - Flag to disable SSL verification for the requests. SSL verification is enabled by default. Don't set this when targeting production endpoints.","         *                                                   This is intended to be used only when targeting emulator endpoint to avoid failing your requests with SSL related error.","        */","        ConnectionPolicy: Base.defineClass(function() {","            Object.defineProperty(this, \"_defaultRequestTimeout\", {","                value: 60000,","                writable: true,","                configurable: true,","                enumerable: false // this is the default value, so it could be excluded during JSON.stringify","            });","","            // defaultMediaRequestTimeout is based upon the blob client timeout and the retry policy.","            Object.defineProperty(this, \"_defaultMediaRequestTimeout\", {","                value: 300000,","                writable: true,","                configurable: true,","                enumerable: false // this is the default value, so it could be excluded during JSON.stringify","            });","","            this.ConnectionMode = AzureDocuments.ConnectionMode.Gateway;","            this.MediaReadMode = AzureDocuments.MediaReadMode.Buffered;","            this.MediaRequestTimeout = this._defaultMediaRequestTimeout;","            this.RequestTimeout = this._defaultRequestTimeout;","            this.EnableEndpointDiscovery = true;","            this.PreferredLocations = [];","            this.RetryOptions = new RetryOptions();","            this.DisableSSLVerification = false;","        })","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = AzureDocuments;","}"],"l":{"26":1,"30":1,"49":0,"50":0,"52":0,"59":0,"66":0,"73":0,"80":0,"87":0,"94":0,"101":0,"108":0,"110":0,"115":0,"117":0,"282":0,"290":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"310":1,"311":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/retryOptions.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/retryOptions.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"RetryOptions","line":36,"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":108}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":25},"end":{"line":42,"column":37}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":33}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":21},"end":{"line":56,"column":33}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}},"2":{"start":{"line":35,"column":4},"end":{"line":61,"column":10}},"3":{"start":{"line":37,"column":12},"end":{"line":37,"column":67}},"4":{"start":{"line":38,"column":12},"end":{"line":38,"column":86}},"5":{"start":{"line":39,"column":12},"end":{"line":39,"column":68}},"6":{"start":{"line":41,"column":12},"end":{"line":46,"column":15}},"7":{"start":{"line":43,"column":24},"end":{"line":43,"column":58}},"8":{"start":{"line":48,"column":12},"end":{"line":53,"column":15}},"9":{"start":{"line":50,"column":20},"end":{"line":50,"column":66}},"10":{"start":{"line":55,"column":12},"end":{"line":60,"column":15}},"11":{"start":{"line":57,"column":20},"end":{"line":57,"column":54}},"12":{"start":{"line":64,"column":0},"end":{"line":66,"column":1}},"13":{"start":{"line":65,"column":4},"end":{"line":65,"column":34}}},"branchMap":{"1":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":41},"end":{"line":37,"column":61}},{"start":{"line":37,"column":65},"end":{"line":37,"column":66}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":41},"end":{"line":39,"column":61}},{"start":{"line":39,"column":65},"end":{"line":39,"column":67}}]},"3":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":0},"end":{"line":64,"column":0}},{"start":{"line":64,"column":0},"end":{"line":64,"column":0}}]}},"code":["﻿/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\");","","//SCRIPT START","    /**","    * Represents the Retry policy assocated with throttled requests in the Azure DocumentDB database service.","    * @property {int} [MaxRetryAttemptCount]               - Max number of retries to be performed for a request. Default value 9.","    * @property {int} [FixedRetryIntervalInMilliseconds]   - Fixed retry interval in milliseconds to wait between each retry ignoring the retryAfter returned as part of the response.","    * @property {int} [MaxWaitTimeInSeconds]               - Max wait time in seconds to wait for a request while the retries are happening. Default value 30 seconds.","    */","    var RetryOptions = Base.defineClass(","        function RetryOptions(maxRetryAttemptCount, fixedRetryIntervalInMilliseconds, maxWaitTimeInSeconds) {","            this._maxRetryAttemptCount = maxRetryAttemptCount || 9;","            this._fixedRetryIntervalInMilliseconds = fixedRetryIntervalInMilliseconds;","            this._maxWaitTimeInSeconds = maxWaitTimeInSeconds || 30;","","            Object.defineProperty(this, \"MaxRetryAttemptCount\", {","                    get: function () {","                        return this._maxRetryAttemptCount;","                    },","                    enumerable: true","            });","","            Object.defineProperty(this, \"FixedRetryIntervalInMilliseconds\", {","                get: function () {","                    return this._fixedRetryIntervalInMilliseconds;","                },","                enumerable: true","            });","","            Object.defineProperty(this, \"MaxWaitTimeInSeconds\", {","                get: function () {","                    return this._maxWaitTimeInSeconds;","                },","                enumerable: true","            });","        })","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = RetryOptions;","}"],"l":{"26":1,"35":1,"37":0,"38":0,"39":0,"41":0,"43":0,"48":0,"50":0,"55":0,"57":0,"64":1,"65":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryIterator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":42,"column":76}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":17},"end":{"line":61,"column":36}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":18},"end":{"line":72,"column":38}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":17},"end":{"line":82,"column":36}}},"5":{"name":"(anonymous_5)","line":94,"loc":{"start":{"line":94,"column":24},"end":{"line":94,"column":36}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":17},"end":{"line":104,"column":37}}},"7":{"name":"(anonymous_7)","line":116,"loc":{"start":{"line":116,"column":21},"end":{"line":116,"column":40}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":49},"end":{"line":117,"column":91}}},"9":{"name":"(anonymous_9)","line":131,"loc":{"start":{"line":131,"column":15},"end":{"line":131,"column":26}}},"10":{"name":"(anonymous_10)","line":136,"loc":{"start":{"line":136,"column":32},"end":{"line":136,"column":50}}},"11":{"name":"(anonymous_11)","line":139,"loc":{"start":{"line":139,"column":48},"end":{"line":139,"column":82}}},"12":{"name":"(anonymous_12)","line":159,"loc":{"start":{"line":159,"column":32},"end":{"line":159,"column":52}}},"13":{"name":"(anonymous_13)","line":161,"loc":{"start":{"line":161,"column":48},"end":{"line":161,"column":82}}},"14":{"name":"(anonymous_14)","line":182,"loc":{"start":{"line":182,"column":38},"end":{"line":182,"column":50}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":28,"column":90}},"2":{"start":{"line":31,"column":0},"end":{"line":186,"column":2}},"3":{"start":{"line":44,"column":8},"end":{"line":44,"column":45}},"4":{"start":{"line":45,"column":8},"end":{"line":45,"column":27}},"5":{"start":{"line":46,"column":8},"end":{"line":46,"column":45}},"6":{"start":{"line":47,"column":8},"end":{"line":47,"column":31}},"7":{"start":{"line":48,"column":8},"end":{"line":48,"column":41}},"8":{"start":{"line":49,"column":8},"end":{"line":49,"column":73}},"9":{"start":{"line":62,"column":12},"end":{"line":62,"column":25}},"10":{"start":{"line":63,"column":12},"end":{"line":63,"column":50}},"11":{"start":{"line":73,"column":12},"end":{"line":73,"column":58}},"12":{"start":{"line":83,"column":12},"end":{"line":83,"column":57}},"13":{"start":{"line":95,"column":12},"end":{"line":95,"column":63}},"14":{"start":{"line":105,"column":12},"end":{"line":105,"column":25}},"15":{"start":{"line":106,"column":12},"end":{"line":106,"column":43}},"16":{"start":{"line":107,"column":12},"end":{"line":107,"column":50}},"17":{"start":{"line":117,"column":12},"end":{"line":123,"column":15}},"18":{"start":{"line":118,"column":16},"end":{"line":120,"column":17}},"19":{"start":{"line":119,"column":20},"end":{"line":119,"column":69}},"20":{"start":{"line":122,"column":16},"end":{"line":122,"column":64}},"21":{"start":{"line":132,"column":12},"end":{"line":132,"column":77}},"22":{"start":{"line":137,"column":12},"end":{"line":137,"column":28}},"23":{"start":{"line":139,"column":12},"end":{"line":155,"column":15}},"24":{"start":{"line":141,"column":16},"end":{"line":143,"column":17}},"25":{"start":{"line":142,"column":20},"end":{"line":142,"column":61}},"26":{"start":{"line":145,"column":16},"end":{"line":145,"column":53}},"27":{"start":{"line":147,"column":16},"end":{"line":151,"column":17}},"28":{"start":{"line":150,"column":20},"end":{"line":150,"column":102}},"29":{"start":{"line":153,"column":16},"end":{"line":153,"column":87}},"30":{"start":{"line":154,"column":16},"end":{"line":154,"column":54}},"31":{"start":{"line":160,"column":12},"end":{"line":160,"column":28}},"32":{"start":{"line":161,"column":12},"end":{"line":178,"column":15}},"33":{"start":{"line":162,"column":16},"end":{"line":164,"column":17}},"34":{"start":{"line":163,"column":20},"end":{"line":163,"column":61}},"35":{"start":{"line":166,"column":16},"end":{"line":169,"column":17}},"36":{"start":{"line":168,"column":20},"end":{"line":168,"column":67}},"37":{"start":{"line":171,"column":16},"end":{"line":174,"column":17}},"38":{"start":{"line":173,"column":20},"end":{"line":173,"column":27}},"39":{"start":{"line":177,"column":16},"end":{"line":177,"column":54}},"40":{"start":{"line":183,"column":12},"end":{"line":183,"column":132}},"41":{"start":{"line":189,"column":0},"end":{"line":191,"column":1}},"42":{"start":{"line":190,"column":4},"end":{"line":190,"column":35}}},"branchMap":{"1":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":16},"end":{"line":118,"column":16}},{"start":{"line":118,"column":16},"end":{"line":118,"column":16}}]},"2":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":16}},{"start":{"line":141,"column":16},"end":{"line":141,"column":16}}]},"3":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":16},"end":{"line":147,"column":16}},{"start":{"line":147,"column":16},"end":{"line":147,"column":16}}]},"4":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":16},"end":{"line":162,"column":16}},{"start":{"line":162,"column":16},"end":{"line":162,"column":16}}]},"5":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":166,"column":16}},{"start":{"line":166,"column":16},"end":{"line":166,"column":16}}]},"6":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":16},"end":{"line":171,"column":16}},{"start":{"line":171,"column":16},"end":{"line":171,"column":16}}]},"7":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":0},"end":{"line":189,"column":0}},{"start":{"line":189,"column":0},"end":{"line":189,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\"),","    Constants = require(\"./constants\"),","    QueryExecutionContext = require(\"./queryExecutionContext/proxyQueryExecutionContext\");","","//SCRIPT START","var QueryIterator = Base.defineClass(","    /**","    * Represents a QueryIterator Object, an implmenetation of feed or query response that enables traversal and iterating over the response","    * in the Azure DocumentDB database service.","    * @class QueryIterator","    * @param {object} documentclient                - The documentclient object.","    * @param {SqlQuerySpec | string} query          - A SQL query.","    * @param {FeedOptions} options                  - Represents the feed options.","    * @param {callback | callback[]} fetchFunctions - A function to retrieve each page of data. An array of functions may be used to query more than one partition.","    * @param {string} [resourceLink]                - An optional parameter that represents the resourceLink (will be used in orderby/top/parallel query)","    */","    function (documentclient, query, options, fetchFunctions, resourceLink) {","","        this.documentclient = documentclient;","        this.query = query;","        this.fetchFunctions = fetchFunctions;","        this.options = options;","        this.resourceLink = resourceLink;","        this.queryExecutionContext = this._createQueryExecutionContext();","","    },","    {","        /**","         * Execute a provided function once per feed element.","         * @memberof QueryIterator","         * @instance","         * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","         * Note: the last element the callback will be called on will be undefined.","         * If the callback explicitly returned false, the loop gets stopped.","         */","        forEach: function(callback) {","            this.reset();","            this._forEachImplementation(callback);","        },","","         /**","         * Execute a provided function on the next element in the QueryIterator.","         * @memberof QueryIterator","         * @instance","         * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","         */","        nextItem: function (callback) {","            this.queryExecutionContext.nextItem(callback);","        },","","        /**","         * Retrieve the current element on the QueryIterator.","         * @memberof QueryIterator","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function(callback) {","            this.queryExecutionContext.current(callback);","        },","","        /**","         * @deprecated Instead check if callback(undefined, undefined) is invoked by nextItem(callback) or current(callback)","         *","         * Determine if there are still remaining resources to processs based on the value of the continuation token or the elements remaining on the current batch in the QueryIterator.","         * @memberof QueryIterator","         * @instance","         * @returns {Boolean} true if there is other elements to process in the QueryIterator.","         */","        hasMoreResults: function () {","            return this.queryExecutionContext.hasMoreResults();","        },","","        /**","         * Retrieve all the elements of the feed and pass them as an array to a function","         * @memberof QueryIterator","         * @instance","         * @param {callback} callback - Function execute on the feed response, takes two parameters error, resourcesList","         */","        toArray: function (callback) {","            this.reset();","            this.toArrayTempResources = [];","            this._toArrayImplementation(callback);","        },","","        /**","         * Retrieve the next batch of the feed and pass them as an array to a function","         * @memberof QueryIterator","         * @instance","         * @param {callback} callback - Function execute on the feed response, takes two parameters error, resourcesList","         */","        executeNext: function(callback) {","            this.queryExecutionContext.fetchMore(function(err, resources, responseHeaders) {","                if(err) {","                    return callback(err, undefined, responseHeaders);","                }","","                callback(undefined, resources, responseHeaders);","            });","        },","","        /**","         * Reset the QueryIterator to the beginning and clear all the resources inside it","         * @memberof QueryIterator","         * @instance","         */","        reset: function() {","            this.queryExecutionContext = this._createQueryExecutionContext();","        },","","        /** @ignore */","        _toArrayImplementation: function(callback){","            var that = this;","","            this.queryExecutionContext.nextItem(function (err, resource, headers) {","","                if (err) {","                    return callback(err, undefined, headers);","                }","                // concatinate the results and fetch more","                that.toArrayLastResHeaders = headers;","","                if (resource === undefined) {","                ","                    // no more results","                    return callback(undefined, that.toArrayTempResources, that.toArrayLastResHeaders);","                } ","","                that.toArrayTempResources = that.toArrayTempResources.concat(resource);","                that._toArrayImplementation(callback);","            });","        },","","        /** @ignore */","        _forEachImplementation: function (callback) {","            var that = this;","            this.queryExecutionContext.nextItem(function (err, resource, headers) {","                if (err) {","                    return callback(err, undefined, headers);","                }","","                if (resource === undefined) {","                    // no more results. This is last iteration","                    return callback(undefined, undefined, headers);","                }","","                if (callback(undefined, resource, headers) === false) {","                    // callback instructed to stop further iteration","                    return;","                }","","                // recursively call itself to iterate to the remaining elements","                that._forEachImplementation(callback);","            });","        },","","        /** @ignore */","        _createQueryExecutionContext: function () {","            return new QueryExecutionContext(this.documentclient, this.query, this.options, this.fetchFunctions, this.resourceLink);","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = QueryIterator;","}"],"l":{"26":1,"31":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"62":0,"63":0,"73":0,"83":0,"95":0,"105":0,"106":0,"107":0,"117":0,"118":0,"119":0,"122":0,"132":0,"137":0,"139":0,"141":0,"142":0,"145":0,"147":0,"150":0,"153":0,"154":0,"160":0,"161":0,"162":0,"163":0,"166":0,"168":0,"171":0,"173":0,"177":0,"183":0,"189":1,"190":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/proxyQueryExecutionContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/proxyQueryExecutionContext.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":76}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":18},"end":{"line":62,"column":38}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":48},"end":{"line":64,"column":83}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":42},"end":{"line":81,"column":78}}},"5":{"name":"(anonymous_5)","line":108,"loc":{"start":{"line":108,"column":17},"end":{"line":108,"column":37}}},"6":{"name":"(anonymous_6)","line":110,"loc":{"start":{"line":110,"column":47},"end":{"line":110,"column":82}}},"7":{"name":"(anonymous_7)","line":133,"loc":{"start":{"line":133,"column":24},"end":{"line":133,"column":36}}},"8":{"name":"(anonymous_8)","line":137,"loc":{"start":{"line":137,"column":19},"end":{"line":137,"column":39}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":49},"end":{"line":140,"column":84}}},"10":{"name":"(anonymous_10)","line":156,"loc":{"start":{"line":156,"column":38},"end":{"line":156,"column":55}}},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":37},"end":{"line":160,"column":54}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":32,"column":83}},"2":{"start":{"line":35,"column":0},"end":{"line":165,"column":2}},"3":{"start":{"line":47,"column":8},"end":{"line":47,"column":45}},"4":{"start":{"line":48,"column":8},"end":{"line":48,"column":27}},"5":{"start":{"line":49,"column":8},"end":{"line":49,"column":45}},"6":{"start":{"line":50,"column":8},"end":{"line":50,"column":31}},"7":{"start":{"line":51,"column":8},"end":{"line":51,"column":41}},"8":{"start":{"line":52,"column":8},"end":{"line":52,"column":138}},"9":{"start":{"line":63,"column":12},"end":{"line":63,"column":28}},"10":{"start":{"line":64,"column":12},"end":{"line":78,"column":15}},"11":{"start":{"line":66,"column":16},"end":{"line":77,"column":17}},"12":{"start":{"line":67,"column":20},"end":{"line":74,"column":21}},"13":{"start":{"line":69,"column":24},"end":{"line":69,"column":93}},"14":{"start":{"line":70,"column":24},"end":{"line":70,"column":117}},"15":{"start":{"line":71,"column":24},"end":{"line":71,"column":55}},"16":{"start":{"line":73,"column":24},"end":{"line":73,"column":65}},"17":{"start":{"line":76,"column":20},"end":{"line":76,"column":60}},"18":{"start":{"line":83,"column":12},"end":{"line":83,"column":109}},"19":{"start":{"line":85,"column":12},"end":{"line":86,"column":74}},"20":{"start":{"line":88,"column":12},"end":{"line":88,"column":43}},"21":{"start":{"line":89,"column":12},"end":{"line":93,"column":13}},"22":{"start":{"line":90,"column":16},"end":{"line":90,"column":54}},"23":{"start":{"line":92,"column":16},"end":{"line":92,"column":51}},"24":{"start":{"line":95,"column":12},"end":{"line":97,"column":56}},"25":{"start":{"line":98,"column":12},"end":{"line":99,"column":73}},"26":{"start":{"line":109,"column":12},"end":{"line":109,"column":28}},"27":{"start":{"line":110,"column":12},"end":{"line":124,"column":15}},"28":{"start":{"line":112,"column":16},"end":{"line":123,"column":17}},"29":{"start":{"line":113,"column":20},"end":{"line":120,"column":21}},"30":{"start":{"line":115,"column":24},"end":{"line":115,"column":93}},"31":{"start":{"line":116,"column":24},"end":{"line":116,"column":117}},"32":{"start":{"line":117,"column":24},"end":{"line":117,"column":54}},"33":{"start":{"line":119,"column":24},"end":{"line":119,"column":65}},"34":{"start":{"line":122,"column":20},"end":{"line":122,"column":60}},"35":{"start":{"line":134,"column":12},"end":{"line":134,"column":63}},"36":{"start":{"line":138,"column":12},"end":{"line":138,"column":28}},"37":{"start":{"line":140,"column":12},"end":{"line":153,"column":15}},"38":{"start":{"line":141,"column":16},"end":{"line":152,"column":17}},"39":{"start":{"line":142,"column":20},"end":{"line":149,"column":21}},"40":{"start":{"line":144,"column":24},"end":{"line":144,"column":93}},"41":{"start":{"line":145,"column":24},"end":{"line":145,"column":117}},"42":{"start":{"line":146,"column":24},"end":{"line":146,"column":78}},"43":{"start":{"line":148,"column":24},"end":{"line":148,"column":65}},"44":{"start":{"line":151,"column":20},"end":{"line":151,"column":60}},"45":{"start":{"line":157,"column":12},"end":{"line":157,"column":99}},"46":{"start":{"line":162,"column":12},"end":{"line":162,"column":74}},"47":{"start":{"line":168,"column":0},"end":{"line":170,"column":1}},"48":{"start":{"line":169,"column":4},"end":{"line":169,"column":48}}},"branchMap":{"1":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":16},"end":{"line":66,"column":16}},{"start":{"line":66,"column":16},"end":{"line":66,"column":16}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":20}},{"start":{"line":67,"column":20},"end":{"line":67,"column":20}}]},"3":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":19},"end":{"line":85,"column":52}},{"start":{"line":85,"column":56},"end":{"line":85,"column":86}}]},"4":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]},"5":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":51},"end":{"line":96,"column":71}},{"start":{"line":96,"column":74},"end":{"line":96,"column":91}}]},"6":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":16},"end":{"line":112,"column":16}},{"start":{"line":112,"column":16},"end":{"line":112,"column":16}}]},"7":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":20},"end":{"line":113,"column":20}},{"start":{"line":113,"column":20},"end":{"line":113,"column":20}}]},"8":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":16}},{"start":{"line":141,"column":16},"end":{"line":141,"column":16}}]},"9":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":20},"end":{"line":142,"column":20}},{"start":{"line":142,"column":20},"end":{"line":142,"column":20}}]},"10":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":20},"end":{"line":157,"column":38}},{"start":{"line":157,"column":44},"end":{"line":157,"column":64}},{"start":{"line":157,"column":70},"end":{"line":157,"column":97}}]},"11":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":0},"end":{"line":168,"column":0}},{"start":{"line":168,"column":0},"end":{"line":168,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , DefaultQueryExecutionContext = require(\"./defaultQueryExecutionContext\")","    , ParallelQueryExecutionContext = require(\"./parallelQueryExecutionContext\")","    , endpointComponent = require('./endpointComponent')","    , assert = require(\"assert\")","    , QueryExecutionInfoParser = require(\"./partitionedQueryExecutionContextInfoParser\")","    , PipelinedQueryExecutionContext = require(\"./pipelinedQueryExecutionContext\");","","//SCRIPT START","var ProxyQueryExecutionContext = Base.defineClass(","    /**","     * Represents a ProxyQueryExecutionContext Object. If the query is a partitioned query which can be parallelized it switches the execution context.","     * @constructor ProxyQueryExecutionContext","     * @param {object} documentclient                - The documentclient object.","     * @param {SqlQuerySpec | string} query          - A SQL query.","     * @param {FeedOptions} options                  - Represents the feed options.","     * @param {callback | callback[]} fetchFunctions - A function to retrieve each page of data. An array of functions may be used to query more than one partition.","     * @param {string} [resourceLink]                - collectionLink for parallelized query execution.","     * @ignore","    */","    function (documentclient, query, options, fetchFunctions, resourceLink) {","        this.documentclient = documentclient;","        this.query = query;","        this.fetchFunctions = fetchFunctions;","        this.options = options;","        this.resourceLink = resourceLink;","        this.queryExecutionContext = new DefaultQueryExecutionContext(this.documentclient, this.query, this.options, this.fetchFunctions);","    },","    {","","        /**","         * Execute a provided function on the next element in the ProxyQueryExecutionContext.","         * @memberof ProxyQueryExecutionContext","         * @instance","         * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","         */","        nextItem: function (callback) {","            var that = this;","            this.queryExecutionContext.nextItem(function (err, resources, headers) {","","                if (err) {","                    if (that._hasPartitionedExecutionInfo(err)) {","                        // if that's a partitioned execution info switches the execution context","                        var partitionedExecutionInfo = that._getParitionedExecutionInfo(err);","                        that.queryExecutionContext = that._createPipelinedExecutionContext(partitionedExecutionInfo);","                        return that.nextItem(callback);","                    } else {","                        return callback(err, undefined, headers);","                    }","                } else {","                    callback(undefined, resources, headers);","                }","            });","        },","","        _createPipelinedExecutionContext: function (partitionedExecutionInfo) {","","            assert.notStrictEqual(this.resourceLink, undefined, \"for top/orderby resourceLink is required.\");","","            assert(!Array.isArray(this.resourceLink) || this.resourceLink.length === 1,","                \"for top/orderby exactly one collectionLink is required\");","","            var collectionLink = undefined;","            if (Array.isArray(this.resourceLink)) {","                collectionLink = this.resourceLink[0];","            } else {","                collectionLink = this.resourceLink;","            }","","            var parallelQueryExecutionContext = new ParallelQueryExecutionContext(this.documentclient,","                Array.isArray(this.resourceLink) ? this.resourceLink[0] : this.resourceLink, this.query,","                this.options, partitionedExecutionInfo);","            return new PipelinedQueryExecutionContext(this.client, this.options,","                parallelQueryExecutionContext, partitionedExecutionInfo);","        },","","        /**","         * Retrieve the current element on the ProxyQueryExecutionContext.","         * @memberof ProxyQueryExecutionContext","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function (callback) {","            var that = this;","            this.queryExecutionContext.current(function (err, resources, headers) {","","                if (err) {","                    if (that._hasPartitionedExecutionInfo(err)) {","                        // if that's a partitioned execution info switches the execution context","                        var partitionedExecutionInfo = that._getParitionedExecutionInfo(err);","                        that.queryExecutionContext = that._createPipelinedExecutionContext(partitionedExecutionInfo);","                        return that.current(callback);","                    } else {","                        return callback(err, undefined, headers);","                    }","                } else {","                    callback(undefined, resources, headers);","                }","            });","        },","","        /**","         * Determine if there are still remaining resources to process.","         * @memberof ProxyQueryExecutionContext","         * @instance","         * @returns {Boolean} true if there is other elements to process in the ProxyQueryExecutionContext.","         */","        hasMoreResults: function () {","            return this.queryExecutionContext.hasMoreResults();","        },","","        fetchMore: function (callback) {","            var that = this;","","            this.queryExecutionContext.fetchMore(function (err, resources, headers) {","                if (err) {","                    if (that._hasPartitionedExecutionInfo(err)) {","                        // if that's a partitioned execution info switches the execution context","                        var partitionedExecutionInfo = that._getParitionedExecutionInfo(err);","                        that.queryExecutionContext = that._createPipelinedExecutionContext(partitionedExecutionInfo);","                        return that.queryExecutionContext.fetchMore(callback);","                    } else {","                        return callback(err, undefined, headers);","                    }","                } else {","                    callback(undefined, resources, headers);","                }","            });","        },","","        _hasPartitionedExecutionInfo: function (error) {","            return (error.code === 400) && ('substatus' in error) && (error['substatus'] === 1004);","        },","","        _getParitionedExecutionInfo: function (error) {","","            return JSON.parse(JSON.parse(error.body).additionalErrorInfo);","        },","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = ProxyQueryExecutionContext;","}"],"l":{"26":1,"35":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"63":0,"64":0,"66":0,"67":0,"69":0,"70":0,"71":0,"73":0,"76":0,"83":0,"85":0,"88":0,"89":0,"90":0,"92":0,"95":0,"98":0,"109":0,"110":0,"112":0,"113":0,"115":0,"116":0,"117":0,"119":0,"122":0,"134":0,"138":0,"140":0,"141":0,"142":0,"144":0,"145":0,"146":0,"148":0,"151":0,"157":0,"162":0,"168":1,"169":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/defaultQueryExecutionContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/defaultQueryExecutionContext.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0,0],"16":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":40,"loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":60}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":18},"end":{"line":58,"column":38}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":25},"end":{"line":60,"column":60}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":17},"end":{"line":72,"column":36}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":31},"end":{"line":79,"column":66}}},"6":{"name":"(anonymous_6)","line":107,"loc":{"start":{"line":107,"column":24},"end":{"line":107,"column":36}}},"7":{"name":"(anonymous_7)","line":117,"loc":{"start":{"line":117,"column":19},"end":{"line":117,"column":39}}},"8":{"name":"(anonymous_8)","line":132,"loc":{"start":{"line":132,"column":40},"end":{"line":132,"column":81}}},"9":{"name":"(anonymous_9)","line":150,"loc":{"start":{"line":150,"column":23},"end":{"line":150,"column":35}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":27,"column":40}},"2":{"start":{"line":30,"column":0},"end":{"line":161,"column":2}},"3":{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},"4":{"start":{"line":42,"column":8},"end":{"line":42,"column":27}},"5":{"start":{"line":43,"column":8},"end":{"line":43,"column":28}},"6":{"start":{"line":44,"column":8},"end":{"line":44,"column":30}},"7":{"start":{"line":45,"column":8},"end":{"line":45,"column":39}},"8":{"start":{"line":46,"column":8},"end":{"line":46,"column":98}},"9":{"start":{"line":47,"column":8},"end":{"line":47,"column":37}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":62}},"11":{"start":{"line":49,"column":8},"end":{"line":49,"column":63}},"12":{"start":{"line":59,"column":12},"end":{"line":59,"column":28}},"13":{"start":{"line":60,"column":12},"end":{"line":63,"column":15}},"14":{"start":{"line":61,"column":16},"end":{"line":61,"column":36}},"15":{"start":{"line":62,"column":16},"end":{"line":62,"column":50}},"16":{"start":{"line":73,"column":12},"end":{"line":73,"column":28}},"17":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"18":{"start":{"line":75,"column":16},"end":{"line":75,"column":89}},"19":{"start":{"line":78,"column":12},"end":{"line":98,"column":13}},"20":{"start":{"line":79,"column":16},"end":{"line":94,"column":19}},"21":{"start":{"line":80,"column":20},"end":{"line":82,"column":21}},"22":{"start":{"line":81,"column":24},"end":{"line":81,"column":65}},"23":{"start":{"line":83,"column":20},"end":{"line":83,"column":47}},"24":{"start":{"line":84,"column":20},"end":{"line":92,"column":21}},"25":{"start":{"line":85,"column":24},"end":{"line":90,"column":25}},"26":{"start":{"line":86,"column":28},"end":{"line":86,"column":83}},"27":{"start":{"line":87,"column":28},"end":{"line":87,"column":68}},"28":{"start":{"line":89,"column":28},"end":{"line":89,"column":51}},"29":{"start":{"line":91,"column":24},"end":{"line":91,"column":41}},"30":{"start":{"line":93,"column":20},"end":{"line":93,"column":84}},"31":{"start":{"line":96,"column":16},"end":{"line":96,"column":71}},"32":{"start":{"line":97,"column":16},"end":{"line":97,"column":58}},"33":{"start":{"line":108,"column":12},"end":{"line":108,"column":215}},"34":{"start":{"line":118,"column":12},"end":{"line":120,"column":13}},"35":{"start":{"line":119,"column":16},"end":{"line":119,"column":65}},"36":{"start":{"line":121,"column":12},"end":{"line":121,"column":28}},"37":{"start":{"line":123,"column":12},"end":{"line":123,"column":65}},"38":{"start":{"line":124,"column":12},"end":{"line":124,"column":58}},"39":{"start":{"line":127,"column":12},"end":{"line":129,"column":13}},"40":{"start":{"line":128,"column":16},"end":{"line":128,"column":65}},"41":{"start":{"line":131,"column":12},"end":{"line":131,"column":80}},"42":{"start":{"line":132,"column":12},"end":{"line":147,"column":15}},"43":{"start":{"line":133,"column":16},"end":{"line":136,"column":17}},"44":{"start":{"line":134,"column":20},"end":{"line":134,"column":75}},"45":{"start":{"line":135,"column":20},"end":{"line":135,"column":69}},"46":{"start":{"line":138,"column":16},"end":{"line":138,"column":88}},"47":{"start":{"line":139,"column":16},"end":{"line":141,"column":17}},"48":{"start":{"line":140,"column":20},"end":{"line":140,"column":49}},"49":{"start":{"line":143,"column":16},"end":{"line":143,"column":76}},"50":{"start":{"line":144,"column":16},"end":{"line":144,"column":38}},"51":{"start":{"line":145,"column":16},"end":{"line":145,"column":65}},"52":{"start":{"line":146,"column":16},"end":{"line":146,"column":64}},"53":{"start":{"line":151,"column":12},"end":{"line":154,"column":87}},"54":{"start":{"line":155,"column":12},"end":{"line":155,"column":23}},"55":{"start":{"line":165,"column":0},"end":{"line":167,"column":1}},"56":{"start":{"line":166,"column":4},"end":{"line":166,"column":50}}},"branchMap":{"1":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":64},"end":{"line":46,"column":78}},{"start":{"line":46,"column":81},"end":{"line":46,"column":97}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":23},"end":{"line":47,"column":30}},{"start":{"line":47,"column":34},"end":{"line":47,"column":36}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":28},"end":{"line":48,"column":53}},{"start":{"line":48,"column":57},"end":{"line":48,"column":61}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":78,"column":12}},{"start":{"line":78,"column":12},"end":{"line":78,"column":12}}]},"6":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":20}},{"start":{"line":80,"column":20},"end":{"line":80,"column":20}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":20},"end":{"line":84,"column":20}},{"start":{"line":84,"column":20},"end":{"line":84,"column":20}}]},"8":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":24},"end":{"line":85,"column":24}},{"start":{"line":85,"column":24},"end":{"line":85,"column":24}}]},"9":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":28},"end":{"line":85,"column":46}},{"start":{"line":85,"column":50},"end":{"line":85,"column":106}}]},"10":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":19},"end":{"line":108,"column":75}},{"start":{"line":108,"column":79},"end":{"line":108,"column":110}},{"start":{"line":108,"column":114},"end":{"line":108,"column":155}},{"start":{"line":108,"column":159},"end":{"line":108,"column":214}}]},"11":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":12}},{"start":{"line":118,"column":12},"end":{"line":118,"column":12}}]},"12":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":12}},{"start":{"line":127,"column":12},"end":{"line":127,"column":12}}]},"13":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":16},"end":{"line":133,"column":16}},{"start":{"line":133,"column":16},"end":{"line":133,"column":16}}]},"14":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":16},"end":{"line":139,"column":16}},{"start":{"line":139,"column":16},"end":{"line":139,"column":16}}]},"15":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":23},"end":{"line":151,"column":79}},{"start":{"line":152,"column":20},"end":{"line":152,"column":37}},{"start":{"line":152,"column":41},"end":{"line":152,"column":102}},{"start":{"line":153,"column":20},"end":{"line":153,"column":75}},{"start":{"line":154,"column":23},"end":{"line":154,"column":84}}]},"16":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":0},"end":{"line":165,"column":0}},{"start":{"line":165,"column":0},"end":{"line":165,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","  , Constants = require(\"../constants\");","","//SCRIPT START","var DefaultQueryExecutionContext = Base.defineClass(","    /**","     * Provides the basic Query Execution Context. This wraps the internal logic query execution using provided fetch functions","     * @constructor DefaultQueryExecutionContext","     * @param {DocumentClient} documentclient        - The service endpoint to use to create the client.","     * @param {SqlQuerySpec | string} query          - A SQL query.","     * @param {FeedOptions} [options]                - Represents the feed options.","     * @param {callback | callback[]} fetchFunctions - A function to retrieve each page of data. An array of functions may be used to query more than one partition.","     * @ignore","     */","    function(documentclient, query, options, fetchFunctions){","        this.documentclient = documentclient;","        this.query = query;","        this.resources = [];","        this.currentIndex = 0;","        this.currentPartitionIndex = 0;","        this.fetchFunctions = (Array.isArray(fetchFunctions)) ? fetchFunctions : [fetchFunctions];","        this.options = options || {};","        this.continuation = this.options.continuation || null;","        this.state = DefaultQueryExecutionContext.STATES.start;","    },","    {","        /**","         * Execute a provided callback on the next element in the execution context.","         * @memberof DefaultQueryExecutionContext","         * @instance","         * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","         */","        nextItem: function (callback) {","            var that = this;","            this.current(function (err, resources, headers) {","                ++that.currentIndex;","                callback(err, resources, headers);","            });","        },","","        /**","         * Retrieve the current element on the execution context.","         * @memberof DefaultQueryExecutionContext","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function(callback) {","            var that = this;","            if (this.currentIndex < this.resources.length) {","                return callback(undefined, this.resources[this.currentIndex], undefined);","            }","","            if (this._canFetchMore()) {","                this.fetchMore(function (err, resources, headers) {","                    if (err) {","                        return callback(err, undefined, headers);","                    }","                    that.resources = resources;","                    if (that.resources.length === 0) {","                        if (!that.continuation && that.currentPartitionIndex >= that.fetchFunctions.length) {","                            that.state = DefaultQueryExecutionContext.STATES.ended;","                            callback(undefined, undefined, headers);","                        } else {","                            that.current(callback);","                        }","                        return undefined;","                    }","                    callback(undefined, that.resources[that.currentIndex], headers);","                });","            } else {","                this.state = DefaultQueryExecutionContext.STATES.ended;","                callback(undefined, undefined, undefined);","            }","        },","","        /**","         * Determine if there are still remaining resources to processs based on the value of the continuation token or the elements remaining on the current batch in the execution context.","         * @memberof DefaultQueryExecutionContext","         * @instance","         * @returns {Boolean} true if there is other elements to process in the DefaultQueryExecutionContext.","         */","        hasMoreResults: function () {","            return this.state === DefaultQueryExecutionContext.STATES.start || this.continuation !== undefined || this.currentIndex < this.resources.length || this.currentPartitionIndex < this.fetchFunctions.length;","        },","","        /**","         * Fetches the next batch of the feed and pass them as an array to a callback","         * @memberof DefaultQueryExecutionContext","         * @instance","         * @param {callback} callback - Function execute on the feed response, takes two parameters error, resourcesList","         */","        fetchMore: function (callback) {","            if (this.currentPartitionIndex >= this.fetchFunctions.length) {","                return callback(undefined, undefined, undefined);","            }","            var that = this;","            // Keep to the original continuation and to restore the value after fetchFunction call","            var originalContinuation = this.options.continuation;","            this.options.continuation = this.continuation;","","            // Return undefined if there is no more results","            if (this.currentPartitionIndex >= that.fetchFunctions.length) {","                return callback(undefined, undefined, undefined);","            }","","            var fetchFunction = this.fetchFunctions[this.currentPartitionIndex];","            fetchFunction(this.options, function(err, resources, responseHeaders){","                if(err) {","                    that.state = DefaultQueryExecutionContext.STATES.ended;","                    return callback(err, undefined, responseHeaders);","                }","","                that.continuation = responseHeaders[Constants.HttpHeaders.Continuation];","                if (!that.continuation) {","                    ++that.currentPartitionIndex;","                }","","                that.state = DefaultQueryExecutionContext.STATES.inProgress;","                that.currentIndex = 0;","                that.options.continuation = originalContinuation;","                callback(undefined, resources, responseHeaders);","            });","        },","        ","        _canFetchMore: function () {","            var res = (this.state === DefaultQueryExecutionContext.STATES.start","                || (this.continuation && this.state === DefaultQueryExecutionContext.STATES.inProgress)","                || (this.currentPartitionIndex < this.fetchFunctions.length","                    && this.state === DefaultQueryExecutionContext.STATES.inProgress));","            return res;","        }","    }, {","","        STATES:  Object.freeze({ start: \"start\", inProgress: \"inProgress\", ended: \"ended\" })","    }",");","","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = DefaultQueryExecutionContext;","}",""],"l":{"26":1,"30":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"59":0,"60":0,"61":0,"62":0,"73":0,"74":0,"75":0,"78":0,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"91":0,"93":0,"96":0,"97":0,"108":0,"118":0,"119":0,"121":0,"123":0,"124":0,"127":0,"128":0,"131":0,"132":0,"133":0,"134":0,"135":0,"138":0,"139":0,"140":0,"143":0,"144":0,"145":0,"146":0,"151":0,"155":0,"165":1,"166":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/parallelQueryExecutionContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/parallelQueryExecutionContext.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":55,"loc":{"start":{"line":55,"column":4},"end":{"line":55,"column":93}}},"2":{"name":"(anonymous_2)","line":73,"loc":{"start":{"line":73,"column":43},"end":{"line":73,"column":59}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":64},"end":{"line":78,"column":76}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":42},"end":{"line":80,"column":80}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":20},"end":{"line":100,"column":52}}},"6":{"name":"(anonymous_6)","line":108,"loc":{"start":{"line":108,"column":20},"end":{"line":108,"column":52}}},"7":{"name":"(anonymous_7)","line":111,"loc":{"start":{"line":111,"column":44},"end":{"line":111,"column":56}}},"8":{"name":"(anonymous_8)","line":112,"loc":{"start":{"line":112,"column":57},"end":{"line":112,"column":82}}},"9":{"name":"(anonymous_9)","line":142,"loc":{"start":{"line":142,"column":34},"end":{"line":142,"column":46}}},"10":{"name":"(anonymous_10)","line":159,"loc":{"start":{"line":159,"column":18},"end":{"line":159,"column":38}}},"11":{"name":"(anonymous_11)","line":165,"loc":{"start":{"line":165,"column":26},"end":{"line":165,"column":38}}},"12":{"name":"(anonymous_12)","line":192,"loc":{"start":{"line":192,"column":62},"end":{"line":192,"column":83}}},"13":{"name":"(anonymous_13)","line":221,"loc":{"start":{"line":221,"column":65},"end":{"line":221,"column":91}}},"14":{"name":"(anonymous_14)","line":260,"loc":{"start":{"line":260,"column":17},"end":{"line":260,"column":37}}},"15":{"name":"(anonymous_15)","line":265,"loc":{"start":{"line":265,"column":26},"end":{"line":265,"column":38}}},"16":{"name":"(anonymous_16)","line":288,"loc":{"start":{"line":288,"column":24},"end":{"line":288,"column":36}}},"17":{"name":"(anonymous_17)","line":292,"loc":{"start":{"line":292,"column":53},"end":{"line":292,"column":88}}},"18":{"name":"(anonymous_18)","line":308,"loc":{"start":{"line":308,"column":34},"end":{"line":308,"column":54}}},"19":{"name":"(anonymous_19)","line":311,"loc":{"start":{"line":311,"column":47},"end":{"line":311,"column":63}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":33,"column":33}},"2":{"start":{"line":35,"column":0},"end":{"line":35,"column":49}},"3":{"start":{"line":37,"column":0},"end":{"line":37,"column":70}},"4":{"start":{"line":40,"column":0},"end":{"line":318,"column":2}},"5":{"start":{"line":56,"column":8},"end":{"line":56,"column":45}},"6":{"start":{"line":57,"column":8},"end":{"line":57,"column":45}},"7":{"start":{"line":58,"column":8},"end":{"line":58,"column":27}},"8":{"start":{"line":59,"column":8},"end":{"line":59,"column":31}},"9":{"start":{"line":60,"column":8},"end":{"line":60,"column":74}},"10":{"start":{"line":61,"column":8},"end":{"line":61,"column":29}},"11":{"start":{"line":62,"column":8},"end":{"line":62,"column":64}},"12":{"start":{"line":63,"column":8},"end":{"line":63,"column":80}},"13":{"start":{"line":64,"column":8},"end":{"line":64,"column":99}},"14":{"start":{"line":66,"column":8},"end":{"line":70,"column":9}},"15":{"start":{"line":67,"column":12},"end":{"line":67,"column":104}},"16":{"start":{"line":69,"column":12},"end":{"line":69,"column":105}},"17":{"start":{"line":73,"column":8},"end":{"line":73,"column":110}},"18":{"start":{"line":73,"column":61},"end":{"line":73,"column":106}},"19":{"start":{"line":75,"column":8},"end":{"line":75,"column":66}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":43}},"21":{"start":{"line":77,"column":8},"end":{"line":77,"column":24}},"22":{"start":{"line":78,"column":8},"end":{"line":138,"column":10}},"23":{"start":{"line":80,"column":12},"end":{"line":137,"column":15}},"24":{"start":{"line":81,"column":16},"end":{"line":81,"column":89}},"25":{"start":{"line":82,"column":16},"end":{"line":87,"column":17}},"26":{"start":{"line":83,"column":20},"end":{"line":83,"column":35}},"27":{"start":{"line":85,"column":20},"end":{"line":85,"column":37}},"28":{"start":{"line":86,"column":20},"end":{"line":86,"column":27}},"29":{"start":{"line":88,"column":16},"end":{"line":88,"column":81}},"30":{"start":{"line":90,"column":16},"end":{"line":94,"column":17}},"31":{"start":{"line":91,"column":20},"end":{"line":91,"column":108}},"32":{"start":{"line":93,"column":20},"end":{"line":93,"column":74}},"33":{"start":{"line":95,"column":16},"end":{"line":95,"column":95}},"34":{"start":{"line":97,"column":16},"end":{"line":97,"column":66}},"35":{"start":{"line":99,"column":16},"end":{"line":105,"column":18}},"36":{"start":{"line":102,"column":24},"end":{"line":103,"column":100}},"37":{"start":{"line":107,"column":16},"end":{"line":136,"column":23}},"38":{"start":{"line":111,"column":24},"end":{"line":134,"column":25}},"39":{"start":{"line":112,"column":28},"end":{"line":133,"column":31}},"40":{"start":{"line":113,"column":32},"end":{"line":132,"column":33}},"41":{"start":{"line":114,"column":36},"end":{"line":117,"column":37}},"42":{"start":{"line":115,"column":40},"end":{"line":115,"column":55}},"43":{"start":{"line":116,"column":40},"end":{"line":116,"column":47}},"44":{"start":{"line":119,"column":36},"end":{"line":122,"column":37}},"45":{"start":{"line":121,"column":40},"end":{"line":121,"column":47}},"46":{"start":{"line":124,"column":36},"end":{"line":128,"column":37}},"47":{"start":{"line":125,"column":40},"end":{"line":125,"column":81}},"48":{"start":{"line":127,"column":40},"end":{"line":127,"column":53}},"49":{"start":{"line":130,"column":36},"end":{"line":130,"column":59}},"50":{"start":{"line":131,"column":36},"end":{"line":131,"column":68}},"51":{"start":{"line":135,"column":24},"end":{"line":135,"column":59}},"52":{"start":{"line":139,"column":8},"end":{"line":139,"column":73}},"53":{"start":{"line":145,"column":12},"end":{"line":145,"column":102}},"54":{"start":{"line":146,"column":12},"end":{"line":151,"column":13}},"55":{"start":{"line":147,"column":16},"end":{"line":147,"column":33}},"56":{"start":{"line":148,"column":16},"end":{"line":150,"column":17}},"57":{"start":{"line":149,"column":20},"end":{"line":149,"column":81}},"58":{"start":{"line":160,"column":12},"end":{"line":163,"column":13}},"59":{"start":{"line":162,"column":16},"end":{"line":162,"column":53}},"60":{"start":{"line":164,"column":12},"end":{"line":164,"column":28}},"61":{"start":{"line":165,"column":12},"end":{"line":251,"column":15}},"62":{"start":{"line":167,"column":16},"end":{"line":172,"column":17}},"63":{"start":{"line":169,"column":20},"end":{"line":169,"column":37}},"64":{"start":{"line":171,"column":20},"end":{"line":171,"column":57}},"65":{"start":{"line":174,"column":16},"end":{"line":180,"column":17}},"66":{"start":{"line":176,"column":20},"end":{"line":176,"column":76}},"67":{"start":{"line":178,"column":20},"end":{"line":178,"column":37}},"68":{"start":{"line":179,"column":20},"end":{"line":179,"column":58}},"69":{"start":{"line":181,"column":16},"end":{"line":190,"column":17}},"70":{"start":{"line":182,"column":20},"end":{"line":182,"column":84}},"71":{"start":{"line":186,"column":20},"end":{"line":186,"column":33}},"72":{"start":{"line":188,"column":20},"end":{"line":188,"column":37}},"73":{"start":{"line":189,"column":20},"end":{"line":189,"column":57}},"74":{"start":{"line":192,"column":16},"end":{"line":250,"column":19}},"75":{"start":{"line":193,"column":20},"end":{"line":205,"column":21}},"76":{"start":{"line":197,"column":24},"end":{"line":201,"column":58}},"77":{"start":{"line":203,"column":24},"end":{"line":203,"column":41}},"78":{"start":{"line":204,"column":24},"end":{"line":204,"column":61}},"79":{"start":{"line":206,"column":20},"end":{"line":217,"column":21}},"80":{"start":{"line":210,"column":24},"end":{"line":213,"column":123}},"81":{"start":{"line":215,"column":24},"end":{"line":215,"column":41}},"82":{"start":{"line":216,"column":24},"end":{"line":216,"column":61}},"83":{"start":{"line":221,"column":20},"end":{"line":246,"column":23}},"84":{"start":{"line":222,"column":24},"end":{"line":245,"column":25}},"85":{"start":{"line":223,"column":28},"end":{"line":226,"column":29}},"86":{"start":{"line":224,"column":32},"end":{"line":224,"column":47}},"87":{"start":{"line":225,"column":32},"end":{"line":225,"column":39}},"88":{"start":{"line":227,"column":28},"end":{"line":230,"column":29}},"89":{"start":{"line":229,"column":32},"end":{"line":229,"column":39}},"90":{"start":{"line":231,"column":28},"end":{"line":240,"column":29}},"91":{"start":{"line":232,"column":32},"end":{"line":232,"column":91}},"92":{"start":{"line":233,"column":32},"end":{"line":234,"column":107}},"93":{"start":{"line":235,"column":32},"end":{"line":235,"column":89}},"94":{"start":{"line":239,"column":32},"end":{"line":239,"column":45}},"95":{"start":{"line":241,"column":28},"end":{"line":241,"column":35}},"96":{"start":{"line":244,"column":28},"end":{"line":244,"column":45}},"97":{"start":{"line":249,"column":20},"end":{"line":249,"column":46}},"98":{"start":{"line":261,"column":12},"end":{"line":263,"column":13}},"99":{"start":{"line":262,"column":16},"end":{"line":262,"column":53}},"100":{"start":{"line":264,"column":12},"end":{"line":264,"column":28}},"101":{"start":{"line":265,"column":12},"end":{"line":279,"column":15}},"102":{"start":{"line":266,"column":16},"end":{"line":278,"column":17}},"103":{"start":{"line":267,"column":20},"end":{"line":269,"column":21}},"104":{"start":{"line":268,"column":24},"end":{"line":268,"column":61}},"105":{"start":{"line":271,"column":20},"end":{"line":273,"column":21}},"106":{"start":{"line":272,"column":24},"end":{"line":272,"column":62}},"107":{"start":{"line":274,"column":20},"end":{"line":274,"column":85}},"108":{"start":{"line":275,"column":20},"end":{"line":275,"column":75}},"109":{"start":{"line":277,"column":20},"end":{"line":277,"column":37}},"110":{"start":{"line":289,"column":12},"end":{"line":289,"column":106}},"111":{"start":{"line":294,"column":12},"end":{"line":294,"column":113}},"112":{"start":{"line":295,"column":12},"end":{"line":295,"column":35}},"113":{"start":{"line":296,"column":12},"end":{"line":298,"column":13}},"114":{"start":{"line":297,"column":16},"end":{"line":297,"column":43}},"115":{"start":{"line":299,"column":12},"end":{"line":304,"column":13}},"116":{"start":{"line":300,"column":16},"end":{"line":300,"column":58}},"117":{"start":{"line":302,"column":16},"end":{"line":302,"column":83}},"118":{"start":{"line":303,"column":16},"end":{"line":303,"column":48}},"119":{"start":{"line":305,"column":12},"end":{"line":305,"column":114}},"120":{"start":{"line":310,"column":12},"end":{"line":310,"column":108}},"121":{"start":{"line":311,"column":12},"end":{"line":311,"column":107}},"122":{"start":{"line":311,"column":65},"end":{"line":311,"column":103}},"123":{"start":{"line":312,"column":12},"end":{"line":312,"column":105}},"124":{"start":{"line":321,"column":0},"end":{"line":323,"column":1}},"125":{"start":{"line":322,"column":4},"end":{"line":322,"column":51}}},"branchMap":{"1":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"2":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":42}},{"start":{"line":66,"column":46},"end":{"line":66,"column":72}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":82,"column":16}},{"start":{"line":82,"column":16},"end":{"line":82,"column":16}}]},"4":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":45},"end":{"line":88,"column":75}},{"start":{"line":88,"column":79},"end":{"line":88,"column":80}}]},"5":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":90,"column":16}},{"start":{"line":90,"column":16},"end":{"line":90,"column":16}}]},"6":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":36},"end":{"line":114,"column":36}},{"start":{"line":114,"column":36},"end":{"line":114,"column":36}}]},"7":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":36},"end":{"line":119,"column":36}},{"start":{"line":119,"column":36},"end":{"line":119,"column":36}}]},"8":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":12}},{"start":{"line":146,"column":12},"end":{"line":146,"column":12}}]},"9":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":16},"end":{"line":148,"column":16}},{"start":{"line":148,"column":16},"end":{"line":148,"column":16}}]},"10":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":12}},{"start":{"line":160,"column":12},"end":{"line":160,"column":12}}]},"11":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":16},"end":{"line":167,"column":16}},{"start":{"line":167,"column":16},"end":{"line":167,"column":16}}]},"12":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":16},"end":{"line":174,"column":16}},{"start":{"line":174,"column":16},"end":{"line":174,"column":16}}]},"13":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":20},"end":{"line":193,"column":20}},{"start":{"line":193,"column":20},"end":{"line":193,"column":20}}]},"14":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":20},"end":{"line":206,"column":20}},{"start":{"line":206,"column":20},"end":{"line":206,"column":20}}]},"15":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":28},"end":{"line":223,"column":28}},{"start":{"line":223,"column":28},"end":{"line":223,"column":28}}]},"16":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":28},"end":{"line":227,"column":28}},{"start":{"line":227,"column":28},"end":{"line":227,"column":28}}]},"17":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":12},"end":{"line":261,"column":12}},{"start":{"line":261,"column":12},"end":{"line":261,"column":12}}]},"18":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":20},"end":{"line":267,"column":20}},{"start":{"line":267,"column":20},"end":{"line":267,"column":20}}]},"19":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":20},"end":{"line":271,"column":20}},{"start":{"line":271,"column":20},"end":{"line":271,"column":20}}]},"20":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":21},"end":{"line":289,"column":78}},{"start":{"line":289,"column":82},"end":{"line":289,"column":104}}]},"21":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":12},"end":{"line":296,"column":12}},{"start":{"line":296,"column":12},"end":{"line":296,"column":12}}]},"22":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":12},"end":{"line":299,"column":12}},{"start":{"line":299,"column":12},"end":{"line":299,"column":12}}]},"23":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":0},"end":{"line":321,"column":0}},{"start":{"line":321,"column":0},"end":{"line":321,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , DefaultQueryExecutionContext = require(\"./defaultQueryExecutionContext\")","    , PriorityQueue = require(\"priorityqueuejs\")","    , SmartRoutingMapProvider = require(\"../routing/smartRoutingMapProvider\")","    , CollectionRoutingMap = require(\"../routing/inMemoryCollectionRoutingMap\")","    , DocumentProducer = require(\"./documentProducer\")","    , QueryExecutionInfoParser = require(\"./partitionedQueryExecutionContextInfoParser\")","    , assert = require('assert');","","var QueryRange = CollectionRoutingMap.QueryRange;","","var FormatPlaceHolder = \"{documentdb-formattableorderbyquery-filter}\"; ","","//SCRIPT START","var ParallelQueryExecutionContext = Base.defineClass(","    /**","     * Provides the ParallelQueryExecutionContext.","     * This class is capable of handling parallelized queries.","     *","     * When handling a parallelized (e.g., orderby) query, it instantiates one instance of","     * DocumentProcuder per target partition key range and aggregates the result of each.","     *","     * @constructor ParallelQueryExecutionContext","     * @param {DocumentClient} documentclient        - The service endpoint to use to create the client.","     * @param {string} collectionLink                - The Collection Link","     * @param {FeedOptions} [options]                - Represents the feed options.","     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo","     * @ignore","     */","    function (documentclient, collectionLink, query, options, partitionedQueryExecutionInfo) {","        this.documentclient = documentclient;","        this.collectionLink = collectionLink;","        this.query = query;","        this.options = options;","        this.paritionedQueryExecutionInfo = partitionedQueryExecutionInfo;","        this.err = undefined;","        this.state = ParallelQueryExecutionContext.STATES.start;","        this.routingProvider = new SmartRoutingMapProvider(this.documentclient);","        this.sortOrders = QueryExecutionInfoParser.parseOrderBy(this.paritionedQueryExecutionInfo);","","        if (Array.isArray(this.sortOrders) && this.sortOrders.length > 0) {","            this.documentProducerComparator = DocumentProducer.createOrderByComparator(this.sortOrders);","        } else {","            this.documentProducerComparator = DocumentProducer.createTargetPartitionKeyRangeComparator();","        }","","        // this is a max priority queue","        this.orderByPQ = new PriorityQueue(function (a, b) { return that.documentProducerComparator(b, a); });","","        this.state = ParallelQueryExecutionContext.STATES.started;","        this.sem = require('semaphore')(1);","        var that = this;","        var createDocumentProducersAndFillUpPriorityQueueFunc = function () {","            // ensure the lock is released after finishing up","            that._onTargetPartitionRanges(function (err, targetPartitionRanges) {","                that.waitingForInternalExcecutionContexts = targetPartitionRanges.length;","                if (err) {","                    that.err = err;","                     // relase the lock","                    that.sem.leave();","                    return;","                }","                var maxDegreeOfParallelism = options.maxDegreeOfParallelism || 1;","","                if (maxDegreeOfParallelism > 0) {","                    maxDegreeOfParallelism = Math.min(maxDegreeOfParallelism, targetPartitionRanges.length);","                } else {","                    maxDegreeOfParallelism = targetPartitionRanges.length;","                }","                var parallelismSem = require('semaphore')(Math.max(maxDegreeOfParallelism, 1));","                ","                var targetPartitionQueryExecutionContextList = [];","","                targetPartitionRanges.forEach(","                    function (partitionTargetRange) {","                        // no async callback","                        targetPartitionQueryExecutionContextList.push(","                            that._createTargetPartitionQueryExecutionContext(partitionTargetRange));","                    }","                );","","                targetPartitionQueryExecutionContextList.forEach(","                    function (targetQueryExContext) {","","                        // has async callback","                        var throttledFunc = function () {","                            targetQueryExContext.current(function (err, document) {","                                try {","                                    if (err) {","                                        that.err = err;","                                        return;","                                    }","","                                    if (document == undefined) {","                                        // no results on this one","                                        return;","                                    }","                                    // if there are matching results in the target ex range add it to the priority queue","                                    try {","                                        that.orderByPQ.enq(targetQueryExContext);","                                    } catch (e) {","                                        that.err = e;","                                    }","                                } finally {","                                    parallelismSem.leave();","                                    that._decrementInitiationLock();","                                }","                            });","                        }","                        parallelismSem.take(throttledFunc);","                    });","            });","        };","        this.sem.take(createDocumentProducersAndFillUpPriorityQueueFunc);","    },","    {","        _decrementInitiationLock: function () {","            // decrements waitingForInternalExcecutionContexts","            // if waitingForInternalExcecutionContexts reaches 0 releases the semaphore and changes the state","            this.waitingForInternalExcecutionContexts = this.waitingForInternalExcecutionContexts - 1;","            if (this.waitingForInternalExcecutionContexts === 0) {","                this.sem.leave();","                if (this.orderByPQ.size() === 0) {","                    this.state = ParallelQueryExecutionContext.STATES.inProgress;","                }","            }","        },","        /**","        * Execute a provided function on the next element in the ParallelQueryExecutionContext.","        * @memberof ParallelQueryExecutionContext","        * @instance","        * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","        */","        nextItem: function (callback) {","            if (this.err) {","                // if there is a prior error return error","                return callback(this.err, undefined);","            }","            var that = this;","            this.sem.take(function () {","                // NOTE: lock must be released before invoking quitting","                if (that.err) {","                    // release the lock before invoking callback","                    that.sem.leave();","                    // if there is a prior error return error","                    return callback(that.err, undefined);","                }","","                if (that.orderByPQ.size() === 0) {","                    // there is no more results","                    that.state = ParallelQueryExecutionContext.STATES.ended;","                    // release the lock before invoking callback","                    that.sem.leave();","                    return callback(undefined, undefined);","                }","                try {","                    var targetPartitionRangeDocumentProducer = that.orderByPQ.deq();","                } catch (e) {","                    // if comparing elements of the priority queue throws exception","                    // set that error and return error","                    that.err = e;","                    // release the lock before invoking callback","                    that.sem.leave();","                    return callback(that.err, undefined);","                }","","                targetPartitionRangeDocumentProducer.nextItem(function (err, item) {","                    if (err) {","                        // this should never happen","                        // because the documentProducer already has buffered an item","                        // assert err === undefined","                        that.err =","                            new Error(","                                util.format(","                                        \"Extracted DocumentProducer from the priority queue fails to get the buffered item. Due to %s\",","                                    JSON.stringify(err)));","                        // release the lock before invoking callback","                        that.sem.leave();","                        return callback(that.err, undefined);","                    }","                    if (item === undefined) {","                        // this should never happen","                        // because the documentProducer already has buffered an item","                        // assert item !== undefined","                        that.err =","                            new Error(","                                util.format(","                                    \"Extracted DocumentProducer from the priority queue doesn't have any buffered item!\"));","                        // release the lock before invoking callback","                        that.sem.leave();","                        return callback(that.err, undefined);","                    }","","                    // we need to put back the document producer to the queue if it has more elements.","                    // the lock will be released after we know document producer must be put back in the queue or not","                    targetPartitionRangeDocumentProducer.current(function (err, afterItem) {","                        try {","                            if (err) {","                                that.err = err;","                                return;","                            }","                            if (afterItem === undefined) {","                                // no more results is left in this document producer","                                return;","                            }","                            try {","                                var headItem = targetPartitionRangeDocumentProducer.peek();","                                assert.notStrictEqual(headItem, undefined,","                                    'Extracted DocumentProducer from PQ is invalid state with no result!');","                                that.orderByPQ.enq(targetPartitionRangeDocumentProducer);","                            } catch (e) {","                                // if comparing elements in priority queue throws exception","                                // set error","                                that.err = e;","                            }","                            return;","                        } finally {","                            // release the lock before returning","                            that.sem.leave();","                        }","                    });","","                    // invoke the callback on the item","                    callback(undefined, item);","                });","            });","        },","","        /**","         * Retrieve the current element on the ParallelQueryExecutionContext.","         * @memberof ParallelQueryExecutionContext","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function (callback) {","            if (this.err) {","                return callback(this.err, undefined);","            }","            var that = this;","            this.sem.take(function () {","                try {","                    if (that.err) {","                        return callback(that.err, undefined);","                    }","","                    if (that.orderByPQ.size() === 0) {","                        return callback(undefined, undefined);","                    }","                    var targetPartitionRangeDocumentProducer = that.orderByPQ.peek();","                    targetPartitionRangeDocumentProducer.current(callback);","                } finally {","                    that.sem.leave();","                }","            });","        },","","        /**","         * Determine if there are still remaining resources to processs based on the value of the continuation token or the elements remaining on the current batch in the QueryIterator.","         * @memberof ParallelQueryExecutionContext","         * @instance","         * @returns {Boolean} true if there is other elements to process in the ParallelQueryExecutionContext.","         */","        hasMoreResults: function () {","            return !(this.state === ParallelQueryExecutionContext.STATES.ended || this.err !== undefined);","        },","        ","        _createTargetPartitionQueryExecutionContext: function (partitionKeyTargetRange) {","            // creates target partition range Query Execution Context","            var rewrittenQuery = QueryExecutionInfoParser.parseRewrittenQuery(this.paritionedQueryExecutionInfo);","            var query = this.query;","            if (typeof (query) === 'string') {","                query = { 'query': query };","            }","            if (rewrittenQuery) {","                query = JSON.parse(JSON.stringify(query));","                // We hardcode the formattable filter to true for now","                rewrittenQuery = rewrittenQuery.replace(FormatPlaceHolder, \"true\");","                query['query'] = rewrittenQuery;","            }","            return new DocumentProducer(this.documentclient, this.collectionLink, query, partitionKeyTargetRange);","        },","","        _onTargetPartitionRanges: function (callback) {","            // invokes the callback when the target partition ranges are ready","            var parsedRanges = QueryExecutionInfoParser.parseQueryRanges(this.paritionedQueryExecutionInfo);","            var queryRanges = parsedRanges.map(function (item) { return QueryRange.parseFromDict(item); });","            return this.routingProvider.getOverlappingRanges(callback, this.collectionLink, queryRanges);","        },","    }, ","    {","        STATES: Object.freeze({ started: \"started\", inProgress: \"inProgress\", ended: \"ended\" })","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = ParallelQueryExecutionContext;","}"],"l":{"26":1,"35":1,"37":1,"40":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"69":0,"73":0,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":0,"85":0,"86":0,"88":0,"90":0,"91":0,"93":0,"95":0,"97":0,"99":0,"102":0,"107":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"119":0,"121":0,"124":0,"125":0,"127":0,"130":0,"131":0,"135":0,"139":0,"145":0,"146":0,"147":0,"148":0,"149":0,"160":0,"162":0,"164":0,"165":0,"167":0,"169":0,"171":0,"174":0,"176":0,"178":0,"179":0,"181":0,"182":0,"186":0,"188":0,"189":0,"192":0,"193":0,"197":0,"203":0,"204":0,"206":0,"210":0,"215":0,"216":0,"221":0,"222":0,"223":0,"224":0,"225":0,"227":0,"229":0,"231":0,"232":0,"233":0,"235":0,"239":0,"241":0,"244":0,"249":0,"261":0,"262":0,"264":0,"265":0,"266":0,"267":0,"268":0,"271":0,"272":0,"274":0,"275":0,"277":0,"289":0,"294":0,"295":0,"296":0,"297":0,"299":0,"300":0,"302":0,"303":0,"305":0,"310":0,"311":0,"312":0,"321":1,"322":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/routing/smartRoutingMapProvider.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/routing/smartRoutingMapProvider.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":30}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":39},"end":{"line":50,"column":65}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":36},"end":{"line":67,"column":54}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":20},"end":{"line":78,"column":36}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":24},"end":{"line":82,"column":39}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":24},"end":{"line":86,"column":56}}},"7":{"name":"(anonymous_7)","line":105,"loc":{"start":{"line":105,"column":30},"end":{"line":105,"column":80}}},"8":{"name":"(anonymous_8)","line":118,"loc":{"start":{"line":118,"column":65},"end":{"line":118,"column":102}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":30,"column":29}},"2":{"start":{"line":32,"column":0},"end":{"line":32,"column":83}},"3":{"start":{"line":33,"column":0},"end":{"line":33,"column":49}},"4":{"start":{"line":34,"column":0},"end":{"line":34,"column":65}},"5":{"start":{"line":37,"column":0},"end":{"line":170,"column":2}},"6":{"start":{"line":47,"column":8},"end":{"line":47,"column":82}},"7":{"start":{"line":51,"column":12},"end":{"line":51,"column":66}},"8":{"start":{"line":52,"column":12},"end":{"line":52,"column":66}},"9":{"start":{"line":54,"column":12},"end":{"line":64,"column":13}},"10":{"start":{"line":56,"column":16},"end":{"line":56,"column":29}},"11":{"start":{"line":58,"column":16},"end":{"line":62,"column":17}},"12":{"start":{"line":61,"column":20},"end":{"line":61,"column":33}},"13":{"start":{"line":63,"column":16},"end":{"line":63,"column":28}},"14":{"start":{"line":68,"column":12},"end":{"line":74,"column":13}},"15":{"start":{"line":69,"column":16},"end":{"line":69,"column":48}},"16":{"start":{"line":70,"column":16},"end":{"line":70,"column":36}},"17":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"18":{"start":{"line":72,"column":20},"end":{"line":72,"column":33}},"19":{"start":{"line":75,"column":12},"end":{"line":75,"column":24}},"20":{"start":{"line":79,"column":12},"end":{"line":79,"column":36}},"21":{"start":{"line":83,"column":12},"end":{"line":83,"column":51}},"22":{"start":{"line":87,"column":12},"end":{"line":87,"column":98}},"23":{"start":{"line":88,"column":12},"end":{"line":88,"column":30}},"24":{"start":{"line":89,"column":12},"end":{"line":93,"column":13}},"25":{"start":{"line":90,"column":16},"end":{"line":90,"column":49}},"26":{"start":{"line":92,"column":16},"end":{"line":92,"column":38}},"27":{"start":{"line":94,"column":12},"end":{"line":95,"column":34}},"28":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"29":{"start":{"line":108,"column":16},"end":{"line":108,"column":115}},"30":{"start":{"line":111,"column":12},"end":{"line":111,"column":40}},"31":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"32":{"start":{"line":114,"column":16},"end":{"line":114,"column":63}},"33":{"start":{"line":117,"column":12},"end":{"line":117,"column":28}},"34":{"start":{"line":118,"column":12},"end":{"line":167,"column":31}},"35":{"start":{"line":119,"column":16},"end":{"line":121,"column":17}},"36":{"start":{"line":120,"column":20},"end":{"line":120,"column":52}},"37":{"start":{"line":123,"column":16},"end":{"line":123,"column":30}},"38":{"start":{"line":124,"column":16},"end":{"line":124,"column":63}},"39":{"start":{"line":125,"column":16},"end":{"line":166,"column":17}},"40":{"start":{"line":126,"column":20},"end":{"line":133,"column":21}},"41":{"start":{"line":128,"column":24},"end":{"line":130,"column":25}},"42":{"start":{"line":129,"column":28},"end":{"line":129,"column":75}},"43":{"start":{"line":131,"column":24},"end":{"line":131,"column":67}},"44":{"start":{"line":132,"column":24},"end":{"line":132,"column":33}},"45":{"start":{"line":135,"column":20},"end":{"line":135,"column":35}},"46":{"start":{"line":136,"column":20},"end":{"line":141,"column":21}},"47":{"start":{"line":137,"column":24},"end":{"line":138,"column":101}},"48":{"start":{"line":140,"column":24},"end":{"line":140,"column":58}},"49":{"start":{"line":143,"column":20},"end":{"line":143,"column":98}},"50":{"start":{"line":144,"column":20},"end":{"line":144,"column":147}},"51":{"start":{"line":145,"column":20},"end":{"line":145,"column":86}},"52":{"start":{"line":147,"column":20},"end":{"line":147,"column":132}},"53":{"start":{"line":148,"column":20},"end":{"line":148,"column":69}},"54":{"start":{"line":150,"column":20},"end":{"line":151,"column":149}},"55":{"start":{"line":154,"column":20},"end":{"line":156,"column":21}},"56":{"start":{"line":155,"column":24},"end":{"line":155,"column":71}},"57":{"start":{"line":157,"column":20},"end":{"line":157,"column":63}},"58":{"start":{"line":159,"column":20},"end":{"line":165,"column":21}},"59":{"start":{"line":161,"column":24},"end":{"line":163,"column":25}},"60":{"start":{"line":162,"column":28},"end":{"line":162,"column":75}},"61":{"start":{"line":164,"column":24},"end":{"line":164,"column":67}},"62":{"start":{"line":173,"column":0},"end":{"line":175,"column":1}},"63":{"start":{"line":174,"column":4},"end":{"line":174,"column":45}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":12}},{"start":{"line":54,"column":12},"end":{"line":54,"column":12}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":16}},{"start":{"line":58,"column":16},"end":{"line":58,"column":16}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":20},"end":{"line":58,"column":45}},{"start":{"line":58,"column":49},"end":{"line":58,"column":70}},{"start":{"line":58,"column":74},"end":{"line":58,"column":95}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":16}},{"start":{"line":71,"column":16},"end":{"line":71,"column":16}}]},"5":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":29},"end":{"line":79,"column":30}},{"start":{"line":79,"column":33},"end":{"line":79,"column":34}}]},"6":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":29},"end":{"line":83,"column":30}},{"start":{"line":83,"column":34},"end":{"line":83,"column":48}}]},"7":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":42},"end":{"line":83,"column":43}},{"start":{"line":83,"column":46},"end":{"line":83,"column":48}}]},"8":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":12}},{"start":{"line":89,"column":12},"end":{"line":89,"column":12}}]},"9":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"11":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":16},"end":{"line":119,"column":16}},{"start":{"line":119,"column":16},"end":{"line":119,"column":16}}]},"12":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":20},"end":{"line":126,"column":20}},{"start":{"line":126,"column":20},"end":{"line":126,"column":20}}]},"13":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":24},"end":{"line":128,"column":24}},{"start":{"line":128,"column":24},"end":{"line":128,"column":24}}]},"14":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":20},"end":{"line":136,"column":20}},{"start":{"line":136,"column":20},"end":{"line":136,"column":20}}]},"15":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":20},"end":{"line":154,"column":20}},{"start":{"line":154,"column":20},"end":{"line":154,"column":20}}]},"16":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":24},"end":{"line":161,"column":24}},{"start":{"line":161,"column":24},"end":{"line":161,"column":24}}]},"17":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":0},"end":{"line":173,"column":0}},{"start":{"line":173,"column":0},"end":{"line":173,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , assert = require(\"assert\")","    , CollectionRoutingMap = require(\"./inMemoryCollectionRoutingMap\")","    , PartitionKeyRangeCache = require(\"./partitionKeyRangeCache\")","    , util = require(\"util\");","","var CollectionRoutingMapFactory = CollectionRoutingMap.CollectionRoutingMapFactory;","var QueryRange = CollectionRoutingMap.QueryRange;","var _PartitionKeyRange = CollectionRoutingMap._PartitionKeyRange;","","//SCRIPT START","var SmartRoutingMapProvider = Base.defineClass(","    ","   /**","   * Represents a SmartRoutingMapProvider Object,  Efficiently uses PartitionKeyRangeCache and minimizes the unnecessary","   * invocation of PartitionKeyRangeCache.getOverlappingRanges()","   * @constructor SmartRoutingMapProvider","   * @param {object} documentclient                - The documentclient object.","   * @ignore","   */","    function (documentclient) {","        this._partitionKeyRangeCache = new PartitionKeyRangeCache(documentclient);","    },","    {","        _secondRangeIsAfterFirstRange: function (range1, range2) {","            assert.notEqual(range1.max, undefined, \"invalid arg\");","            assert.notEqual(range2.min, undefined, \"invalid arg\");","","            if (range1.max > range2.min) {","                // r.min < #previous_r.max","                return false;","            } else {","                if (range1.max === range2.min && range1.isMaxInclusive && range2.isMinInclusive) {","                    // the inclusive ending endpoint of previous_r is the same as the inclusive beginning endpoint of r","                    // they share a point","                    return false;","                }","                return true;","            }","        },","","        _isSortedAndNonOverlapping: function (ranges) {","            for (var idx = 1; idx < ranges.length; idx++) {","                var previousR = ranges[idx - 1];","                var r = ranges[idx];","                if (!this._secondRangeIsAfterFirstRange(previousR, r)) {","                    return false;","                }","            }","            return true;","        },","","        _stringMax: function (a, b) {","            return (a >= b ? a : b);","        },","","        _stringCompare: function(a, b) {","            return (a == b ? 0 : (a > b ? 1 : -1));","        },","","        _subtractRange: function (r, partitionKeyRange) {","            var left = this._stringMax(partitionKeyRange[_PartitionKeyRange.MaxExclusive], r.min);","            var leftInclusive;","            if (this._stringCompare(left, r.min) === 0) {","                leftInclusive = r.isMinInclusive;","            } else {","                leftInclusive = false;","            }","            return new QueryRange(left, r.max, leftInclusive,","                r.isMaxInclusive);","        },","","        /**","         * Given the sorted ranges and a collection, invokes the callback on the list of overlapping partition key ranges","         * @param {callback} callback - Function execute on the overlapping partition key ranges result, takes two parameters error, partition key ranges","         * @param collectionLink","         * @param sortedRanges","         * @ignore","         */","        getOverlappingRanges: function (callback, collectionLink, sortedRanges) {","            // validate if the list is non- overlapping and sorted","            if (!this._isSortedAndNonOverlapping(sortedRanges)) {","                return callback(new Error(\"the list of ranges is not a non-overlapping sorted ranges\"), undefined);","            }","","            var partitionKeyRanges = [];","","            if (sortedRanges.length === 0) {","                return callback(undefined, partitionKeyRanges);","            }","","            var that = this;","            this._partitionKeyRangeCache._onCollectionRoutingMap(function (err, collectionRoutingMap) {","                if (err) {","                    return callback(err, undefined);","                }","","                var index = 0;","                var currentProvidedRange = sortedRanges[index];","                while (true) {","                    if (currentProvidedRange.isEmpty()) {","                        // skip and go to the next item","                        if (++index >= sortedRanges.length) {","                            return callback(undefined, partitionKeyRanges);","                        }","                        currentProvidedRange = sortedRanges[index];","                        continue;","                    }","","                    var queryRange;","                    if (partitionKeyRanges.length > 0) {","                        queryRange = that._subtractRange(","                            currentProvidedRange, partitionKeyRanges[partitionKeyRanges.length - 1]);","                    } else {","                        queryRange = currentProvidedRange;","                    }","","                    var overlappingRanges = collectionRoutingMap.getOverlappingRanges(queryRange);","                    assert(overlappingRanges.length > 0, util.format(\"error: returned overlapping ranges for queryRange %s is empty\", queryRange));","                    partitionKeyRanges = partitionKeyRanges.concat(overlappingRanges);","","                    var lastKnownTargetRange = QueryRange.parsePartitionKeyRange(partitionKeyRanges[partitionKeyRanges.length - 1]);","                    assert.notEqual(lastKnownTargetRange, undefined);","                    // the overlapping ranges must contain the requested range","                    assert(that._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) <= 0,","                        util.format(\"error: returned overlapping ranges %s does not contain the requested range %s\", overlappingRanges, queryRange));","","                    // the current range is contained in partitionKeyRanges just move forward","                    if (++index >= sortedRanges.length) {","                        return callback(undefined, partitionKeyRanges);","                    }","                    currentProvidedRange = sortedRanges[index];","","                    while (that._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) <= 0) {","                        // the current range is covered too.just move forward","                        if (++index >= sortedRanges.length) {","                            return callback(undefined, partitionKeyRanges);","                        }","                        currentProvidedRange = sortedRanges[index];","                    }","                }","            }, collectionLink);","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = SmartRoutingMapProvider;","}"],"l":{"26":1,"32":1,"33":1,"34":1,"37":1,"47":0,"51":0,"52":0,"54":0,"56":0,"58":0,"61":0,"63":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"79":0,"83":0,"87":0,"88":0,"89":0,"90":0,"92":0,"94":0,"107":0,"108":0,"111":0,"113":0,"114":0,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"125":0,"126":0,"128":0,"129":0,"131":0,"132":0,"135":0,"136":0,"137":0,"140":0,"143":0,"144":0,"145":0,"147":0,"148":0,"150":0,"154":0,"155":0,"157":0,"159":0,"161":0,"162":0,"164":0,"173":1,"174":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/routing/inMemoryCollectionRoutingMap.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/routing/inMemoryCollectionRoutingMap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1,"112":1,"113":1,"114":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":61,"loc":{"start":{"line":61,"column":4},"end":{"line":61,"column":66}}},"2":{"name":"(anonymous_2)","line":68,"loc":{"start":{"line":68,"column":18},"end":{"line":68,"column":35}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":17},"end":{"line":84,"column":29}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":32},"end":{"line":94,"column":61}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":23},"end":{"line":103,"column":49}}},"6":{"name":"(anonymous_6)","line":114,"loc":{"start":{"line":114,"column":4},"end":{"line":114,"column":107}}},"7":{"name":"(anonymous_7)","line":119,"loc":{"start":{"line":119,"column":12},"end":{"line":119,"column":27}}},"8":{"name":"(anonymous_8)","line":128,"loc":{"start":{"line":128,"column":37},"end":{"line":128,"column":49}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":41},"end":{"line":132,"column":79}}},"10":{"name":"(anonymous_10)","line":143,"loc":{"start":{"line":143,"column":16},"end":{"line":143,"column":29}}},"11":{"name":"(anonymous_11)","line":154,"loc":{"start":{"line":154,"column":28},"end":{"line":154,"column":44}}},"12":{"name":"(anonymous_12)","line":162,"loc":{"start":{"line":162,"column":39},"end":{"line":162,"column":70}}},"13":{"name":"(anonymous_13)","line":172,"loc":{"start":{"line":172,"column":30},"end":{"line":172,"column":61}}},"14":{"name":"(anonymous_14)","line":180,"loc":{"start":{"line":180,"column":16},"end":{"line":180,"column":29}}},"15":{"name":"(anonymous_15)","line":184,"loc":{"start":{"line":184,"column":16},"end":{"line":184,"column":29}}},"16":{"name":"(anonymous_16)","line":210,"loc":{"start":{"line":210,"column":25},"end":{"line":210,"column":38}}},"17":{"name":"(anonymous_17)","line":220,"loc":{"start":{"line":220,"column":34},"end":{"line":220,"column":97}}},"18":{"name":"(anonymous_18)","line":235,"loc":{"start":{"line":235,"column":16},"end":{"line":235,"column":29}}},"19":{"name":"(anonymous_19)","line":238,"loc":{"start":{"line":238,"column":60},"end":{"line":238,"column":73}}},"20":{"name":"(anonymous_20)","line":239,"loc":{"start":{"line":239,"column":56},"end":{"line":239,"column":69}}},"21":{"name":"(anonymous_21)","line":245,"loc":{"start":{"line":245,"column":31},"end":{"line":245,"column":67}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":29,"column":33}},"2":{"start":{"line":32,"column":0},"end":{"line":37,"column":2}},"3":{"start":{"line":39,"column":0},"end":{"line":44,"column":2}},"4":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}},"5":{"start":{"line":51,"column":0},"end":{"line":107,"column":2}},"6":{"start":{"line":62,"column":8},"end":{"line":62,"column":28}},"7":{"start":{"line":63,"column":8},"end":{"line":63,"column":28}},"8":{"start":{"line":64,"column":8},"end":{"line":64,"column":45}},"9":{"start":{"line":65,"column":8},"end":{"line":65,"column":45}},"10":{"start":{"line":69,"column":12},"end":{"line":69,"column":30}},"11":{"start":{"line":70,"column":12},"end":{"line":70,"column":31}},"12":{"start":{"line":71,"column":12},"end":{"line":71,"column":75}},"13":{"start":{"line":71,"column":62},"end":{"line":71,"column":75}},"14":{"start":{"line":72,"column":12},"end":{"line":72,"column":67}},"15":{"start":{"line":72,"column":54},"end":{"line":72,"column":67}},"16":{"start":{"line":74,"column":12},"end":{"line":80,"column":13}},"17":{"start":{"line":75,"column":16},"end":{"line":78,"column":17}},"18":{"start":{"line":77,"column":20},"end":{"line":77,"column":33}},"19":{"start":{"line":79,"column":16},"end":{"line":79,"column":28}},"20":{"start":{"line":81,"column":12},"end":{"line":81,"column":25}},"21":{"start":{"line":85,"column":12},"end":{"line":85,"column":92}},"22":{"start":{"line":95,"column":12},"end":{"line":96,"column":29}},"23":{"start":{"line":104,"column":12},"end":{"line":104,"column":136}},"24":{"start":{"line":109,"column":0},"end":{"line":216,"column":2}},"25":{"start":{"line":115,"column":8},"end":{"line":115,"column":36}},"26":{"start":{"line":116,"column":8},"end":{"line":116,"column":40}},"27":{"start":{"line":117,"column":8},"end":{"line":117,"column":68}},"28":{"start":{"line":118,"column":8},"end":{"line":122,"column":15}},"29":{"start":{"line":120,"column":16},"end":{"line":121,"column":109}},"30":{"start":{"line":123,"column":8},"end":{"line":123,"column":58}},"31":{"start":{"line":124,"column":8},"end":{"line":124,"column":54}},"32":{"start":{"line":129,"column":12},"end":{"line":129,"column":51}},"33":{"start":{"line":134,"column":12},"end":{"line":136,"column":13}},"34":{"start":{"line":135,"column":16},"end":{"line":135,"column":58}},"35":{"start":{"line":138,"column":12},"end":{"line":140,"column":13}},"36":{"start":{"line":139,"column":16},"end":{"line":139,"column":33}},"37":{"start":{"line":142,"column":12},"end":{"line":145,"column":19}},"38":{"start":{"line":144,"column":20},"end":{"line":144,"column":62}},"39":{"start":{"line":147,"column":12},"end":{"line":147,"column":110}},"40":{"start":{"line":149,"column":12},"end":{"line":149,"column":118}},"41":{"start":{"line":151,"column":12},"end":{"line":151,"column":58}},"42":{"start":{"line":155,"column":12},"end":{"line":155,"column":36}},"43":{"start":{"line":155,"column":27},"end":{"line":155,"column":36}},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":37}},"45":{"start":{"line":156,"column":27},"end":{"line":156,"column":37}},"46":{"start":{"line":157,"column":12},"end":{"line":157,"column":36}},"47":{"start":{"line":157,"column":27},"end":{"line":157,"column":36}},"48":{"start":{"line":158,"column":12},"end":{"line":158,"column":37}},"49":{"start":{"line":158,"column":27},"end":{"line":158,"column":37}},"50":{"start":{"line":159,"column":12},"end":{"line":159,"column":21}},"51":{"start":{"line":164,"column":12},"end":{"line":164,"column":57}},"52":{"start":{"line":166,"column":12},"end":{"line":168,"column":13}},"53":{"start":{"line":167,"column":16},"end":{"line":167,"column":33}},"54":{"start":{"line":169,"column":12},"end":{"line":169,"column":24}},"55":{"start":{"line":174,"column":12},"end":{"line":176,"column":13}},"56":{"start":{"line":175,"column":16},"end":{"line":175,"column":72}},"57":{"start":{"line":178,"column":12},"end":{"line":178,"column":41}},"58":{"start":{"line":179,"column":12},"end":{"line":182,"column":19}},"59":{"start":{"line":181,"column":20},"end":{"line":181,"column":62}},"60":{"start":{"line":183,"column":12},"end":{"line":186,"column":19}},"61":{"start":{"line":185,"column":20},"end":{"line":185,"column":61}},"62":{"start":{"line":189,"column":12},"end":{"line":206,"column":13}},"63":{"start":{"line":190,"column":16},"end":{"line":190,"column":56}},"64":{"start":{"line":191,"column":16},"end":{"line":193,"column":17}},"65":{"start":{"line":192,"column":20},"end":{"line":192,"column":29}},"66":{"start":{"line":194,"column":16},"end":{"line":194,"column":127}},"67":{"start":{"line":195,"column":16},"end":{"line":195,"column":118}},"68":{"start":{"line":197,"column":16},"end":{"line":197,"column":127}},"69":{"start":{"line":198,"column":16},"end":{"line":198,"column":134}},"70":{"start":{"line":201,"column":16},"end":{"line":205,"column":17}},"71":{"start":{"line":202,"column":20},"end":{"line":204,"column":21}},"72":{"start":{"line":203,"column":24},"end":{"line":203,"column":150}},"73":{"start":{"line":208,"column":12},"end":{"line":208,"column":78}},"74":{"start":{"line":210,"column":12},"end":{"line":212,"column":14}},"75":{"start":{"line":211,"column":16},"end":{"line":211,"column":58}},"76":{"start":{"line":213,"column":12},"end":{"line":213,"column":67}},"77":{"start":{"line":218,"column":0},"end":{"line":269,"column":2}},"78":{"start":{"line":221,"column":12},"end":{"line":221,"column":31}},"79":{"start":{"line":222,"column":12},"end":{"line":222,"column":33}},"80":{"start":{"line":224,"column":12},"end":{"line":224,"column":34}},"81":{"start":{"line":227,"column":12},"end":{"line":232,"column":13}},"82":{"start":{"line":228,"column":16},"end":{"line":228,"column":63}},"83":{"start":{"line":229,"column":16},"end":{"line":229,"column":59}},"84":{"start":{"line":230,"column":16},"end":{"line":230,"column":41}},"85":{"start":{"line":231,"column":16},"end":{"line":231,"column":37}},"86":{"start":{"line":234,"column":12},"end":{"line":237,"column":19}},"87":{"start":{"line":236,"column":20},"end":{"line":236,"column":65}},"88":{"start":{"line":238,"column":12},"end":{"line":238,"column":91}},"89":{"start":{"line":238,"column":75},"end":{"line":238,"column":87}},"90":{"start":{"line":239,"column":12},"end":{"line":239,"column":87}},"91":{"start":{"line":239,"column":71},"end":{"line":239,"column":83}},"92":{"start":{"line":241,"column":12},"end":{"line":241,"column":88}},"93":{"start":{"line":241,"column":71},"end":{"line":241,"column":88}},"94":{"start":{"line":242,"column":12},"end":{"line":242,"column":144}},"95":{"start":{"line":246,"column":12},"end":{"line":246,"column":35}},"96":{"start":{"line":247,"column":12},"end":{"line":265,"column":13}},"97":{"start":{"line":248,"column":16},"end":{"line":248,"column":61}},"98":{"start":{"line":249,"column":16},"end":{"line":249,"column":94}},"99":{"start":{"line":250,"column":16},"end":{"line":250,"column":128}},"100":{"start":{"line":251,"column":16},"end":{"line":251,"column":128}},"101":{"start":{"line":253,"column":16},"end":{"line":264,"column":17}},"102":{"start":{"line":254,"column":20},"end":{"line":254,"column":72}},"103":{"start":{"line":255,"column":20},"end":{"line":255,"column":67}},"104":{"start":{"line":256,"column":20},"end":{"line":256,"column":132}},"105":{"start":{"line":258,"column":20},"end":{"line":263,"column":21}},"106":{"start":{"line":259,"column":24},"end":{"line":261,"column":25}},"107":{"start":{"line":260,"column":28},"end":{"line":260,"column":58}},"108":{"start":{"line":262,"column":24},"end":{"line":262,"column":30}},"109":{"start":{"line":266,"column":12},"end":{"line":266,"column":30}},"110":{"start":{"line":272,"column":0},"end":{"line":277,"column":1}},"111":{"start":{"line":273,"column":4},"end":{"line":273,"column":72}},"112":{"start":{"line":274,"column":4},"end":{"line":274,"column":70}},"113":{"start":{"line":275,"column":4},"end":{"line":275,"column":36}},"114":{"start":{"line":276,"column":4},"end":{"line":276,"column":52}}},"branchMap":{"1":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"2":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":36}},{"start":{"line":71,"column":40},"end":{"line":71,"column":60}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"4":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":32}},{"start":{"line":72,"column":36},"end":{"line":72,"column":52}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":16},"end":{"line":74,"column":40}},{"start":{"line":74,"column":44},"end":{"line":74,"column":68}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":16},"end":{"line":75,"column":16}},{"start":{"line":75,"column":16},"end":{"line":75,"column":16}}]},"8":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":21},"end":{"line":75,"column":46}},{"start":{"line":75,"column":50},"end":{"line":75,"column":99}},{"start":{"line":76,"column":24},"end":{"line":76,"column":49}},{"start":{"line":76,"column":53},"end":{"line":76,"column":102}}]},"9":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":52},"end":{"line":75,"column":73}},{"start":{"line":75,"column":77},"end":{"line":75,"column":98}}]},"10":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":55},"end":{"line":76,"column":76}},{"start":{"line":76,"column":80},"end":{"line":76,"column":101}}]},"11":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":20},"end":{"line":85,"column":65}},{"start":{"line":85,"column":70},"end":{"line":85,"column":91}}]},"12":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":22},"end":{"line":85,"column":41}},{"start":{"line":85,"column":45},"end":{"line":85,"column":64}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":12}},{"start":{"line":134,"column":12},"end":{"line":134,"column":12}}]},"14":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":12}},{"start":{"line":138,"column":12},"end":{"line":138,"column":12}}]},"15":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":12},"end":{"line":155,"column":12}},{"start":{"line":155,"column":12},"end":{"line":155,"column":12}}]},"16":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":12}},{"start":{"line":156,"column":12},"end":{"line":156,"column":12}}]},"17":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":12}},{"start":{"line":157,"column":12},"end":{"line":157,"column":12}}]},"18":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":158,"column":12}},{"start":{"line":158,"column":12},"end":{"line":158,"column":12}}]},"19":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":12}},{"start":{"line":166,"column":12},"end":{"line":166,"column":12}}]},"20":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":12},"end":{"line":174,"column":12}},{"start":{"line":174,"column":12},"end":{"line":174,"column":12}}]},"21":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":16},"end":{"line":191,"column":16}},{"start":{"line":191,"column":16},"end":{"line":191,"column":16}}]},"22":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":20},"end":{"line":202,"column":20}},{"start":{"line":202,"column":20},"end":{"line":202,"column":20}}]},"23":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":12},"end":{"line":241,"column":12}},{"start":{"line":241,"column":12},"end":{"line":241,"column":12}}]},"24":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":12},"end":{"line":247,"column":12}},{"start":{"line":247,"column":12},"end":{"line":247,"column":12}}]},"25":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":20},"end":{"line":258,"column":20}},{"start":{"line":258,"column":20},"end":{"line":258,"column":20}}]},"26":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":24},"end":{"line":259,"column":24}},{"start":{"line":259,"column":24},"end":{"line":259,"column":24}}]},"27":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":0},"end":{"line":272,"column":0}},{"start":{"line":272,"column":0},"end":{"line":272,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , _ = require(\"underscore\")","    , bs = require(\"binary-search-bounds\")","    , assert = require(\"assert\");","","//SCRIPT START","var _PartitionKeyRange = {","    //Partition Key Range Constants","    MinInclusive : \"minInclusive\",","    MaxExclusive : \"maxExclusive\",","    Id : \"id\"","};","","var _QueryRangeConstants = {","    //Partition Key Range Constants","    MinInclusive: \"minInclusive\",","    MaxExclusive: \"maxExclusive\",","    min: \"min\"","};","","var _Constants = {","    MinimumInclusiveEffectivePartitionKey: \"\",","    MaximumExclusiveEffectivePartitionKey: \"FF\",","};","","var QueryRange = Base.defineClass(","    /**","     * Represents a QueryRange. ","     * @constructor QueryRange","     * @param {string} rangeMin                - min","     * @param {string} rangeMin                - max","     * @param {boolean} isMinInclusive         - isMinInclusive","     * @param {boolean} isMaxInclusive         - isMaxInclusive","     * @ignore","     */","    function (rangeMin, rangeMax, isMinInclusive, isMaxInclusive) {","        this.min = rangeMin;","        this.max = rangeMax;","        this.isMinInclusive = isMinInclusive;","        this.isMaxInclusive = isMaxInclusive;","    }, ","    {","        overlaps: function (other) {","            var range1 = this;","            var range2 = other;","            if (range1 === undefined || range2 === undefined) return false;","            if (range1.isEmpty() || range2.isEmpty()) return false;","","            if (range1.min <= range2.max || range2.min <= range1.max) {","                if ((range1.min === range2.max && !(range1.isMinInclusive && range2.isMaxInclusive))","                    || (range2.min === range1.max && !(range2.isMinInclusive && range1.isMaxInclusive))) {","                    return false;","                }","                return true;","            }","            return false;","        },","","        isEmpty: function () {","            return (!(this.isMinInclusive && this.isMaxInclusive)) && this.min === this.max;","        }","    }, ","    {","        /**","         * Parse a QueryRange from a partitionKeyRange","         * @returns QueryRange","         * @ignore","         */","        parsePartitionKeyRange: function (partitionKeyRange) {","            return new QueryRange(partitionKeyRange[_PartitionKeyRange.MinInclusive], partitionKeyRange[_PartitionKeyRange.MaxExclusive],","                true, false);","        },","        /**","         * Parse a QueryRange from a dictionary","         * @returns QueryRange","         * @ignore","         */","        parseFromDict: function (queryRangeDict) {","            return new QueryRange(queryRangeDict.min, queryRangeDict.max, queryRangeDict.isMinInclusive, queryRangeDict.isMaxInclusive);","        }","    }",");","","var InMemoryCollectionRoutingMap = Base.defineClass(","    /**","     * Represents a InMemoryCollectionRoutingMap Object, Stores partition key ranges in an efficient way with some additional information and provides","     * convenience methods for working with set of ranges.","     */","    function (rangeById, rangeByInfo, orderedPartitionKeyRanges, orderedPartitionInfo, collectionUniqueId) {","        this._rangeById = rangeById;","        this._rangeByInfo = rangeByInfo;","        this._orderedPartitionKeyRanges = orderedPartitionKeyRanges;","        this._orderedRanges = orderedPartitionKeyRanges.map(","            function (pkr) {","                return new QueryRange(","                    pkr[_PartitionKeyRange.MinInclusive], pkr[_PartitionKeyRange.MaxExclusive], true, false);","            });","        this._orderedPartitionInfo = orderedPartitionInfo;","        this._collectionUniqueId = collectionUniqueId;","    },","    {","","        getOrderedParitionKeyRanges: function () {","            return this._orderedPartitionKeyRanges;","        },","","        getRangeByEffectivePartitionKey: function (effectivePartitionKeyValue) {","","            if (_Constants.MinimumInclusiveEffectivePartitionKey === effectivePartitionKeyValue) {","                return this._orderedPartitionKeyRanges[0];","            }","","            if (_Constants.MaximumExclusiveEffectivePartitionKey === effectivePartitionKeyValue) {","                return undefined;","            }","","            var sortedLow = this._orderedRanges.map(","                function (r) {","                    return { v: r.min, b: !r.isMinInclusive };","                });","","            var index = bs.le(sortedLow, { v: effectivePartitionKeyValue, b: true }, this._vbCompareFunction);","            // that's an error","            assert(index >=0, \"error in collection routing map, queried partition key is less than the start range.\");","           ","            return this._orderedPartitionKeyRanges[index];","        },","","        _vbCompareFunction: function (x, y) {","            if (x.v > y.v) return 1;","            if (x.v < y.v) return -1;","            if (x.b > y.b) return 1;","            if (x.b < y.b) return -1;","            return 0;","        },","","        getRangeByPartitionKeyRangeId: function (partitionKeyRangeId) {","","            var t = this._rangeById[partitionKeyRangeId];","","            if (t === undefined) {","                return undefined;","            }","            return t[0];","        },","","        getOverlappingRanges: function (providedQueryRanges) {","","            if (!_.isArray(providedQueryRanges)) {","                return this.getOverlappingRanges([providedQueryRanges]);","            }","            ","            var minToPartitionRange = {};","            var sortedLow = this._orderedRanges.map(","                function (r) {","                    return { v: r.min, b: !r.isMinInclusive };","                });","            var sortedHigh = this._orderedRanges.map(","                function (r) {","                    return { v: r.max, b: r.isMaxInclusive };","                });","","            // this for loop doesn't invoke any async callback","            for (var i = 0; i < providedQueryRanges.length; i++) {","                var queryRange = providedQueryRanges[i];","                if (queryRange.isEmpty()) {","                    continue;","                }","                var minIndex = bs.le(sortedLow, { v: queryRange.min, b: !queryRange.isMinInclusive }, this._vbCompareFunction);","                assert(minIndex >= 0, \"error in collection routing map, queried value is less than the start range.\");","","                var maxIndex = bs.ge(sortedHigh, { v: queryRange.max, b: queryRange.isMaxInclusive }, this._vbCompareFunction);","                assert(maxIndex < sortedHigh.length, \"error in collection routing map, queried value is greater than the end range.\");","","                // the for loop doesn't invoke any async callback","                for (var j = minIndex; j < maxIndex + 1; j++) {","                    if (queryRange.overlaps(this._orderedRanges[j])) {","                        minToPartitionRange[this._orderedPartitionKeyRanges[j][_PartitionKeyRange.MinInclusive]] = this._orderedPartitionKeyRanges[j];","                    }","                } ","            }","","            var overlappingPartitionKeyRanges = _.values(minToPartitionRange);","","            var getKey = function (r) {","                return r[_PartitionKeyRange.MinInclusive];","            };","            return _.sortBy(overlappingPartitionKeyRanges, getKey);","        }","    }",");","","var CollectionRoutingMapFactory = Base.defineClass(undefined, undefined,","    {","        createCompleteRoutingMap: function (partitionKeyRangeInfoTuppleList, collectionUniqueId) {","            var rangeById = {};","            var rangeByInfo = {};","","            var sortedRanges = [];","","            // the for loop doesn't invoke any async callback","            for (var index = 0; index < partitionKeyRangeInfoTuppleList.length; index++) {","                var r = partitionKeyRangeInfoTuppleList[index];","                rangeById[r[0][_PartitionKeyRange.Id]] = r;","                rangeByInfo[r[1]] = r[0];","                sortedRanges.push(r);","            }","","            sortedRanges = _.sortBy(sortedRanges,","                function (r) {","                    return r[0][_PartitionKeyRange.MinInclusive];","                });","            var partitionKeyOrderedRange = sortedRanges.map(function (r) { return r[0]; });","            var orderedPartitionInfo = sortedRanges.map(function (r) { return r[1]; });","","            if (!this._isCompleteSetOfRange(partitionKeyOrderedRange)) return undefined;","            return new InMemoryCollectionRoutingMap(rangeById, rangeByInfo, partitionKeyOrderedRange, orderedPartitionInfo, collectionUniqueId);","        },","","        _isCompleteSetOfRange: function (partitionKeyOrderedRange) {","            var isComplete = false;","            if (partitionKeyOrderedRange.length > 0) {","                var firstRange = partitionKeyOrderedRange[0];","                var lastRange = partitionKeyOrderedRange[partitionKeyOrderedRange.length - 1];","                isComplete = (firstRange[_PartitionKeyRange.MinInclusive] === _Constants.MinimumInclusiveEffectivePartitionKey);","                isComplete &= (lastRange[_PartitionKeyRange.MaxExclusive] === _Constants.MaximumExclusiveEffectivePartitionKey);","","                for (var i = 1; i < partitionKeyOrderedRange.length; i++) {","                    var previousRange = partitionKeyOrderedRange[i - 1];","                    var currentRange = partitionKeyOrderedRange[i];","                    isComplete &= (previousRange[_PartitionKeyRange.MaxExclusive] == currentRange[_PartitionKeyRange.MinInclusive]);","","                    if (!isComplete) {","                        if (previousRange[_PartitionKeyRange.MaxExclusive] > currentRange[_PartitionKeyRange.MinInclusive] ) {","                            throw Error(\"Ranges overlap\");","                        }","                        break;","                    }","                }","            }","            return isComplete;","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    exports.InMemoryCollectionRoutingMap = InMemoryCollectionRoutingMap;","    exports.CollectionRoutingMapFactory = CollectionRoutingMapFactory;","    exports.QueryRange = QueryRange;","    exports._PartitionKeyRange = _PartitionKeyRange;","}"],"l":{"26":1,"32":1,"39":1,"46":1,"51":1,"62":0,"63":0,"64":0,"65":0,"69":0,"70":0,"71":0,"72":0,"74":0,"75":0,"77":0,"79":0,"81":0,"85":0,"95":0,"104":0,"109":1,"115":0,"116":0,"117":0,"118":0,"120":0,"123":0,"124":0,"129":0,"134":0,"135":0,"138":0,"139":0,"142":0,"144":0,"147":0,"149":0,"151":0,"155":0,"156":0,"157":0,"158":0,"159":0,"164":0,"166":0,"167":0,"169":0,"174":0,"175":0,"178":0,"179":0,"181":0,"183":0,"185":0,"189":0,"190":0,"191":0,"192":0,"194":0,"195":0,"197":0,"198":0,"201":0,"202":0,"203":0,"208":0,"210":0,"211":0,"213":0,"218":1,"221":0,"222":0,"224":0,"227":0,"228":0,"229":0,"230":0,"231":0,"234":0,"236":0,"238":0,"239":0,"241":0,"242":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"253":0,"254":0,"255":0,"256":0,"258":0,"259":0,"260":0,"262":0,"266":0,"272":1,"273":1,"274":1,"275":1,"276":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/routing/partitionKeyRangeCache.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/routing/partitionKeyRangeCache.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":41,"loc":{"start":{"line":41,"column":4},"end":{"line":41,"column":30}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":33},"end":{"line":53,"column":69}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":64},"end":{"line":61,"column":76}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":59},"end":{"line":65,"column":85}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":46},"end":{"line":71,"column":59}}},"6":{"name":"(anonymous_6)","line":101,"loc":{"start":{"line":101,"column":30},"end":{"line":101,"column":79}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":41},"end":{"line":102,"column":78}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":27,"column":71}},"2":{"start":{"line":29,"column":0},"end":{"line":29,"column":83}},"3":{"start":{"line":32,"column":0},"end":{"line":110,"column":2}},"4":{"start":{"line":42,"column":8},"end":{"line":42,"column":45}},"5":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"6":{"start":{"line":44,"column":8},"end":{"line":44,"column":43}},"7":{"start":{"line":54,"column":12},"end":{"line":54,"column":67}},"8":{"start":{"line":55,"column":12},"end":{"line":55,"column":94}},"9":{"start":{"line":57,"column":12},"end":{"line":57,"column":93}},"10":{"start":{"line":58,"column":12},"end":{"line":91,"column":13}},"11":{"start":{"line":60,"column":16},"end":{"line":60,"column":32}},"12":{"start":{"line":61,"column":16},"end":{"line":84,"column":18}},"13":{"start":{"line":62,"column":20},"end":{"line":62,"column":101}},"14":{"start":{"line":63,"column":20},"end":{"line":83,"column":21}},"15":{"start":{"line":64,"column":24},"end":{"line":64,"column":116}},"16":{"start":{"line":65,"column":24},"end":{"line":77,"column":27}},"17":{"start":{"line":66,"column":28},"end":{"line":68,"column":29}},"18":{"start":{"line":67,"column":32},"end":{"line":67,"column":64}},"19":{"start":{"line":70,"column":28},"end":{"line":72,"column":46}},"20":{"start":{"line":71,"column":61},"end":{"line":71,"column":78}},"21":{"start":{"line":74,"column":28},"end":{"line":74,"column":105}},"22":{"start":{"line":75,"column":28},"end":{"line":75,"column":45}},"23":{"start":{"line":76,"column":28},"end":{"line":76,"column":77}},"24":{"start":{"line":81,"column":24},"end":{"line":81,"column":41}},"25":{"start":{"line":82,"column":24},"end":{"line":82,"column":114}},"26":{"start":{"line":87,"column":16},"end":{"line":87,"column":73}},"27":{"start":{"line":90,"column":16},"end":{"line":90,"column":58}},"28":{"start":{"line":102,"column":12},"end":{"line":107,"column":31}},"29":{"start":{"line":103,"column":16},"end":{"line":105,"column":17}},"30":{"start":{"line":104,"column":20},"end":{"line":104,"column":52}},"31":{"start":{"line":106,"column":16},"end":{"line":106,"column":99}},"32":{"start":{"line":113,"column":0},"end":{"line":115,"column":1}},"33":{"start":{"line":114,"column":4},"end":{"line":114,"column":44}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":12}},{"start":{"line":58,"column":12},"end":{"line":58,"column":12}}]},"2":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":20}},{"start":{"line":63,"column":20},"end":{"line":63,"column":20}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":28},"end":{"line":66,"column":28}},{"start":{"line":66,"column":28},"end":{"line":66,"column":28}}]},"4":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":16},"end":{"line":103,"column":16}},{"start":{"line":103,"column":16},"end":{"line":103,"column":16}}]},"5":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":0},"end":{"line":113,"column":0}},{"start":{"line":113,"column":0},"end":{"line":113,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , CollectionRoutingMap = require(\"./inMemoryCollectionRoutingMap\");","","var CollectionRoutingMapFactory = CollectionRoutingMap.CollectionRoutingMapFactory;","","//SCRIPT START","var PartitionKeyRangeCache = Base.defineClass(","    ","    /**","     * Represents a PartitionKeyRangeCache. PartitionKeyRangeCache provides list of effective partition key ranges for a collection.","     * This implementation loads and caches the collection routing map per collection on demand.","     * @constructor PartitionKeyRangeCache","     * @param {object} documentclient                - The documentclient object.","     * @ignore","     */","    function (documentclient) {","        this.documentclient = documentclient;","        this.collectionRoutingMapByCollectionId = {};","        this.sem = require(\"semaphore\")(1);","    },","    {","        /**","         * Finds or Instantiates the requested Collection Routing Map and invokes callback","         * @param {callback} callback                - Function to execute for the collection routing map. the function takes two parameters error, collectionRoutingMap.","         * @param {string} collectionLink            - Requested collectionLink","         * @ignore","         */","        _onCollectionRoutingMap: function (callback, collectionLink) {","            var isNameBased = Base.isLinkNameBased(collectionLink);","            var collectionId = this.documentclient.getIdFromLink(collectionLink, isNameBased);","","            var collectionRoutingMap = this.collectionRoutingMapByCollectionId[collectionId];","            if (collectionRoutingMap === undefined) {","                // attempt to consturct collection routing map","                var that = this;","                var semaphorizedFuncCollectionMapInstantiator = function () {","                    var collectionRoutingMap = that.collectionRoutingMapByCollectionId[collectionId];","                    if (collectionRoutingMap === undefined) {","                        var partitionKeyRangesIterator = that.documentclient.readPartitionKeyRanges(collectionLink);","                        partitionKeyRangesIterator.toArray(function (err, resources) {","                            if (err) {","                                return callback(err, undefined);","                            }","","                            collectionRoutingMap = CollectionRoutingMapFactory.createCompleteRoutingMap(","                                resources.map(function (r) { return [r, true]; }),","                                collectionId);","","                            that.collectionRoutingMapByCollectionId[collectionId] = collectionRoutingMap;","                            that.sem.leave();","                            return callback(undefined, collectionRoutingMap);","                        });","","                    } else {","                        // sanity gaurd ","                        that.sem.leave();","                        return callback(undefined, collectionRoutingMap.getOverlappingRanges(partitionKeyRanges));","                    }","                };","","                // We want only one attempt to construct collectionRoutingMap so we pass the consturction in the semaphore take","                this.sem.take(semaphorizedFuncCollectionMapInstantiator);","","            } else {","                callback(undefined, collectionRoutingMap);","            }","        }, ","","        /**","         * Given the query ranges and a collection, invokes the callback on the list of overlapping partition key ranges","         * @param {callback} callback - Function execute on the overlapping partition key ranges result, takes two parameters error, partition key ranges","         * @param collectionLink","         * @param queryRanges","         * @ignore","         */","        getOverlappingRanges: function (callback, collectionLink, queryRanges) {","            this._onCollectionRoutingMap(function (err, collectionRoutingMap) {","                if (err) {","                    return callback(err, undefined);","                }","                return callback(undefined, collectionRoutingMap.getOverlappingRanges(queryRanges));","            }, collectionLink);","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = PartitionKeyRangeCache;","}"],"l":{"26":1,"29":1,"32":1,"42":0,"43":0,"44":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"70":0,"71":0,"74":0,"75":0,"76":0,"81":0,"82":0,"87":0,"90":0,"102":0,"103":0,"104":0,"106":0,"113":1,"114":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/documentProducer.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/documentProducer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":1,"82":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":42,"column":78}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":29},"end":{"line":55,"column":58}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":20},"end":{"line":61,"column":38}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":20},"end":{"line":62,"column":44}}},"5":{"name":"(anonymous_5)","line":76,"loc":{"start":{"line":76,"column":14},"end":{"line":76,"column":26}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":35},"end":{"line":85,"column":47}}},"7":{"name":"(anonymous_7)","line":95,"loc":{"start":{"line":95,"column":18},"end":{"line":95,"column":38}}},"8":{"name":"(anonymous_8)","line":97,"loc":{"start":{"line":97,"column":51},"end":{"line":97,"column":72}}},"9":{"name":"(anonymous_9)","line":109,"loc":{"start":{"line":109,"column":17},"end":{"line":109,"column":37}}},"10":{"name":"(anonymous_10)","line":111,"loc":{"start":{"line":111,"column":50},"end":{"line":111,"column":71}}},"11":{"name":"(anonymous_11)","line":126,"loc":{"start":{"line":126,"column":49},"end":{"line":126,"column":61}}},"12":{"name":"(anonymous_12)","line":127,"loc":{"start":{"line":127,"column":19},"end":{"line":127,"column":49}}},"13":{"name":"(anonymous_13)","line":139,"loc":{"start":{"line":139,"column":33},"end":{"line":139,"column":54}}},"14":{"name":"(anonymous_14)","line":141,"loc":{"start":{"line":141,"column":19},"end":{"line":141,"column":49}}},"15":{"name":"(anonymous_15)","line":150,"loc":{"start":{"line":150,"column":4},"end":{"line":150,"column":25}}},"16":{"name":"(anonymous_16)","line":163,"loc":{"start":{"line":163,"column":26},"end":{"line":163,"column":42}}},"17":{"name":"(anonymous_17)","line":169,"loc":{"start":{"line":169,"column":26},"end":{"line":169,"column":42}}},"18":{"name":"(anonymous_18)","line":175,"loc":{"start":{"line":175,"column":26},"end":{"line":175,"column":42}}},"19":{"name":"(anonymous_19)","line":182,"loc":{"start":{"line":182,"column":17},"end":{"line":182,"column":47}}},"20":{"name":"(anonymous_20)","line":206,"loc":{"start":{"line":206,"column":22},"end":{"line":206,"column":60}}},"21":{"name":"(anonymous_21)","line":228,"loc":{"start":{"line":228,"column":28},"end":{"line":228,"column":66}}},"22":{"name":"(anonymous_22)","line":234,"loc":{"start":{"line":234,"column":30},"end":{"line":234,"column":52}}},"23":{"name":"(anonymous_23)","line":245,"loc":{"start":{"line":245,"column":17},"end":{"line":245,"column":40}}},"24":{"name":"(anonymous_24)","line":254,"loc":{"start":{"line":254,"column":25},"end":{"line":254,"column":40}}},"25":{"name":"(anonymous_25)","line":258,"loc":{"start":{"line":258,"column":18},"end":{"line":258,"column":43}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":29,"column":29}},"2":{"start":{"line":32,"column":0},"end":{"line":146,"column":2}},"3":{"start":{"line":43,"column":8},"end":{"line":43,"column":45}},"4":{"start":{"line":44,"column":8},"end":{"line":44,"column":45}},"5":{"start":{"line":45,"column":8},"end":{"line":45,"column":27}},"6":{"start":{"line":46,"column":8},"end":{"line":46,"column":63}},"7":{"start":{"line":47,"column":8},"end":{"line":47,"column":45}},"8":{"start":{"line":49,"column":8},"end":{"line":49,"column":63}},"9":{"start":{"line":50,"column":8},"end":{"line":50,"column":92}},"10":{"start":{"line":51,"column":8},"end":{"line":51,"column":80}},"11":{"start":{"line":52,"column":8},"end":{"line":52,"column":25}},"12":{"start":{"line":54,"column":8},"end":{"line":54,"column":24}},"13":{"start":{"line":55,"column":8},"end":{"line":67,"column":10}},"14":{"start":{"line":56,"column":12},"end":{"line":66,"column":56}},"15":{"start":{"line":61,"column":40},"end":{"line":61,"column":64}},"16":{"start":{"line":62,"column":46},"end":{"line":62,"column":58}},"17":{"start":{"line":68,"column":8},"end":{"line":68,"column":120}},"18":{"start":{"line":77,"column":12},"end":{"line":77,"column":44}},"19":{"start":{"line":86,"column":12},"end":{"line":86,"column":48}},"20":{"start":{"line":96,"column":12},"end":{"line":96,"column":28}},"21":{"start":{"line":97,"column":12},"end":{"line":100,"column":15}},"22":{"start":{"line":98,"column":16},"end":{"line":98,"column":53}},"23":{"start":{"line":99,"column":16},"end":{"line":99,"column":36}},"24":{"start":{"line":110,"column":12},"end":{"line":110,"column":28}},"25":{"start":{"line":111,"column":12},"end":{"line":115,"column":15}},"26":{"start":{"line":113,"column":16},"end":{"line":113,"column":48}},"27":{"start":{"line":114,"column":16},"end":{"line":114,"column":36}},"28":{"start":{"line":127,"column":12},"end":{"line":131,"column":14}},"29":{"start":{"line":128,"column":16},"end":{"line":128,"column":77}},"30":{"start":{"line":129,"column":16},"end":{"line":129,"column":77}},"31":{"start":{"line":130,"column":16},"end":{"line":130,"column":55}},"32":{"start":{"line":140,"column":12},"end":{"line":140,"column":78}},"33":{"start":{"line":141,"column":12},"end":{"line":143,"column":14}},"34":{"start":{"line":142,"column":16},"end":{"line":142,"column":62}},"35":{"start":{"line":148,"column":0},"end":{"line":264,"column":2}},"36":{"start":{"line":151,"column":8},"end":{"line":151,"column":35}},"37":{"start":{"line":152,"column":8},"end":{"line":152,"column":119}},"38":{"start":{"line":154,"column":8},"end":{"line":179,"column":11}},"39":{"start":{"line":164,"column":20},"end":{"line":164,"column":59}},"40":{"start":{"line":170,"column":20},"end":{"line":170,"column":59}},"41":{"start":{"line":176,"column":20},"end":{"line":176,"column":59}},"42":{"start":{"line":183,"column":12},"end":{"line":183,"column":73}},"43":{"start":{"line":184,"column":12},"end":{"line":184,"column":73}},"44":{"start":{"line":188,"column":12},"end":{"line":188,"column":74}},"45":{"start":{"line":191,"column":12},"end":{"line":201,"column":13}},"46":{"start":{"line":193,"column":16},"end":{"line":193,"column":96}},"47":{"start":{"line":194,"column":16},"end":{"line":200,"column":17}},"48":{"start":{"line":195,"column":20},"end":{"line":199,"column":21}},"49":{"start":{"line":196,"column":24},"end":{"line":196,"column":39}},"50":{"start":{"line":197,"column":27},"end":{"line":199,"column":21}},"51":{"start":{"line":198,"column":24},"end":{"line":198,"column":40}},"52":{"start":{"line":203,"column":12},"end":{"line":203,"column":85}},"53":{"start":{"line":207,"column":12},"end":{"line":207,"column":62}},"54":{"start":{"line":208,"column":12},"end":{"line":208,"column":62}},"55":{"start":{"line":209,"column":12},"end":{"line":209,"column":46}},"56":{"start":{"line":211,"column":12},"end":{"line":214,"column":13}},"57":{"start":{"line":213,"column":16},"end":{"line":213,"column":31}},"58":{"start":{"line":217,"column":12},"end":{"line":220,"column":13}},"59":{"start":{"line":219,"column":16},"end":{"line":219,"column":25}},"60":{"start":{"line":222,"column":12},"end":{"line":222,"column":67}},"61":{"start":{"line":223,"column":12},"end":{"line":223,"column":88}},"62":{"start":{"line":225,"column":12},"end":{"line":225,"column":42}},"63":{"start":{"line":229,"column":12},"end":{"line":229,"column":51}},"64":{"start":{"line":230,"column":12},"end":{"line":230,"column":51}},"65":{"start":{"line":231,"column":12},"end":{"line":231,"column":95}},"66":{"start":{"line":235,"column":12},"end":{"line":235,"column":109}},"67":{"start":{"line":236,"column":12},"end":{"line":236,"column":127}},"68":{"start":{"line":238,"column":12},"end":{"line":242,"column":13}},"69":{"start":{"line":239,"column":16},"end":{"line":239,"column":50}},"70":{"start":{"line":240,"column":16},"end":{"line":240,"column":50}},"71":{"start":{"line":241,"column":16},"end":{"line":241,"column":102}},"72":{"start":{"line":246,"column":12},"end":{"line":248,"column":13}},"73":{"start":{"line":247,"column":16},"end":{"line":247,"column":33}},"74":{"start":{"line":249,"column":12},"end":{"line":249,"column":52}},"75":{"start":{"line":250,"column":12},"end":{"line":250,"column":106}},"76":{"start":{"line":251,"column":12},"end":{"line":251,"column":24}},"77":{"start":{"line":255,"column":12},"end":{"line":255,"column":39}},"78":{"start":{"line":259,"column":12},"end":{"line":261,"column":13}},"79":{"start":{"line":260,"column":16},"end":{"line":260,"column":33}},"80":{"start":{"line":267,"column":0},"end":{"line":270,"column":1}},"81":{"start":{"line":268,"column":4},"end":{"line":268,"column":38}},"82":{"start":{"line":269,"column":4},"end":{"line":269,"column":89}}},"branchMap":{"1":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":33},"end":{"line":130,"column":34}},{"start":{"line":130,"column":38},"end":{"line":130,"column":52}}]},"2":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":46},"end":{"line":130,"column":47}},{"start":{"line":130,"column":50},"end":{"line":130,"column":52}}]},"3":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":37},"end":{"line":164,"column":38}},{"start":{"line":164,"column":42},"end":{"line":164,"column":56}}]},"4":{"line":164,"type":"cond-expr","locations":[{"start":{"line":164,"column":50},"end":{"line":164,"column":51}},{"start":{"line":164,"column":54},"end":{"line":164,"column":56}}]},"5":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":37},"end":{"line":170,"column":38}},{"start":{"line":170,"column":42},"end":{"line":170,"column":56}}]},"6":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":50},"end":{"line":170,"column":51}},{"start":{"line":170,"column":54},"end":{"line":170,"column":56}}]},"7":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":37},"end":{"line":176,"column":38}},{"start":{"line":176,"column":42},"end":{"line":176,"column":56}}]},"8":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":50},"end":{"line":176,"column":51}},{"start":{"line":176,"column":54},"end":{"line":176,"column":56}}]},"9":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":16},"end":{"line":194,"column":16}},{"start":{"line":194,"column":16},"end":{"line":194,"column":16}}]},"10":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":20},"end":{"line":195,"column":20}},{"start":{"line":195,"column":20},"end":{"line":195,"column":20}}]},"11":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":27},"end":{"line":197,"column":27}},{"start":{"line":197,"column":27},"end":{"line":197,"column":27}}]},"12":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":12},"end":{"line":211,"column":12}},{"start":{"line":211,"column":12},"end":{"line":211,"column":12}}]},"13":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":12},"end":{"line":217,"column":12}},{"start":{"line":217,"column":12},"end":{"line":217,"column":12}}]},"14":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":17},"end":{"line":217,"column":70}},{"start":{"line":217,"column":76},"end":{"line":217,"column":127}}]},"15":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":12},"end":{"line":246,"column":12}},{"start":{"line":246,"column":12},"end":{"line":246,"column":12}}]},"16":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":12},"end":{"line":259,"column":12}},{"start":{"line":259,"column":12},"end":{"line":259,"column":12}}]},"17":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":0},"end":{"line":267,"column":0}},{"start":{"line":267,"column":0},"end":{"line":267,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , DefaultQueryExecutionContext = require(\"./defaultQueryExecutionContext\")","    , assert = require(\"assert\")","    , util = require(\"util\");","","//SCRIPT START","var DocumentProducer = Base.defineClass(","    /**","     * Provides the Target Partition Range Query Execution Context.","     * @constructor DocumentProducer","     * @param {DocumentClient} documentclient        - The service endpoint to use to create the client.","     * @param {String} collectionLink                - Represents collection link","     * @param {SqlQuerySpec | string} query          - A SQL query.","     * @param {object} targetPartitionKeyRange       - Query Target Partition key Range","     * @ignore","     */","    function (documentclient, collectionLink, query, targetPartitionKeyRange) {","        this.documentclient = documentclient;","        this.collectionLink = collectionLink;","        this.query = query;","        this.targetPartitionKeyRange = targetPartitionKeyRange;","        this.bufferedCurrentItem = undefined;","","        var isNameBased = Base.isLinkNameBased(collectionLink);","        var path = this.documentclient.getPathFromLink(collectionLink, \"docs\", isNameBased);","        var id = this.documentclient.getIdFromLink(collectionLink, isNameBased);","        var options = {};","","        var that = this;","        var fetchFunction =  function (options, callback) {","            that.documentclient.queryFeed.call(documentclient,","                documentclient,","                    path,","                    \"docs\",","                    id,","                    function (result) { return result.Documents; },","                    function (parent, body) { return body; },","                    query,","                    options,","                    callback,","                    that.targetPartitionKeyRange[\"id\"]);","        };","        this.internalExecutionContext = new DefaultQueryExecutionContext(documentclient, query, options, fetchFunction);","    },","    {","        /**","         * Synchronously gives the bufferend current item if any","         * @returns {Object}       - buffered current item if any","         * @ignore","         */","        peek: function () {","            return this.bufferedCurrentItem;","        },","","        /**","         * Synchronously gives the bufferend current item if any","         * @returns {Object}       - buffered current item if any","         * @ignore","         */","        getTargetParitionKeyRange: function () {","            return this.targetPartitionKeyRange;","        },","","        /**","        * Execute a provided function on the next element in the DocumentProducer.","        * @memberof DocumentProducer","        * @instance","        * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","        */","        nextItem: function (callback) {","            var that = this;","            this.internalExecutionContext.nextItem(function (err, item) {","                that.bufferedCurrentItem = undefined;","                callback(err, item);","            });","        },","","        /**","         * Retrieve the current element on the DocumentProducer.","         * @memberof DocumentProducer","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function (callback) {","            var that = this;","            this.internalExecutionContext.current(function (err, item) {","                // sets the buffered current item for non async access","                that.bufferedCurrentItem = item;","                callback(err, item);","            });","        },","    },","","    {","","        /**","         * Provides a Comparator for document producers using the min value of the corresponding target partition.","         * @returns {object}        - Comparator Function","         * @ignore","         */","        createTargetPartitionKeyRangeComparator: function () {","            return function (docProd1, docProd2) {","                var a = docProd1.getTargetParitionKeyRange()['minInclusive'];","                var b = docProd2.getTargetParitionKeyRange()['minInclusive'];","                return (a == b ? 0 : (a > b ? 1 : -1));","            };","        },","","        /**","         * Provides a Comparator for document producers which respects orderby sort order.","         * @returns {object}        - Comparator Function","         * @ignore","         */","        createOrderByComparator: function (sortOrder) {","            var comparator = new OrderByDocumentProducerComparator(sortOrder);","            return function (docProd1, docProd2) {","                return comparator.compare(docProd1, docProd2);","            };","        }","    }",");","","var OrderByDocumentProducerComparator = Base.defineClass(","","    function (sortOrder) {","        this.sortOrder = sortOrder;","        this.targetPartitionKeyRangeDocProdComparator = new DocumentProducer.createTargetPartitionKeyRangeComparator();","","        this._typeOrdComparator = Object.freeze({","            NoValue: {","                ord: 0","            },","            undefined: {","                ord: 1","            },","            boolean: {","                ord: 2,","                compFunc: function (a, b) {","                    return (a == b ? 0 : (a > b ? 1 : -1));","                }","            },","            number: {","                ord: 4,","                compFunc: function (a, b) {","                    return (a == b ? 0 : (a > b ? 1 : -1));","                }","            },","            string: {","                ord: 5,","                compFunc: function (a, b) {","                    return (a == b ? 0 : (a > b ? 1 : -1));","                }","            }","        });","    },","    {","        compare: function (docProd1, docProd2) {","            var orderByItemsRes1 = this.getOrderByItems(docProd1.peek());","            var orderByItemsRes2 = this.getOrderByItems(docProd2.peek());","","            // validate order by items and types","            // TODO: once V1 order by on different types is fixed this need to change","            this.validateOrderByItems(orderByItemsRes1, orderByItemsRes2);","","            // no async call in the for loop","            for (var i = 0; i < orderByItemsRes1.length; i++) {","                // compares the orderby items one by one","                var compRes = this.compareOrderByItem(orderByItemsRes1[i], orderByItemsRes2[i]);","                if (compRes !== 0) {","                    if (this.sortOrder[i] === 'Ascending') {","                        return compRes;","                    } else if (this.sortOrder[i] === 'Descending') {","                        return -compRes;","                    }","                }","            }","","            return this.targetPartitionKeyRangeDocProdComparator(docProd1, docProd2);","        },","","        compareValue: function (item1, type1, item2, type2) {","            var type1Ord = this._typeOrdComparator[type1].ord;","            var type2Ord = this._typeOrdComparator[type2].ord;","            var typeCmp = type1Ord - type2Ord;","","            if (typeCmp !== 0) {","                // if the types are different, use type ordinal","                return typeCmp;","            }","","            // both are of the same type ","            if ((type1Ord === this._typeOrdComparator['undefined'].ord) || (type1Ord === this._typeOrdComparator['NoValue'].ord)) {","                // if both types are undefined or Null they are equal","                return 0;","            }","","            var compFunc = this._typeOrdComparator[type1].compFunc;","            assert.notEqual(compFunc, undefined, \"cannot find the comparison function\");","            // same type and type is defined compare the items","            return compFunc(item1, item2);","        },","","        compareOrderByItem: function (orderByItem1, orderByItem2) {","            var type1 = this.getType(orderByItem1);","            var type2 = this.getType(orderByItem2);","            return this.compareValue(orderByItem1['item'], type1, orderByItem2['item'], type2);","        },","","        validateOrderByItems: function (res1, res2) {","            this._throwIf(res1.length != res2.length, util.format(\"Expected %s, but got %s.\", type1, type2));","            this._throwIf(res1.length != this.sortOrder.length, 'orderByItems cannot have a different size than sort orders.');","","            for (var i = 0; i < this.sortOrder.length; i++) {","                var type1 = this.getType(res1[i]);","                var type2 = this.getType(res2[i]);","                this._throwIf(type1 !== type2, util.format(\"Expected %s, but got %s.\", type1, type2));","            }","        },","","        getType: function (orderByItem) {","            if (!'item' in orderByItem) {","                return 'NoValue';","            }","            var type = typeof (orderByItem['item']);","            this._throwIf(! type in this._typeOrdComparator, util.format(\"unrecognizable type %s\", type));","            return type;","        },","","        getOrderByItems: function (res) {","            return res['orderByItems'];","        },","","        _throwIf: function(condition, msg) {","            if (condition) {","                throw Error(msg);","            }","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = DocumentProducer;","    module.exports.OrderByDocumentProducerComparator = OrderByDocumentProducerComparator;","}"],"l":{"26":1,"32":1,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"61":0,"62":0,"68":0,"77":0,"86":0,"96":0,"97":0,"98":0,"99":0,"110":0,"111":0,"113":0,"114":0,"127":0,"128":0,"129":0,"130":0,"140":0,"141":0,"142":0,"148":1,"151":0,"152":0,"154":0,"164":0,"170":0,"176":0,"183":0,"184":0,"188":0,"191":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"203":0,"207":0,"208":0,"209":0,"211":0,"213":0,"217":0,"219":0,"222":0,"223":0,"225":0,"229":0,"230":0,"231":0,"235":0,"236":0,"238":0,"239":0,"240":0,"241":0,"246":0,"247":0,"249":0,"250":0,"251":0,"255":0,"259":0,"260":0,"267":1,"268":1,"269":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/partitionedQueryExecutionContextInfoParser.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/partitionedQueryExecutionContextInfoParser.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":43,"loc":{"start":{"line":43,"column":29},"end":{"line":43,"column":70}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":26},"end":{"line":46,"column":67}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":22},"end":{"line":49,"column":63}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":25},"end":{"line":52,"column":66}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":18},"end":{"line":55,"column":59}}},"6":{"name":"(anonymous_6)","line":58,"loc":{"start":{"line":58,"column":18},"end":{"line":58,"column":65}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":28,"column":29}},"2":{"start":{"line":31,"column":0},"end":{"line":38,"column":2}},"3":{"start":{"line":40,"column":0},"end":{"line":74,"column":2}},"4":{"start":{"line":44,"column":12},"end":{"line":44,"column":109}},"5":{"start":{"line":47,"column":12},"end":{"line":47,"column":106}},"6":{"start":{"line":50,"column":12},"end":{"line":50,"column":102}},"7":{"start":{"line":53,"column":12},"end":{"line":53,"column":104}},"8":{"start":{"line":56,"column":12},"end":{"line":56,"column":98}},"9":{"start":{"line":59,"column":12},"end":{"line":59,"column":53}},"10":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"11":{"start":{"line":61,"column":16},"end":{"line":61,"column":34}},"12":{"start":{"line":63,"column":12},"end":{"line":64,"column":84}},"13":{"start":{"line":65,"column":12},"end":{"line":70,"column":13}},"14":{"start":{"line":66,"column":16},"end":{"line":66,"column":41}},"15":{"start":{"line":67,"column":16},"end":{"line":69,"column":17}},"16":{"start":{"line":68,"column":20},"end":{"line":68,"column":37}},"17":{"start":{"line":71,"column":12},"end":{"line":71,"column":24}},"18":{"start":{"line":77,"column":0},"end":{"line":79,"column":1}},"19":{"start":{"line":78,"column":4},"end":{"line":78,"column":64}}},"branchMap":{"1":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":12}},{"start":{"line":60,"column":12},"end":{"line":60,"column":12}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":16}},{"start":{"line":67,"column":16},"end":{"line":67,"column":16}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":0},"end":{"line":77,"column":0}},{"start":{"line":77,"column":0},"end":{"line":77,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , assert = require(\"assert\")","    , util = require(\"util\");","","//SCRIPT START","var PartitionedQueryContants = {","    QueryInfoPath : 'queryInfo',","    TopPath: ['queryInfo', 'top'],","    OrderByPath: ['queryInfo', 'orderBy'],","    AggregatePath: ['queryInfo', 'aggregates'],","    QueryRangesPath : 'queryRanges',","    RewrittenQueryPath: ['queryInfo', 'rewrittenQuery']","};","","var PartitionedQueryExecutionContextInfoParser = Base.defineClass(","    undefined, undefined,","    {","        parseRewrittenQuery: function (partitionedQueryExecutionInfo) {","            return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.RewrittenQueryPath);","        },","        parseQueryRanges: function (partitionedQueryExecutionInfo) {","            return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.QueryRangesPath);","        },","        parseOrderBy: function (partitionedQueryExecutionInfo) {","            return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.OrderByPath);","        },","        parseAggregates: function (partitionedQueryExecutionInfo) {","            return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.AggregatePath);","        },","        parseTop: function (partitionedQueryExecutionInfo) {","            return this._extract(partitionedQueryExecutionInfo, PartitionedQueryContants.TopPath);","        },","        _extract: function (partitionedQueryExecutionInfo, path) {","            var item = partitionedQueryExecutionInfo;","            if (typeof (path) === 'string') {","                return item[path];","            }","            assert(Array.isArray(path),","                util.format(\"%s is expected to be an array\", JSON.stringify(path)));","            for (var index = 0; index < path.length; index++) {","                item = item[path[index]];","                if (item === undefined) {","                    return undefined;","                }","            }","            return item;","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = PartitionedQueryExecutionContextInfoParser;","}"],"l":{"26":1,"31":1,"40":1,"44":0,"47":0,"50":0,"53":0,"56":0,"59":0,"60":0,"61":0,"63":0,"65":0,"66":0,"67":0,"68":0,"71":0,"77":1,"78":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/endpointComponent.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/endpointComponent.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":1,"90":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"(anonymous_1)","line":38,"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":18},"end":{"line":48,"column":38}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":43},"end":{"line":49,"column":64}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":17},"end":{"line":66,"column":36}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":42},"end":{"line":67,"column":63}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":24},"end":{"line":84,"column":36}}},"7":{"name":"(anonymous_7)","line":97,"loc":{"start":{"line":97,"column":4},"end":{"line":97,"column":42}}},"8":{"name":"(anonymous_8)","line":109,"loc":{"start":{"line":109,"column":18},"end":{"line":109,"column":38}}},"9":{"name":"(anonymous_9)","line":114,"loc":{"start":{"line":114,"column":43},"end":{"line":114,"column":64}}},"10":{"name":"(anonymous_10)","line":125,"loc":{"start":{"line":125,"column":17},"end":{"line":125,"column":37}}},"11":{"name":"(anonymous_11)","line":129,"loc":{"start":{"line":129,"column":42},"end":{"line":129,"column":63}}},"12":{"name":"(anonymous_12)","line":140,"loc":{"start":{"line":140,"column":24},"end":{"line":140,"column":36}}},"13":{"name":"(anonymous_13)","line":153,"loc":{"start":{"line":153,"column":4},"end":{"line":153,"column":52}}},"14":{"name":"(anonymous_14)","line":157,"loc":{"start":{"line":157,"column":35},"end":{"line":157,"column":64}}},"15":{"name":"(anonymous_15)","line":182,"loc":{"start":{"line":182,"column":29},"end":{"line":182,"column":49}}},"16":{"name":"(anonymous_16)","line":188,"loc":{"start":{"line":188,"column":34},"end":{"line":188,"column":60}}},"17":{"name":"(anonymous_17)","line":193,"loc":{"start":{"line":193,"column":34},"end":{"line":193,"column":54}}},"18":{"name":"(anonymous_18)","line":194,"loc":{"start":{"line":194,"column":50},"end":{"line":194,"column":72}}},"19":{"name":"(anonymous_19)","line":206,"loc":{"start":{"line":206,"column":46},"end":{"line":206,"column":68}}},"20":{"name":"(anonymous_20)","line":218,"loc":{"start":{"line":218,"column":26},"end":{"line":218,"column":46}}},"21":{"name":"(anonymous_21)","line":221,"loc":{"start":{"line":221,"column":43},"end":{"line":221,"column":64}}},"22":{"name":"(anonymous_22)","line":243,"loc":{"start":{"line":243,"column":18},"end":{"line":243,"column":38}}},"23":{"name":"(anonymous_23)","line":245,"loc":{"start":{"line":245,"column":28},"end":{"line":245,"column":54}}},"24":{"name":"(anonymous_24)","line":258,"loc":{"start":{"line":258,"column":41},"end":{"line":258,"column":67}}},"25":{"name":"(anonymous_25)","line":273,"loc":{"start":{"line":273,"column":17},"end":{"line":273,"column":37}}},"26":{"name":"(anonymous_26)","line":276,"loc":{"start":{"line":276,"column":41},"end":{"line":276,"column":67}}},"27":{"name":"(anonymous_27)","line":291,"loc":{"start":{"line":291,"column":24},"end":{"line":291,"column":36}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":27,"column":45}},"2":{"start":{"line":30,"column":0},"end":{"line":88,"column":2}},"3":{"start":{"line":39,"column":8},"end":{"line":39,"column":49}},"4":{"start":{"line":49,"column":12},"end":{"line":57,"column":15}},"5":{"start":{"line":50,"column":16},"end":{"line":52,"column":17}},"6":{"start":{"line":51,"column":20},"end":{"line":51,"column":52}},"7":{"start":{"line":53,"column":16},"end":{"line":55,"column":17}},"8":{"start":{"line":54,"column":20},"end":{"line":54,"column":58}},"9":{"start":{"line":56,"column":16},"end":{"line":56,"column":53}},"10":{"start":{"line":67,"column":12},"end":{"line":75,"column":15}},"11":{"start":{"line":68,"column":16},"end":{"line":70,"column":17}},"12":{"start":{"line":69,"column":20},"end":{"line":69,"column":52}},"13":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"14":{"start":{"line":72,"column":20},"end":{"line":72,"column":58}},"15":{"start":{"line":74,"column":16},"end":{"line":74,"column":53}},"16":{"start":{"line":85,"column":12},"end":{"line":85,"column":58}},"17":{"start":{"line":90,"column":0},"end":{"line":144,"column":2}},"18":{"start":{"line":98,"column":8},"end":{"line":98,"column":49}},"19":{"start":{"line":99,"column":8},"end":{"line":99,"column":33}},"20":{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},"21":{"start":{"line":111,"column":16},"end":{"line":111,"column":54}},"22":{"start":{"line":113,"column":12},"end":{"line":113,"column":28}},"23":{"start":{"line":114,"column":12},"end":{"line":116,"column":15}},"24":{"start":{"line":115,"column":16},"end":{"line":115,"column":36}},"25":{"start":{"line":126,"column":12},"end":{"line":128,"column":13}},"26":{"start":{"line":127,"column":16},"end":{"line":127,"column":54}},"27":{"start":{"line":129,"column":12},"end":{"line":131,"column":15}},"28":{"start":{"line":130,"column":16},"end":{"line":130,"column":43}},"29":{"start":{"line":141,"column":12},"end":{"line":141,"column":81}},"30":{"start":{"line":146,"column":0},"end":{"line":295,"column":2}},"31":{"start":{"line":154,"column":8},"end":{"line":154,"column":49}},"32":{"start":{"line":155,"column":8},"end":{"line":155,"column":35}},"33":{"start":{"line":156,"column":8},"end":{"line":156,"column":24}},"34":{"start":{"line":157,"column":8},"end":{"line":175,"column":11}},"35":{"start":{"line":158,"column":12},"end":{"line":174,"column":13}},"36":{"start":{"line":160,"column":20},"end":{"line":160,"column":84}},"37":{"start":{"line":161,"column":20},"end":{"line":161,"column":26}},"38":{"start":{"line":163,"column":20},"end":{"line":163,"column":82}},"39":{"start":{"line":164,"column":20},"end":{"line":164,"column":26}},"40":{"start":{"line":166,"column":20},"end":{"line":166,"column":80}},"41":{"start":{"line":167,"column":20},"end":{"line":167,"column":26}},"42":{"start":{"line":169,"column":20},"end":{"line":169,"column":80}},"43":{"start":{"line":170,"column":20},"end":{"line":170,"column":26}},"44":{"start":{"line":172,"column":20},"end":{"line":172,"column":80}},"45":{"start":{"line":173,"column":20},"end":{"line":173,"column":26}},"46":{"start":{"line":183,"column":12},"end":{"line":183,"column":43}},"47":{"start":{"line":184,"column":12},"end":{"line":184,"column":38}},"48":{"start":{"line":185,"column":12},"end":{"line":185,"column":43}},"49":{"start":{"line":186,"column":12},"end":{"line":186,"column":28}},"50":{"start":{"line":188,"column":12},"end":{"line":211,"column":15}},"51":{"start":{"line":189,"column":16},"end":{"line":191,"column":17}},"52":{"start":{"line":190,"column":20},"end":{"line":190,"column":52}},"53":{"start":{"line":193,"column":16},"end":{"line":203,"column":19}},"54":{"start":{"line":194,"column":20},"end":{"line":202,"column":23}},"55":{"start":{"line":195,"column":24},"end":{"line":195,"column":50}},"56":{"start":{"line":197,"column":24},"end":{"line":200,"column":25}},"57":{"start":{"line":198,"column":28},"end":{"line":198,"column":63}},"58":{"start":{"line":199,"column":28},"end":{"line":199,"column":54}},"59":{"start":{"line":201,"column":24},"end":{"line":201,"column":56}},"60":{"start":{"line":206,"column":16},"end":{"line":208,"column":19}},"61":{"start":{"line":207,"column":20},"end":{"line":207,"column":70}},"62":{"start":{"line":210,"column":16},"end":{"line":210,"column":65}},"63":{"start":{"line":219,"column":12},"end":{"line":219,"column":28}},"64":{"start":{"line":221,"column":12},"end":{"line":233,"column":15}},"65":{"start":{"line":222,"column":16},"end":{"line":224,"column":17}},"66":{"start":{"line":223,"column":20},"end":{"line":223,"column":52}},"67":{"start":{"line":226,"column":16},"end":{"line":229,"column":17}},"68":{"start":{"line":228,"column":20},"end":{"line":228,"column":74}},"69":{"start":{"line":231,"column":16},"end":{"line":231,"column":83}},"70":{"start":{"line":232,"column":16},"end":{"line":232,"column":55}},"71":{"start":{"line":244,"column":12},"end":{"line":244,"column":28}},"72":{"start":{"line":245,"column":12},"end":{"line":255,"column":14}},"73":{"start":{"line":246,"column":16},"end":{"line":248,"column":17}},"74":{"start":{"line":247,"column":20},"end":{"line":247,"column":58}},"75":{"start":{"line":250,"column":16},"end":{"line":252,"column":32}},"76":{"start":{"line":254,"column":16},"end":{"line":254,"column":53}},"77":{"start":{"line":257,"column":12},"end":{"line":264,"column":13}},"78":{"start":{"line":258,"column":16},"end":{"line":260,"column":19}},"79":{"start":{"line":259,"column":20},"end":{"line":259,"column":53}},"80":{"start":{"line":263,"column":16},"end":{"line":263,"column":66}},"81":{"start":{"line":274,"column":12},"end":{"line":274,"column":28}},"82":{"start":{"line":275,"column":12},"end":{"line":282,"column":13}},"83":{"start":{"line":276,"column":16},"end":{"line":278,"column":19}},"84":{"start":{"line":277,"column":20},"end":{"line":277,"column":96}},"85":{"start":{"line":281,"column":16},"end":{"line":281,"column":92}},"86":{"start":{"line":292,"column":12},"end":{"line":292,"column":111}},"87":{"start":{"line":298,"column":0},"end":{"line":302,"column":1}},"88":{"start":{"line":299,"column":4},"end":{"line":299,"column":64}},"89":{"start":{"line":300,"column":4},"end":{"line":300,"column":56}},"90":{"start":{"line":301,"column":4},"end":{"line":301,"column":68}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":16},"end":{"line":50,"column":16}},{"start":{"line":50,"column":16},"end":{"line":50,"column":16}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":16}},{"start":{"line":53,"column":16},"end":{"line":53,"column":16}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":16}},{"start":{"line":68,"column":16},"end":{"line":68,"column":16}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":16}},{"start":{"line":71,"column":16},"end":{"line":71,"column":16}}]},"5":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"6":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":12}},{"start":{"line":126,"column":12},"end":{"line":126,"column":12}}]},"7":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":20},"end":{"line":141,"column":37}},{"start":{"line":141,"column":41},"end":{"line":141,"column":79}}]},"8":{"line":158,"type":"switch","locations":[{"start":{"line":159,"column":16},"end":{"line":161,"column":26}},{"start":{"line":162,"column":16},"end":{"line":164,"column":26}},{"start":{"line":165,"column":16},"end":{"line":167,"column":26}},{"start":{"line":168,"column":16},"end":{"line":170,"column":26}},{"start":{"line":171,"column":16},"end":{"line":173,"column":26}}]},"9":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":16},"end":{"line":189,"column":16}},{"start":{"line":189,"column":16},"end":{"line":189,"column":16}}]},"10":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":24},"end":{"line":197,"column":24}},{"start":{"line":197,"column":24},"end":{"line":197,"column":24}}]},"11":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":28},"end":{"line":197,"column":36}},{"start":{"line":197,"column":40},"end":{"line":197,"column":72}}]},"12":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":16},"end":{"line":222,"column":16}},{"start":{"line":222,"column":16},"end":{"line":222,"column":16}}]},"13":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":16},"end":{"line":226,"column":16}},{"start":{"line":226,"column":16},"end":{"line":226,"column":16}}]},"14":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":16},"end":{"line":246,"column":16}},{"start":{"line":246,"column":16},"end":{"line":246,"column":16}}]},"15":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":20},"end":{"line":246,"column":23}},{"start":{"line":246,"column":27},"end":{"line":246,"column":59}}]},"16":{"line":250,"type":"cond-expr","locations":[{"start":{"line":251,"column":22},"end":{"line":251,"column":71}},{"start":{"line":252,"column":22},"end":{"line":252,"column":31}}]},"17":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":12},"end":{"line":257,"column":12}},{"start":{"line":257,"column":12},"end":{"line":257,"column":12}}]},"18":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":12},"end":{"line":275,"column":12}},{"start":{"line":275,"column":12},"end":{"line":275,"column":12}}]},"19":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":19},"end":{"line":292,"column":47}},{"start":{"line":292,"column":51},"end":{"line":292,"column":110}}]},"20":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":0},"end":{"line":298,"column":0}},{"start":{"line":298,"column":0},"end":{"line":298,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , aggregators = require('./aggregators');","","//SCRIPT START","var OrderByEndpointComponent = Base.defineClass(","","    /**","     * Represents an endpoint in handling an order by query. For each processed orderby result it returns 'payload' item of the result","     * @constructor OrderByEndpointComponent","     * @param {object} executionContext              - Underlying Execution Context","     * @ignore","     */","    function (executionContext) {","        this.executionContext = executionContext;","    },","    {","         /**","         * Execute a provided function on the next element in the OrderByEndpointComponent.","         * @memberof OrderByEndpointComponent","         * @instance","         * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","         */","        nextItem: function (callback) {","            this.executionContext.nextItem(function (err, item) {","                if (err) {","                    return callback(err, undefined);","                }","                if (item === undefined) {","                    return callback(undefined, undefined);","                }","                callback(undefined, item[\"payload\"]);","            });","        },","","        /**","         * Retrieve the current element on the OrderByEndpointComponent.","         * @memberof OrderByEndpointComponent","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function(callback) {","            this.executionContext.current(function (err, item) {","                if (err) {","                    return callback(err, undefined);","                }","                if (item === undefined) {","                    return callback(undefined, undefined);","                }","                callback(undefined, item[\"payload\"]);","            });","        },","","        /**","         * Determine if there are still remaining resources to processs.","         * @memberof OrderByEndpointComponent","         * @instance","         * @returns {Boolean} true if there is other elements to process in the OrderByEndpointComponent.","         */","        hasMoreResults: function () {","            return this.executionContext.hasMoreResults();","        },","    }",");","","var TopEndpointComponent = Base.defineClass(","    /**","     * Represents an endpoint in handling top query. It only returns as many results as top arg specified.","     * @constructor TopEndpointComponent","     * @param { object } executionContext - Underlying Execution Context","     * @ignore","     */","    function (executionContext, topCount) {","        this.executionContext = executionContext;","        this.topCount = topCount;","    },","    {","","        /**","        * Execute a provided function on the next element in the TopEndpointComponent.","        * @memberof TopEndpointComponent","        * @instance","        * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","        */","        nextItem: function (callback) {","            if (this.topCount <= 0) {","                return callback(undefined, undefined);","            }","            this.topCount--;","            this.executionContext.nextItem(function (err, item) {","                callback(err, item);","            });","        },","","        /**","         * Retrieve the current element on the TopEndpointComponent.","         * @memberof TopEndpointComponent","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function (callback) {","            if (this.topCount <= 0) {","                return callback(undefined, undefined);","            }","            this.executionContext.current(function (err, item) {","                return callback(err, item);","            });","        },","","        /**","         * Determine if there are still remaining resources to processs.","         * @memberof TopEndpointComponent","         * @instance","         * @returns {Boolean} true if there is other elements to process in the TopEndpointComponent.","         */","        hasMoreResults: function () {","            return (this.topCount > 0 && this.executionContext.hasMoreResults());","        },","    }",");","","var AggregateEndpointComponent = Base.defineClass(","    /**","     * Represents an endpoint in handling aggregate queries.","     * @constructor AggregateEndpointComponent","     * @param { object } executionContext - Underlying Execution Context","     * @ignore","     */","    function (executionContext, aggregateOperators) {","        this.executionContext = executionContext;","        this.localAggregators = [];","        var that = this;","        aggregateOperators.forEach(function (aggregateOperator) {","            switch (aggregateOperator) {","                case 'Average':","                    that.localAggregators.push(new aggregators.AverageAggregator());","                    break;","                case 'Count':","                    that.localAggregators.push(new aggregators.CountAggregator());","                    break;","                case 'Max':","                    that.localAggregators.push(new aggregators.MaxAggregator());","                    break;","                case 'Min':","                    that.localAggregators.push(new aggregators.MinAggregator());","                    break;","                case 'Sum':","                    that.localAggregators.push(new aggregators.SumAggregator());","                    break;","            }","        });","    },","    {","        /**","        * Populate the aggregated values","        * @ignore ","        */","        _getAggregateResult: function (callback) {","            this.toArrayTempResources = [];","            this.aggregateValues = [];","            this.aggregateValuesIndex = -1;","            var that = this;","","            this._getQueryResults(function (err, resources) {","                if (err) {","                    return callback(err, undefined);","                }","","                resources.forEach(function (resource) {","                    that.localAggregators.forEach(function (aggregator) {","                        var itemValue = undefined;","                        // Get the value of the first property if it exists","                        if (resource && Object.keys(resource).length > 0) {","                            var key = Object.keys(resource)[0];","                            itemValue = resource[key];","                        }","                        aggregator.aggregate(itemValue);","                    });","                });","","                // Get the aggregated results","                that.localAggregators.forEach(function (aggregator) {","                    that.aggregateValues.push(aggregator.getResult());","                });","","                return callback(undefined, that.aggregateValues);","            });","        },","","        /**","        * Get the results of queries from all partitions","        * @ignore ","        */","        _getQueryResults: function (callback) {","            var that = this;","","            this.executionContext.nextItem(function (err, item) {","                if (err) {","                    return callback(err, undefined);","                }","                ","                if (item === undefined) {","                    // no more results","                    return callback(undefined, that.toArrayTempResources);","                }","","                that.toArrayTempResources = that.toArrayTempResources.concat(item);","                return that._getQueryResults(callback);","            });","","        },","","        /**","        * Execute a provided function on the next element in the AggregateEndpointComponent.","        * @memberof AggregateEndpointComponent","        * @instance","        * @param {callback} callback - Function to execute for each element. the function takes two parameters error, element.","        */","        nextItem: function (callback) {","            var that = this;","            var _nextItem = function (err, resources) {","                if (err || that.aggregateValues.length <= 0) {","                    return callback(undefined, undefined);","                }","","                var resource = that.aggregateValuesIndex < that.aggregateValues.length","                    ? that.aggregateValues[++that.aggregateValuesIndex]","                    : undefined;","","                return callback(undefined, resource);","            };","","            if (that.aggregateValues == undefined) {","                that._getAggregateResult(function (err, resources) {","                    return _nextItem(err, resources);","                });","            }","            else {","                return _nextItem(undefined, that.aggregateValues);","            }","        },","","        /**","         * Retrieve the current element on the AggregateEndpointComponent.","         * @memberof AggregateEndpointComponent","         * @instance","         * @param {callback} callback - Function to execute for the current element. the function takes two parameters error, element.","         */","        current: function (callback) {","            var that = this;","            if (that.aggregateValues == undefined) {","                that._getAggregateResult(function (err, resources) {","                    return callback(undefined, that.aggregateValues[that.aggregateValuesIndex]);","                });","            }","            else {","                return callback(undefined, that.aggregateValues[that.aggregateValuesIndex]);","            }","        },","","        /**","         * Determine if there are still remaining resources to processs.","         * @memberof AggregateEndpointComponent","         * @instance","         * @returns {Boolean} true if there is other elements to process in the AggregateEndpointComponent.","         */","        hasMoreResults: function () {","            return this.aggregateValues != null && this.aggregateValuesIndex < this.aggregateValues.length - 1;","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    exports.OrderByEndpointComponent = OrderByEndpointComponent;","    exports.TopEndpointComponent = TopEndpointComponent;","    exports.AggregateEndpointComponent = AggregateEndpointComponent;","}"],"l":{"26":1,"30":1,"39":0,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"67":0,"68":0,"69":0,"71":0,"72":0,"74":0,"85":0,"90":1,"98":0,"99":0,"110":0,"111":0,"113":0,"114":0,"115":0,"126":0,"127":0,"129":0,"130":0,"141":0,"146":1,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"161":0,"163":0,"164":0,"166":0,"167":0,"169":0,"170":0,"172":0,"173":0,"183":0,"184":0,"185":0,"186":0,"188":0,"189":0,"190":0,"193":0,"194":0,"195":0,"197":0,"198":0,"199":0,"201":0,"206":0,"207":0,"210":0,"219":0,"221":0,"222":0,"223":0,"226":0,"228":0,"231":0,"232":0,"244":0,"245":0,"246":0,"247":0,"250":0,"254":0,"257":0,"258":0,"259":0,"263":0,"274":0,"275":0,"276":0,"277":0,"281":0,"292":0,"298":1,"299":1,"300":1,"301":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/aggregators.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/aggregators.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":16}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":19},"end":{"line":46,"column":36}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":19},"end":{"line":63,"column":31}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":4},"end":{"line":80,"column":16}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":19},"end":{"line":90,"column":36}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":19},"end":{"line":99,"column":31}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":4},"end":{"line":113,"column":16}}},"8":{"name":"(anonymous_8)","line":124,"loc":{"start":{"line":124,"column":19},"end":{"line":124,"column":36}}},"9":{"name":"(anonymous_9)","line":141,"loc":{"start":{"line":141,"column":19},"end":{"line":141,"column":31}}},"10":{"name":"(anonymous_10)","line":155,"loc":{"start":{"line":155,"column":4},"end":{"line":155,"column":16}}},"11":{"name":"(anonymous_11)","line":166,"loc":{"start":{"line":166,"column":19},"end":{"line":166,"column":36}}},"12":{"name":"(anonymous_12)","line":180,"loc":{"start":{"line":180,"column":19},"end":{"line":180,"column":31}}},"13":{"name":"(anonymous_13)","line":194,"loc":{"start":{"line":194,"column":4},"end":{"line":194,"column":16}}},"14":{"name":"(anonymous_14)","line":203,"loc":{"start":{"line":203,"column":19},"end":{"line":203,"column":36}}},"15":{"name":"(anonymous_15)","line":220,"loc":{"start":{"line":220,"column":19},"end":{"line":220,"column":31}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":27,"column":54}},"2":{"start":{"line":30,"column":0},"end":{"line":71,"column":2}},"3":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"4":{"start":{"line":48,"column":16},"end":{"line":48,"column":23}},"5":{"start":{"line":50,"column":12},"end":{"line":53,"column":13}},"6":{"start":{"line":51,"column":16},"end":{"line":51,"column":31}},"7":{"start":{"line":52,"column":16},"end":{"line":52,"column":31}},"8":{"start":{"line":54,"column":12},"end":{"line":54,"column":34}},"9":{"start":{"line":55,"column":12},"end":{"line":55,"column":38}},"10":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"11":{"start":{"line":65,"column":16},"end":{"line":65,"column":33}},"12":{"start":{"line":67,"column":12},"end":{"line":67,"column":41}},"13":{"start":{"line":73,"column":0},"end":{"line":104,"column":2}},"14":{"start":{"line":81,"column":8},"end":{"line":81,"column":23}},"15":{"start":{"line":91,"column":12},"end":{"line":91,"column":32}},"16":{"start":{"line":100,"column":12},"end":{"line":100,"column":30}},"17":{"start":{"line":106,"column":0},"end":{"line":146,"column":2}},"18":{"start":{"line":114,"column":8},"end":{"line":114,"column":31}},"19":{"start":{"line":115,"column":8},"end":{"line":115,"column":92}},"20":{"start":{"line":125,"column":12},"end":{"line":133,"column":13}},"21":{"start":{"line":126,"column":16},"end":{"line":126,"column":35}},"22":{"start":{"line":129,"column":16},"end":{"line":129,"column":75}},"23":{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},"24":{"start":{"line":131,"column":20},"end":{"line":131,"column":39}},"25":{"start":{"line":142,"column":12},"end":{"line":142,"column":30}},"26":{"start":{"line":148,"column":0},"end":{"line":185,"column":2}},"27":{"start":{"line":156,"column":8},"end":{"line":156,"column":31}},"28":{"start":{"line":157,"column":8},"end":{"line":157,"column":92}},"29":{"start":{"line":167,"column":12},"end":{"line":172,"column":13}},"30":{"start":{"line":168,"column":16},"end":{"line":168,"column":35}},"31":{"start":{"line":170,"column":17},"end":{"line":172,"column":13}},"32":{"start":{"line":171,"column":16},"end":{"line":171,"column":35}},"33":{"start":{"line":181,"column":12},"end":{"line":181,"column":30}},"34":{"start":{"line":187,"column":0},"end":{"line":225,"column":2}},"35":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"36":{"start":{"line":205,"column":16},"end":{"line":205,"column":23}},"37":{"start":{"line":207,"column":12},"end":{"line":212,"column":13}},"38":{"start":{"line":208,"column":16},"end":{"line":208,"column":33}},"39":{"start":{"line":211,"column":16},"end":{"line":211,"column":34}},"40":{"start":{"line":221,"column":12},"end":{"line":221,"column":28}},"41":{"start":{"line":228,"column":0},"end":{"line":234,"column":1}},"42":{"start":{"line":229,"column":4},"end":{"line":229,"column":50}},"43":{"start":{"line":230,"column":4},"end":{"line":230,"column":46}},"44":{"start":{"line":231,"column":4},"end":{"line":231,"column":42}},"45":{"start":{"line":232,"column":4},"end":{"line":232,"column":42}},"46":{"start":{"line":233,"column":4},"end":{"line":233,"column":42}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":16},"end":{"line":47,"column":29}},{"start":{"line":47,"column":33},"end":{"line":47,"column":50}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":12}},{"start":{"line":64,"column":12},"end":{"line":64,"column":12}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":32}},{"start":{"line":64,"column":36},"end":{"line":64,"column":51}}]},"6":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":12}},{"start":{"line":125,"column":12},"end":{"line":125,"column":12}}]},"7":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":48},"end":{"line":129,"column":57}},{"start":{"line":129,"column":60},"end":{"line":129,"column":74}}]},"8":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":130,"column":16}},{"start":{"line":130,"column":16},"end":{"line":130,"column":16}}]},"9":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":12}},{"start":{"line":167,"column":12},"end":{"line":167,"column":12}}]},"10":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":17},"end":{"line":170,"column":17}},{"start":{"line":170,"column":17},"end":{"line":170,"column":17}}]},"11":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":204,"column":12}},{"start":{"line":204,"column":12},"end":{"line":204,"column":12}}]},"12":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":12}},{"start":{"line":207,"column":12},"end":{"line":207,"column":12}}]},"13":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":0},"end":{"line":228,"column":0}},{"start":{"line":228,"column":0},"end":{"line":228,"column":0}}]}},"code":["﻿/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , DocumentProducer = require(\"./documentProducer\")","","//SCRIPT START","var AverageAggregator = Base.defineClass(","","    /**","     * Represents an aggregator for AVG operator.","     * @constructor AverageAggregator","     * @ignore","     */","    function () {","    },","    {","        /**","        * Add the provided item to aggregation result.","        * @memberof AverageAggregator","        * @instance","        * @param other","        */","        aggregate: function (other) {","            if (other == null || other.sum == null) {","                return;","            }","            if (this.sum == null) {","                this.sum = 0.0;","                this.count = 0;","            }","            this.sum += other.sum;","            this.count += other.count;","        },","","        /**","        * Get the aggregation result.","        * @memberof AverageAggregator","        * @instance","        */","        getResult: function () {","            if (this.sum == null || this.count <= 0) {","                return undefined;","            }","            return this.sum / this.count;","        }","","    }",");","","var CountAggregator = Base.defineClass(","","    /**","     * Represents an aggregator for COUNT operator.","     * @constructor CountAggregator","     * @ignore","     */","    function () {","        this.value = 0;","    },","    {","        /**","        * Add the provided item to aggregation result.","        * @memberof CountAggregator","        * @instance","        * @param other","        */","        aggregate: function (other) {","            this.value += other;","        },","","        /**","        * Get the aggregation result.","        * @memberof CountAggregator","        * @instance","        */","        getResult: function () {","            return this.value;","        }","","    }",");","","var MinAggregator = Base.defineClass(","","    /**","     * Represents an aggregator for MIN operator.","     * @constructor MinAggregator","     * @ignore","     */","    function () {","        this.value = undefined;","        this.comparer = new DocumentProducer.OrderByDocumentProducerComparator(\"Ascending\");","    },","    {","        /**","        * Add the provided item to aggregation result.","        * @memberof MinAggregator","        * @instance","        * @param other","        */","        aggregate: function (other) {","            if (this.value == undefined) {","                this.value = other;","            }","            else {","                var otherType = other == null ? 'NoValue' : typeof (other);","                if (this.comparer.compareValue(other, otherType, this.value, typeof (this.value)) < 0) {","                    this.value = other;","                }","            }","        },","","        /**","        * Get the aggregation result.","        * @memberof MinAggregator","        * @instance","        */","        getResult: function () {","            return this.value;","        }","","    }",");","","var MaxAggregator = Base.defineClass(","","    /**","     * Represents an aggregator for MAX operator.","     * @constructor MaxAggregator","     * @ignore","     */","    function () {","        this.value = undefined;","        this.comparer = new DocumentProducer.OrderByDocumentProducerComparator(\"Ascending\");","    },","    {","        /**","        * Add the provided item to aggregation result.","        * @memberof MaxAggregator","        * @instance","        * @param other","        */","        aggregate: function (other) {","            if (this.value == undefined) {","                this.value = other;","            }","            else if (this.comparer.compareValue(other, typeof (other), this.value, typeof (this.value)) > 0) {","                this.value = other;","            }","        },","","        /**","        * Get the aggregation result.","        * @memberof MaxAggregator","        * @instance","        */","        getResult: function () {","            return this.value;","        }","","    }",");","","var SumAggregator = Base.defineClass(","","    /**","     * Represents an aggregator for SUM operator.","     * @constructor SumAggregator","     * @ignore","     */","    function () {","    },","    {","        /**","        * Add the provided item to aggregation result.","        * @memberof SumAggregator","        * @instance","        * @param other","        */","        aggregate: function (other) {","            if (other == undefined) {","                return;","            }","            if (this.sum == undefined) {","                this.sum = other;","            }","            else {","                this.sum += other;","            }","        },","","        /**","        * Get the aggregation result.","        * @memberof SumAggregator","        * @instance","        */","        getResult: function () {","            return this.sum;","        }","","    }",");"," //SCRIPT END","","if (typeof exports !== \"undefined\") {","    exports.AverageAggregator = AverageAggregator;","    exports.CountAggregator = CountAggregator;","    exports.MinAggregator = MinAggregator;","    exports.MaxAggregator = MaxAggregator;","    exports.SumAggregator = SumAggregator;","}",""],"l":{"26":1,"30":1,"47":0,"48":0,"50":0,"51":0,"52":0,"54":0,"55":0,"64":0,"65":0,"67":0,"73":1,"81":0,"91":0,"100":0,"106":1,"114":0,"115":0,"125":0,"126":0,"129":0,"130":0,"131":0,"142":0,"148":1,"156":0,"157":0,"167":0,"168":0,"170":0,"171":0,"181":0,"187":1,"204":0,"205":0,"207":0,"208":0,"211":0,"221":0,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/pipelinedQueryExecutionContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/queryExecutionContext/pipelinedQueryExecutionContext.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":42,"column":88}}},"2":{"name":"(anonymous_2)","line":67,"loc":{"start":{"line":67,"column":18},"end":{"line":67,"column":38}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":37}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":24},"end":{"line":75,"column":44}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":19},"end":{"line":79,"column":39}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":34},"end":{"line":85,"column":54}}},"7":{"name":"(anonymous_7)","line":89,"loc":{"start":{"line":89,"column":35},"end":{"line":89,"column":70}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":30,"column":89}},"2":{"start":{"line":33,"column":0},"end":{"line":123,"column":2}},"3":{"start":{"line":43,"column":8},"end":{"line":43,"column":45}},"4":{"start":{"line":44,"column":8},"end":{"line":44,"column":31}},"5":{"start":{"line":45,"column":8},"end":{"line":45,"column":75}},"6":{"start":{"line":46,"column":8},"end":{"line":46,"column":41}},"7":{"start":{"line":47,"column":8},"end":{"line":47,"column":48}},"8":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"9":{"start":{"line":49,"column":12},"end":{"line":49,"column":77}},"10":{"start":{"line":51,"column":8},"end":{"line":51,"column":91}},"11":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"12":{"start":{"line":53,"column":12},"end":{"line":53,"column":90}},"13":{"start":{"line":56,"column":8},"end":{"line":56,"column":97}},"14":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"15":{"start":{"line":58,"column":12},"end":{"line":58,"column":104}},"16":{"start":{"line":61,"column":8},"end":{"line":61,"column":83}},"17":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"18":{"start":{"line":63,"column":12},"end":{"line":63,"column":91}},"19":{"start":{"line":68,"column":12},"end":{"line":68,"column":52}},"20":{"start":{"line":72,"column":12},"end":{"line":72,"column":51}},"21":{"start":{"line":76,"column":12},"end":{"line":76,"column":58}},"22":{"start":{"line":80,"column":12},"end":{"line":80,"column":52}},"23":{"start":{"line":81,"column":12},"end":{"line":81,"column":54}},"24":{"start":{"line":82,"column":12},"end":{"line":82,"column":52}},"25":{"start":{"line":86,"column":12},"end":{"line":86,"column":28}},"26":{"start":{"line":87,"column":12},"end":{"line":87,"column":28}},"27":{"start":{"line":89,"column":12},"end":{"line":117,"column":15}},"28":{"start":{"line":90,"column":16},"end":{"line":92,"column":17}},"29":{"start":{"line":91,"column":20},"end":{"line":91,"column":61}},"30":{"start":{"line":94,"column":16},"end":{"line":94,"column":56}},"31":{"start":{"line":95,"column":16},"end":{"line":104,"column":17}},"32":{"start":{"line":97,"column":20},"end":{"line":99,"column":21}},"33":{"start":{"line":98,"column":24},"end":{"line":98,"column":93}},"34":{"start":{"line":101,"column":20},"end":{"line":101,"column":66}},"35":{"start":{"line":102,"column":20},"end":{"line":102,"column":60}},"36":{"start":{"line":103,"column":20},"end":{"line":103,"column":84}},"37":{"start":{"line":106,"column":16},"end":{"line":106,"column":106}},"38":{"start":{"line":108,"column":16},"end":{"line":114,"column":17}},"39":{"start":{"line":110,"column":20},"end":{"line":110,"column":66}},"40":{"start":{"line":111,"column":20},"end":{"line":111,"column":60}},"41":{"start":{"line":113,"column":20},"end":{"line":113,"column":84}},"42":{"start":{"line":116,"column":16},"end":{"line":116,"column":56}},"43":{"start":{"line":126,"column":0},"end":{"line":128,"column":1}},"44":{"start":{"line":127,"column":4},"end":{"line":127,"column":52}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"3":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":34}},{"start":{"line":52,"column":38},"end":{"line":52,"column":56}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"5":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":37}},{"start":{"line":57,"column":41},"end":{"line":57,"column":62}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":90,"column":16}},{"start":{"line":90,"column":16},"end":{"line":90,"column":16}}]},"8":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":16}},{"start":{"line":95,"column":16},"end":{"line":95,"column":16}}]},"9":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":20},"end":{"line":97,"column":20}},{"start":{"line":97,"column":20},"end":{"line":97,"column":20}}]},"10":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":16}},{"start":{"line":108,"column":16},"end":{"line":108,"column":16}}]},"11":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":0},"end":{"line":126,"column":0}},{"start":{"line":126,"column":0},"end":{"line":126,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\")","    , DefaultQueryExecutionContext = require(\"./defaultQueryExecutionContext\")","    , endpointComponent = require('./endpointComponent')","    , assert = require(\"assert\")","    , QueryExecutionInfoParser = require(\"./partitionedQueryExecutionContextInfoParser\");","","//SCRIPT START","var PipelinedQueryExecutionContext = Base.defineClass(","    /**","     * Provides the PipelinedQueryExecutionContext. It piplelines top and orderby execution context if necessary","     * @constructor PipelinedQueryExecutionContext","     * @param {DocumentClient} documentclient        - The service endpoint to use to create the client.","     * @param {FeedOptions} [options]                - Represents the feed options.","     * @param {object} partitionedQueryExecutionInfo  - PartitionedQueryExecutionInfo","     * @ignore","     */","    function (documentclient, options, executionContext, partitionedQueryExecutionInfo) {","        this.documentclient = documentclient;","        this.options = options;","        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;","        this.endpoint = executionContext;","        this.pageSize = options[\"maxItemCount\"];","        if (this.pageSize === undefined) {","            this.pageSize = PipelinedQueryExecutionContext.DEFAULT_PAGE_SIZE;","        }","        var orderBy = QueryExecutionInfoParser.parseOrderBy(partitionedQueryExecutionInfo);","        if (Array.isArray(orderBy) && orderBy.length > 0) {","            this.endpoint = new endpointComponent.OrderByEndpointComponent(this.endpoint);","        }","","        var aggregates = QueryExecutionInfoParser.parseAggregates(partitionedQueryExecutionInfo);","        if (Array.isArray(aggregates) && aggregates.length > 0) {","            this.endpoint = new endpointComponent.AggregateEndpointComponent(this.endpoint, aggregates);","        }","","        var top = QueryExecutionInfoParser.parseTop(partitionedQueryExecutionInfo);","        if (typeof (top) === 'number') {","            this.endpoint = new endpointComponent.TopEndpointComponent(this.endpoint, top);","        }","    },","    {","        nextItem: function (callback) {","            return this.endpoint.nextItem(callback);","        },","","        current: function (callback) {","            return this.endpoint.current(callback);","        },","","        hasMoreResults: function (callback) {","            return this.endpoint.hasMoreResults(callback);","        },","","        fetchMore: function (callback) {","            this._fetchMoreTempBufferedResults = [];","            this._fetchMoreLastResHeaders = undefined;","            this._fetchMoreImplementation(callback);","        },","","        _fetchMoreImplementation: function (callback) {","            var that = this;","            var counter = 0;","","            this.endpoint.nextItem(function (err, resources, headers) {","                if (err) {","                    return callback(err, undefined, headers);","                }","                // concatinate the results and fetch more","                that._fetchMoreLastResHeaders = headers;","                if (resources === undefined) {","                    // no more results","                    if (that._fetchMoreTempBufferedResults.length === 0) {","                        return callback(undefined, undefined, that._fetchMoreLastResHeaders);","                    }","","                    var temp = that._fetchMoreTempBufferedResults;","                    that._fetchMoreTempBufferedResults = [];","                    return callback(undefined, temp, that._fetchMoreLastResHeaders);","                }","","                that._fetchMoreTempBufferedResults = that._fetchMoreTempBufferedResults.concat(resources);","","                if (that.pageSize <= that._fetchMoreTempBufferedResults.length) {","                    // fetched enough results","                    var temp = that._fetchMoreTempBufferedResults;","                    that._fetchMoreTempBufferedResults = [];","","                    return callback(undefined, temp, that._fetchMoreLastResHeaders);","                }","","                that._fetchMoreImplementation(callback);","            });","        },","    },","    {","        DEFAULT_PAGE_SIZE: 1000","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = PipelinedQueryExecutionContext;","}",""],"l":{"26":1,"33":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"56":0,"57":0,"58":0,"61":0,"62":0,"63":0,"68":0,"72":0,"76":0,"80":0,"81":0,"82":0,"86":0,"87":0,"89":0,"90":0,"91":0,"94":0,"95":0,"97":0,"98":0,"101":0,"102":0,"103":0,"106":0,"108":0,"110":0,"111":0,"113":0,"116":0,"126":1,"127":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/request.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/request.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"bodyFromData","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":28}}},"2":{"name":"parse","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":26}}},"3":{"name":"createRequestObject","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":72}}},"4":{"name":"onTimeout","line":50,"loc":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":53},"end":{"line":56,"column":72}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":28},"end":{"line":63,"column":44}}},"7":{"name":"(anonymous_7)","line":66,"loc":{"start":{"line":66,"column":27},"end":{"line":66,"column":38}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":32},"end":{"line":86,"column":49}}},"9":{"name":"(anonymous_9)","line":95,"loc":{"start":{"line":95,"column":38},"end":{"line":95,"column":50}}},"10":{"name":"getErrorBody","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":38}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":30},"end":{"line":128,"column":84}}},"12":{"name":"(anonymous_12)","line":144,"loc":{"start":{"line":144,"column":13},"end":{"line":144,"column":121}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":33,"column":80}},"2":{"start":{"line":39,"column":0},"end":{"line":45,"column":1}},"3":{"start":{"line":40,"column":4},"end":{"line":40,"column":31}},"4":{"start":{"line":40,"column":19},"end":{"line":40,"column":31}},"5":{"start":{"line":41,"column":4},"end":{"line":41,"column":43}},"6":{"start":{"line":41,"column":31},"end":{"line":41,"column":43}},"7":{"start":{"line":42,"column":4},"end":{"line":42,"column":46}},"8":{"start":{"line":42,"column":34},"end":{"line":42,"column":46}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":62}},"10":{"start":{"line":43,"column":34},"end":{"line":43,"column":62}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":21}},"12":{"start":{"line":47,"column":0},"end":{"line":47,"column":58}},"13":{"start":{"line":47,"column":28},"end":{"line":47,"column":56}},"14":{"start":{"line":49,"column":0},"end":{"line":102,"column":1}},"15":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":51,"column":8},"end":{"line":51,"column":29}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":64}},"18":{"start":{"line":56,"column":4},"end":{"line":84,"column":7}},"19":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"20":{"start":{"line":59,"column":12},"end":{"line":59,"column":67}},"21":{"start":{"line":62,"column":8},"end":{"line":62,"column":22}},"22":{"start":{"line":63,"column":8},"end":{"line":65,"column":11}},"23":{"start":{"line":64,"column":12},"end":{"line":64,"column":26}},"24":{"start":{"line":66,"column":8},"end":{"line":83,"column":11}},"25":{"start":{"line":67,"column":12},"end":{"line":69,"column":17}},"26":{"start":{"line":68,"column":16},"end":{"line":68,"column":91}},"27":{"start":{"line":71,"column":12},"end":{"line":71,"column":23}},"28":{"start":{"line":72,"column":12},"end":{"line":80,"column":13}},"29":{"start":{"line":73,"column":16},"end":{"line":77,"column":17}},"30":{"start":{"line":74,"column":20},"end":{"line":74,"column":34}},"31":{"start":{"line":76,"column":20},"end":{"line":76,"column":76}},"32":{"start":{"line":79,"column":16},"end":{"line":79,"column":43}},"33":{"start":{"line":82,"column":12},"end":{"line":82,"column":58}},"34":{"start":{"line":86,"column":4},"end":{"line":98,"column":7}},"35":{"start":{"line":87,"column":8},"end":{"line":91,"column":9}},"36":{"start":{"line":88,"column":12},"end":{"line":88,"column":68}},"37":{"start":{"line":90,"column":12},"end":{"line":90,"column":63}},"38":{"start":{"line":93,"column":8},"end":{"line":93,"column":42}},"39":{"start":{"line":95,"column":8},"end":{"line":97,"column":11}},"40":{"start":{"line":96,"column":12},"end":{"line":96,"column":56}},"41":{"start":{"line":100,"column":4},"end":{"line":100,"column":41}},"42":{"start":{"line":101,"column":4},"end":{"line":101,"column":24}},"43":{"start":{"line":109,"column":0},"end":{"line":125,"column":1}},"44":{"start":{"line":110,"column":1},"end":{"line":110,"column":59}},"45":{"start":{"line":112,"column":1},"end":{"line":114,"column":2}},"46":{"start":{"line":113,"column":2},"end":{"line":113,"column":76}},"47":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"48":{"start":{"line":117,"column":8},"end":{"line":117,"column":90}},"49":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"50":{"start":{"line":121,"column":8},"end":{"line":121,"column":120}},"51":{"start":{"line":124,"column":4},"end":{"line":124,"column":21}},"52":{"start":{"line":127,"column":0},"end":{"line":191,"column":1}},"53":{"start":{"line":129,"column":8},"end":{"line":129,"column":79}},"54":{"start":{"line":145,"column":8},"end":{"line":145,"column":17}},"55":{"start":{"line":147,"column":8},"end":{"line":150,"column":9}},"56":{"start":{"line":148,"column":12},"end":{"line":148,"column":38}},"57":{"start":{"line":149,"column":12},"end":{"line":149,"column":125}},"58":{"start":{"line":149,"column":23},"end":{"line":149,"column":125}},"59":{"start":{"line":152,"column":8},"end":{"line":152,"column":19}},"60":{"start":{"line":153,"column":8},"end":{"line":153,"column":19}},"61":{"start":{"line":154,"column":8},"end":{"line":165,"column":9}},"62":{"start":{"line":155,"column":12},"end":{"line":164,"column":13}},"63":{"start":{"line":156,"column":16},"end":{"line":156,"column":30}},"64":{"start":{"line":157,"column":19},"end":{"line":164,"column":13}},"65":{"start":{"line":159,"column":16},"end":{"line":159,"column":30}},"66":{"start":{"line":160,"column":19},"end":{"line":164,"column":13}},"67":{"start":{"line":161,"column":16},"end":{"line":161,"column":50}},"68":{"start":{"line":163,"column":16},"end":{"line":163,"column":80}},"69":{"start":{"line":167,"column":8},"end":{"line":167,"column":40}},"70":{"start":{"line":168,"column":8},"end":{"line":168,"column":39}},"71":{"start":{"line":169,"column":8},"end":{"line":169,"column":35}},"72":{"start":{"line":170,"column":8},"end":{"line":170,"column":41}},"73":{"start":{"line":171,"column":8},"end":{"line":171,"column":46}},"74":{"start":{"line":172,"column":8},"end":{"line":172,"column":62}},"75":{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},"76":{"start":{"line":175,"column":12},"end":{"line":175,"column":54}},"77":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"78":{"start":{"line":179,"column":12},"end":{"line":179,"column":76}},"79":{"start":{"line":182,"column":8},"end":{"line":189,"column":9}},"80":{"start":{"line":183,"column":12},"end":{"line":183,"column":88}},"81":{"start":{"line":184,"column":12},"end":{"line":184,"column":165}},"82":{"start":{"line":185,"column":15},"end":{"line":189,"column":9}},"83":{"start":{"line":186,"column":12},"end":{"line":186,"column":165}},"84":{"start":{"line":188,"column":12},"end":{"line":188,"column":163}},"85":{"start":{"line":193,"column":0},"end":{"line":195,"column":1}},"86":{"start":{"line":194,"column":4},"end":{"line":194,"column":36}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"6":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":19}},{"start":{"line":58,"column":23},"end":{"line":58,"column":90}}]},"7":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12}},{"start":{"line":67,"column":12},"end":{"line":67,"column":12}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":16},"end":{"line":73,"column":16}},{"start":{"line":73,"column":16},"end":{"line":73,"column":16}}]},"9":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":47},"end":{"line":76,"column":63}},{"start":{"line":76,"column":66},"end":{"line":76,"column":75}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"11":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":1},"end":{"line":112,"column":1}},{"start":{"line":112,"column":1},"end":{"line":112,"column":1}}]},"12":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"13":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"14":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"15":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"16":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"17":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":12},"end":{"line":155,"column":12}},{"start":{"line":155,"column":12},"end":{"line":155,"column":12}}]},"18":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":19},"end":{"line":157,"column":19}},{"start":{"line":157,"column":19},"end":{"line":157,"column":19}}]},"19":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":19},"end":{"line":160,"column":19}},{"start":{"line":160,"column":19},"end":{"line":160,"column":19}}]},"20":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":8}},{"start":{"line":174,"column":8},"end":{"line":174,"column":8}}]},"21":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"22":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":182,"column":8}},{"start":{"line":182,"column":8},"end":{"line":182,"column":8}}]},"23":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":15},"end":{"line":185,"column":15}},{"start":{"line":185,"column":15},"end":{"line":185,"column":15}}]},"24":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":0},"end":{"line":193,"column":0}},{"start":{"line":193,"column":0},"end":{"line":193,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Documents = require(\"./documents\")","  , Constants = require(\"./constants\")","  , https = require(\"https\")","  , url = require(\"url\")","  , querystring = require(\"querystring\")","  , RetryUtility = require(\"./retryUtility\")","  // Dedicated Agent for socket pooling","  , keepAliveAgent = new https.Agent({ keepAlive: true, maxSockets: Infinity });","","//----------------------------------------------------------------------------","// Utility methods","//","","function bodyFromData(data) {","    if (data.pipe) return data;","    if (Buffer.isBuffer(data)) return data;","    if (typeof data === \"string\") return data;","    if (typeof data === \"object\") return JSON.stringify(data);","    return undefined;","}","","function parse(urlString) { return url.parse(urlString); }","","function createRequestObject(connectionPolicy, requestOptions, callback){","    function onTimeout() {","        httpsRequest.abort();","    }","","    var isMedia = ( requestOptions.path.indexOf(\"media\") > -1 );","","    var httpsRequest = https.request(requestOptions, function(response) {","        // In case of media response, return the stream to the user and the user will need to handle reading the stream.","        if (isMedia && connectionPolicy.MediaReadMode === Documents.MediaReadMode.Streamed) {","            return callback(undefined, response, response.headers);","        }","","        var data = \"\";","        response.on(\"data\", function(chunk) {","            data += chunk;","        });","        response.on(\"end\", function() {","            if (response.statusCode >= 400) {","                return callback(getErrorBody(response, data), undefined, response.headers);","                }","","            var result;","            try {","                if (isMedia) {","                    result = data;","                } else {","                    result = data.length > 0 ? JSON.parse(data) : undefined;","                }","            } catch (exception) {","                return callback(exception);","            }","","            callback(undefined, result, response.headers);","        });","    });","","    httpsRequest.once(\"socket\", function(socket) {","        if (isMedia) {","            socket.setTimeout(connectionPolicy.MediaRequestTimeout);","        } else {","            socket.setTimeout(connectionPolicy.RequestTimeout);","        }","","        socket.once(\"timeout\", onTimeout);","","        httpsRequest.once(\"response\", function () {","            socket.removeListener(\"timeout\", onTimeout);","        });","    });","","    httpsRequest.once(\"error\", callback);","    return httpsRequest;","}","","/**","*  Constructs the error body from the response and the data returned from the request.","* @param {object} response - response object returned from the executon of a request.","* @param {object} data - the data body returned from the executon of a request.","*/","function getErrorBody(response, data) {","\tvar errorBody = { code: response.statusCode, body: data };","\t","\tif (Constants.HttpHeaders.ActivityId in response.headers) {","\t\terrorBody.activityId = response.headers[Constants.HttpHeaders.ActivityId];","\t}","    ","    if (Constants.HttpHeaders.SubStatus in response.headers) {","        errorBody.substatus = parseInt(response.headers[Constants.HttpHeaders.SubStatus]);","    }","    ","    if (Constants.HttpHeaders.RetryAfterInMilliseconds in response.headers) {","        errorBody.retryAfterInMilliseconds = parseInt(response.headers[Constants.HttpHeaders.RetryAfterInMilliseconds]);","    }","","    return errorBody;","}","","var RequestHandler = {","    _createRequestObjectStub: function (connectionPolicy, requestOptions, callback) {","        return createRequestObject(connectionPolicy, requestOptions, callback);","    },","","    /**","     *  Creates the request object, call the passed callback when the response is retrieved.","     * @param {object} globalEndpointManager - an instance of GlobalEndpointManager class.","     * @param {object} connectionPolicy - an instance of ConnectionPolicy that has the connection configs.","     * @param {string} method - the http request method ( 'get', 'post', 'put', .. etc ).","     * @param {String} url - The base url for the endpoint.","     * @param {string} path - the path of the requesed resource.","     * @param {Object} data - the request body. It can be either string, buffer, stream or undefined.","     * @param {Object} queryParams - query parameters for the request.","     * @param {Object} headers - specific headers for the request.","     * @param {function} callback - the callback that will be called when the response is retrieved and processed.","    */","    request: function (globalEndpointManager, connectionPolicy, method, url, path, data, queryParams, headers, callback) {","        var body;","        ","        if (data) {","            body = bodyFromData(data);","            if (!body) return callback({ message: \"parameter data must be a javascript object, string, Buffer, or stream\" });","        }","        ","        var buffer;","        var stream;","        if (body) {","            if (Buffer.isBuffer(body)) {","                buffer = body;","            } else if (body.pipe) {","                // it is a stream","                stream = body;","            } else if (typeof body === \"string\") {","                buffer = new Buffer(body, \"utf8\");","            } else {","                callback({ message: \"body must be string, Buffer, or stream\" });","            }","        }","        ","        var requestOptions = parse(url);","        requestOptions.method = method;","        requestOptions.path = path;","        requestOptions.headers = headers;","        requestOptions.agent = keepAliveAgent;","        requestOptions.secureProtocol = \"TLSv1_client_method\";","","        if (connectionPolicy.DisableSSLVerification === true) {","            requestOptions.rejectUnauthorized = false;","        }","","        if (queryParams) {","            requestOptions.path += \"?\" + querystring.stringify(queryParams);","        }","        ","        if (buffer) {","            requestOptions.headers[Constants.HttpHeaders.ContentLength] = buffer.length;","            RetryUtility.execute(globalEndpointManager, { buffer: buffer, stream: null }, this._createRequestObjectStub, connectionPolicy, requestOptions, callback);","        } else if (stream) {","            RetryUtility.execute(globalEndpointManager, { buffer: null, stream: stream }, this._createRequestObjectStub, connectionPolicy, requestOptions, callback);","        } else {","            RetryUtility.execute(globalEndpointManager, { buffer: null, stream: null }, this._createRequestObjectStub, connectionPolicy, requestOptions, callback);","        }","    }","}","","if (typeof exports !== \"undefined\") {","    module.exports = RequestHandler;","}",""],"l":{"26":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"47":1,"49":1,"50":1,"51":0,"54":0,"56":0,"58":0,"59":0,"62":0,"63":0,"64":0,"66":0,"67":0,"68":0,"71":0,"72":0,"73":0,"74":0,"76":0,"79":0,"82":0,"86":0,"87":0,"88":0,"90":0,"93":0,"95":0,"96":0,"100":0,"101":0,"109":1,"110":0,"112":0,"113":0,"116":0,"117":0,"120":0,"121":0,"124":0,"127":1,"129":0,"145":0,"147":0,"148":0,"149":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"159":0,"160":0,"161":0,"163":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"174":0,"175":0,"178":0,"179":0,"182":0,"183":0,"184":0,"185":0,"186":0,"188":0,"193":1,"194":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/retryUtility.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/retryUtility.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":13},"end":{"line":42,"column":121}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":11},"end":{"line":61,"column":155}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":85},"end":{"line":63,"column":119}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":49},"end":{"line":73,"column":72}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":39},"end":{"line":79,"column":51}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":29,"column":75}},"2":{"start":{"line":32,"column":0},"end":{"line":104,"column":1}},"3":{"start":{"line":43,"column":8},"end":{"line":43,"column":99}},"4":{"start":{"line":44,"column":8},"end":{"line":46,"column":100}},"5":{"start":{"line":48,"column":8},"end":{"line":48,"column":153}},"6":{"start":{"line":62,"column":8},"end":{"line":62,"column":24}},"7":{"start":{"line":63,"column":8},"end":{"line":91,"column":11}},"8":{"start":{"line":64,"column":12},"end":{"line":87,"column":13}},"9":{"start":{"line":65,"column":16},"end":{"line":65,"column":39}},"10":{"start":{"line":66,"column":16},"end":{"line":66,"column":40}},"11":{"start":{"line":67,"column":16},"end":{"line":71,"column":17}},"12":{"start":{"line":68,"column":20},"end":{"line":68,"column":63}},"13":{"start":{"line":69,"column":23},"end":{"line":71,"column":17}},"14":{"start":{"line":70,"column":20},"end":{"line":70,"column":62}},"15":{"start":{"line":72,"column":16},"end":{"line":86,"column":17}},"16":{"start":{"line":73,"column":20},"end":{"line":84,"column":23}},"17":{"start":{"line":74,"column":24},"end":{"line":83,"column":25}},"18":{"start":{"line":75,"column":28},"end":{"line":75,"column":121}},"19":{"start":{"line":76,"column":28},"end":{"line":76,"column":137}},"20":{"start":{"line":77,"column":28},"end":{"line":77,"column":68}},"21":{"start":{"line":79,"column":28},"end":{"line":81,"column":69}},"22":{"start":{"line":80,"column":32},"end":{"line":80,"column":177}},"23":{"start":{"line":82,"column":28},"end":{"line":82,"column":35}},"24":{"start":{"line":85,"column":20},"end":{"line":85,"column":27}},"25":{"start":{"line":88,"column":12},"end":{"line":88,"column":105}},"26":{"start":{"line":89,"column":12},"end":{"line":89,"column":121}},"27":{"start":{"line":90,"column":12},"end":{"line":90,"column":52}},"28":{"start":{"line":93,"column":8},"end":{"line":102,"column":9}},"29":{"start":{"line":94,"column":12},"end":{"line":101,"column":13}},"30":{"start":{"line":95,"column":16},"end":{"line":95,"column":50}},"31":{"start":{"line":96,"column":19},"end":{"line":101,"column":13}},"32":{"start":{"line":97,"column":16},"end":{"line":97,"column":51}},"33":{"start":{"line":98,"column":16},"end":{"line":98,"column":35}},"34":{"start":{"line":100,"column":16},"end":{"line":100,"column":35}},"35":{"start":{"line":107,"column":0},"end":{"line":109,"column":1}},"36":{"start":{"line":108,"column":4},"end":{"line":108,"column":34}}},"branchMap":{"1":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":12}},{"start":{"line":64,"column":12},"end":{"line":64,"column":12}}]},"2":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":26},"end":{"line":66,"column":33}},{"start":{"line":66,"column":37},"end":{"line":66,"column":39}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":16}},{"start":{"line":67,"column":16},"end":{"line":67,"column":16}}]},"4":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":83}},{"start":{"line":67,"column":87},"end":{"line":67,"column":165}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":23},"end":{"line":69,"column":23}},{"start":{"line":69,"column":23},"end":{"line":69,"column":23}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":16}},{"start":{"line":72,"column":16},"end":{"line":72,"column":16}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":24},"end":{"line":74,"column":24}},{"start":{"line":74,"column":24},"end":{"line":74,"column":24}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"9":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":12}},{"start":{"line":94,"column":12},"end":{"line":94,"column":12}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":19},"end":{"line":96,"column":19}},{"start":{"line":96,"column":19},"end":{"line":96,"column":19}}]},"11":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":0},"end":{"line":107,"column":0}},{"start":{"line":107,"column":0},"end":{"line":107,"column":0}}]}},"code":["﻿/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\"),","    Constants = require(\"./constants\"),","    EndpointDiscoveryRetryPolicy = require(\"./endpointDiscoveryRetryPolicy\"),","    ResourceThrottleRetryPolicy = require(\"./resourceThrottleRetryPolicy\");","","//SCRIPT START","var RetryUtility = {","    /**","    * Executes the retry policy for the created request object.","    * @param {object} globalEndpointManager - an instance of GlobalEndpointManager class.","    * @param {object} body - a dictionary containing 'buffer' and 'stream' keys to hold corresponding buffer or stream body, null otherwise.","    * @param {function} createRequestObjectStub - stub function that creates the request object.","    * @param {object} connectionPolicy - an instance of ConnectionPolicy that has the connection configs.","    * @param {RequestOptions} requestOptions - The request options.","    * @param {function} callback - the callback that will be called when the request is finished executing.","    */","    execute: function (globalEndpointManager, body, createRequestObjectFunc, connectionPolicy, requestOptions, callback) {","        var endpointDiscoveryRetryPolicy = new EndpointDiscoveryRetryPolicy(globalEndpointManager);","        var resourceThrottleRetryPolicy = new ResourceThrottleRetryPolicy(connectionPolicy.RetryOptions.MaxRetryAttemptCount, ","                                                connectionPolicy.RetryOptions.FixedRetryIntervalInMilliseconds,","                                                connectionPolicy.RetryOptions.MaxWaitTimeInSeconds);","","        this.apply(body, createRequestObjectFunc, connectionPolicy, requestOptions, endpointDiscoveryRetryPolicy, resourceThrottleRetryPolicy, callback);","    },","    ","    /**","    * Applies the retry policy for the created request object.","    * @param {object} body - a dictionary containing 'buffer' and 'stream' keys to hold corresponding buffer or stream body, null otherwise.","    * @param {function} createRequestObjectFunc - function that creates the request object.","    * @param {object} connectionPolicy - an instance of ConnectionPolicy that has the connection configs.","    * @param {RequestOptions} requestOptions - The request options.","    * @param {EndpointDiscoveryRetryPolicy} endpointDiscoveryRetryPolicy - The endpoint discovery retry policy instance.","    * @param {ResourceThrottleRetryPolicy} resourceThrottleRetryPolicy - The resource throttle retry policy instance.","    * @param {function} callback - the callback that will be called when the response is retrieved and processed.","    */","    apply: function (body, createRequestObjectFunc, connectionPolicy, requestOptions, endpointDiscoveryRetryPolicy, resourceThrottleRetryPolicy, callback) {","        var that = this;","        var httpsRequest = createRequestObjectFunc(connectionPolicy, requestOptions, function (err, response, headers) {","            if (err) {","                var retryPolicy = null;","                headers = headers || {};","                if (err.code === EndpointDiscoveryRetryPolicy.FORBIDDEN_STATUS_CODE && err.substatus === EndpointDiscoveryRetryPolicy.WRITE_FORBIDDEN_SUB_STATUS_CODE) {","                    retryPolicy = endpointDiscoveryRetryPolicy;","                } else if (err.code === ResourceThrottleRetryPolicy.THROTTLE_STATUS_CODE) {","                    retryPolicy = resourceThrottleRetryPolicy;","                }","                if (retryPolicy) {","                    retryPolicy.shouldRetry(err, function (shouldRetry) {","                        if (!shouldRetry) {","                            headers[Constants.ThrottleRetryCount] = resourceThrottleRetryPolicy.currentRetryAttemptCount;","                            headers[Constants.ThrottleRetryWaitTimeInMs] = resourceThrottleRetryPolicy.cummulativeWaitTimeinMilliseconds;","                            return callback(err, response, headers);","                        } else {","                            setTimeout(function () {","                                that.apply(body, createRequestObjectFunc, connectionPolicy, requestOptions, endpointDiscoveryRetryPolicy, resourceThrottleRetryPolicy, callback);","                            }, retryPolicy.retryAfterInMilliseconds);","                            return;","                        }","                    });","                    return;","                }","            }","            headers[Constants.ThrottleRetryCount] = resourceThrottleRetryPolicy.currentRetryAttemptCount;","            headers[Constants.ThrottleRetryWaitTimeInMs] = resourceThrottleRetryPolicy.cummulativeWaitTimeinMilliseconds;","            return callback(err, response, headers);","        });","        ","        if (httpsRequest) {","            if (body[\"stream\"] !== null) {","                body[\"stream\"].pipe(httpsRequest);","            } else if (body[\"buffer\"] !== null) {","                httpsRequest.write(body[\"buffer\"]);","                httpsRequest.end();","            } else {","                httpsRequest.end();","            }","        }","    }","}","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = RetryUtility;","}"],"l":{"26":1,"32":1,"43":0,"44":0,"48":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"79":0,"80":0,"82":0,"85":0,"88":0,"89":0,"90":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"107":1,"108":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/endpointDiscoveryRetryPolicy.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/endpointDiscoveryRetryPolicy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[1,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":41,"loc":{"start":{"line":41,"column":4},"end":{"line":41,"column":37}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":21},"end":{"line":53,"column":46}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":67},"end":{"line":59,"column":106}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}},"2":{"start":{"line":36,"column":0},"end":{"line":76,"column":2}},"3":{"start":{"line":42,"column":8},"end":{"line":42,"column":87}},"4":{"start":{"line":43,"column":8},"end":{"line":43,"column":42}},"5":{"start":{"line":44,"column":8},"end":{"line":44,"column":59}},"6":{"start":{"line":45,"column":8},"end":{"line":45,"column":94}},"7":{"start":{"line":54,"column":12},"end":{"line":66,"column":13}},"8":{"start":{"line":55,"column":16},"end":{"line":65,"column":17}},"9":{"start":{"line":56,"column":20},"end":{"line":56,"column":52}},"10":{"start":{"line":57,"column":20},"end":{"line":57,"column":139}},"11":{"start":{"line":58,"column":20},"end":{"line":58,"column":36}},"12":{"start":{"line":59,"column":20},"end":{"line":63,"column":23}},"13":{"start":{"line":60,"column":24},"end":{"line":60,"column":83}},"14":{"start":{"line":61,"column":24},"end":{"line":61,"column":81}},"15":{"start":{"line":62,"column":24},"end":{"line":62,"column":39}},"16":{"start":{"line":64,"column":20},"end":{"line":64,"column":27}},"17":{"start":{"line":67,"column":12},"end":{"line":67,"column":35}},"18":{"start":{"line":79,"column":0},"end":{"line":81,"column":1}},"19":{"start":{"line":80,"column":4},"end":{"line":80,"column":50}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":12}},{"start":{"line":54,"column":12},"end":{"line":54,"column":12}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":16}},{"start":{"line":55,"column":16},"end":{"line":55,"column":16}}]},"3":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":20},"end":{"line":55,"column":78}},{"start":{"line":55,"column":82},"end":{"line":55,"column":132}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":0},"end":{"line":79,"column":0}},{"start":{"line":79,"column":0},"end":{"line":79,"column":0}}]}},"code":["﻿/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\");","","//SCRIPT START","/**","     * This class implements the retry policy for endpoint discovery.","     * @property {int} _maxRetryAttemptCount                           - Max number of retry attempts to perform.","     * @property {int} currentRetryAttemptCount                        - Current retry attempt count.","     * @property {object} globalEndpointManager                        - The GlobalEndpointManager instance.","     * @property {int} retryAfterInMilliseconds                        - Retry interval in milliseconds.","*/","var EndpointDiscoveryRetryPolicy = Base.defineClass(","    /**","     * @constructor EndpointDiscoveryRetryPolicy","     * @param {object} globalEndpointManager                           - The GlobalEndpointManager instance.","    */","    function (globalEndpointManager) {","        this._maxRetryAttemptCount = EndpointDiscoveryRetryPolicy.maxRetryAttemptCount;","        this.currentRetryAttemptCount = 0;","        this.globalEndpointManager = globalEndpointManager;","        this.retryAfterInMilliseconds = EndpointDiscoveryRetryPolicy.retryAfterInMilliseconds;","    }, ","    {","        /**","         * Determines whether the request should be retried or not.","         * @param {object} err - Error returned by the request.","         * @param {function} callback - The callback function which takes bool argument which specifies whether the request will be retried or not.","        */","        shouldRetry: function (err, callback) {","            if (err) {","                if (this.currentRetryAttemptCount < this._maxRetryAttemptCount && this.globalEndpointManager.enableEndpointDiscovery) {","                    this.currentRetryAttemptCount++;","                    console.log(\"Write region was changed, refreshing the regions list from database account and will retry the request.\");","                    var that = this;","                    this.globalEndpointManager.refreshEndpointList(function (writeEndpoint, readEndpoint) {","                        that.globalEndpointManager.setWriteEndpoint(writeEndpoint);","                        that.globalEndpointManager.setReadEndpoint(readEndpoint);","                        callback(true);","                    });","                    return;","                }","            }","            return callback(false);","        }","    },","    {","        maxRetryAttemptCount : 120,","        retryAfterInMilliseconds : 1000,","        FORBIDDEN_STATUS_CODE : 403,","        WRITE_FORBIDDEN_SUB_STATUS_CODE : 3","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = EndpointDiscoveryRetryPolicy;","}"],"l":{"26":1,"36":1,"42":0,"43":0,"44":0,"45":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"64":0,"67":0,"79":1,"80":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/resourceThrottleRetryPolicy.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/resourceThrottleRetryPolicy.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[1,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":44,"loc":{"start":{"line":44,"column":4},"end":{"line":44,"column":92}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":21},"end":{"line":57,"column":46}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}},"2":{"start":{"line":37,"column":0},"end":{"line":81,"column":2}},"3":{"start":{"line":45,"column":8},"end":{"line":45,"column":58}},"4":{"start":{"line":46,"column":8},"end":{"line":46,"column":82}},"5":{"start":{"line":47,"column":8},"end":{"line":47,"column":70}},"6":{"start":{"line":48,"column":8},"end":{"line":48,"column":42}},"7":{"start":{"line":49,"column":8},"end":{"line":49,"column":51}},"8":{"start":{"line":58,"column":12},"end":{"line":74,"column":13}},"9":{"start":{"line":59,"column":16},"end":{"line":73,"column":17}},"10":{"start":{"line":60,"column":20},"end":{"line":60,"column":52}},"11":{"start":{"line":61,"column":20},"end":{"line":61,"column":54}},"12":{"start":{"line":63,"column":20},"end":{"line":67,"column":21}},"13":{"start":{"line":64,"column":24},"end":{"line":64,"column":95}},"14":{"start":{"line":65,"column":27},"end":{"line":67,"column":21}},"15":{"start":{"line":66,"column":24},"end":{"line":66,"column":85}},"16":{"start":{"line":69,"column":20},"end":{"line":72,"column":21}},"17":{"start":{"line":70,"column":24},"end":{"line":70,"column":96}},"18":{"start":{"line":71,"column":24},"end":{"line":71,"column":46}},"19":{"start":{"line":75,"column":12},"end":{"line":75,"column":35}},"20":{"start":{"line":84,"column":0},"end":{"line":86,"column":1}},"21":{"start":{"line":85,"column":4},"end":{"line":85,"column":49}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":12}},{"start":{"line":58,"column":12},"end":{"line":58,"column":12}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":16},"end":{"line":59,"column":16}},{"start":{"line":59,"column":16},"end":{"line":59,"column":16}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":20}},{"start":{"line":63,"column":20},"end":{"line":63,"column":20}}]},"4":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":27},"end":{"line":65,"column":27}},{"start":{"line":65,"column":27},"end":{"line":65,"column":27}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":20},"end":{"line":69,"column":20}},{"start":{"line":69,"column":20},"end":{"line":69,"column":20}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":0},"end":{"line":84,"column":0}},{"start":{"line":84,"column":0},"end":{"line":84,"column":0}}]}},"code":["﻿/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\");","","//SCRIPT START","/**","     * This class implements the resource throttle retry policy for requests.","     * @property {int} _maxRetryAttemptCount              - Max number of retries to be performed for a request.","     * @property {int} _fixedRetryIntervalInMilliseconds  - Fixed retry interval in milliseconds to wait between each retry ignoring the retryAfter returned as part of the response. ","     * @property {int} _maxWaitTimeInMilliseconds         - Max wait time in milliseconds to wait for a request while the retries are happening.","     * @property {int} currentRetryAttemptCount           - Current retry attempt count.","     * @property {int} cummulativeWaitTimeinMilliseconds  - Cummulative wait time in milliseconds for a request while the retries are happening.","*/","var ResourceThrottleRetryPolicy = Base.defineClass(","    /**","     * @constructor ResourceThrottleRetryPolicy","     * @param {int} maxRetryAttemptCount               - Max number of retries to be performed for a request.","     * @param {int} fixedRetryIntervalInMilliseconds   - Fixed retry interval in milliseconds to wait between each retry ignoring the retryAfter returned as part of the response.","     * @param {int} maxWaitTimeInSeconds               - Max wait time in seconds to wait for a request while the retries are happening.","    */","    function (maxRetryAttemptCount, fixedRetryIntervalInMilliseconds, maxWaitTimeInSeconds) {","        this._maxRetryAttemptCount = maxRetryAttemptCount;","        this._fixedRetryIntervalInMilliseconds = fixedRetryIntervalInMilliseconds;","        this._maxWaitTimeInMilliseconds = maxWaitTimeInSeconds * 1000;","        this.currentRetryAttemptCount = 0;","        this.cummulativeWaitTimeinMilliseconds = 0;","    }, ","    {","        /**","         * Determines whether the request should be retried or not.","         * @param {object} err - Error returned by the request.","         * @param {function} callback - The callback function which takes bool argument which specifies whether the request will be retried or not.","        */","        shouldRetry: function (err, callback) {","            if (err) {","                if (this.currentRetryAttemptCount < this._maxRetryAttemptCount) {","                    this.currentRetryAttemptCount++;","                    this.retryAfterInMilliseconds = 0;","","                    if (this._fixedRetryIntervalInMilliseconds) {","                        this.retryAfterInMilliseconds = this._fixedRetryIntervalInMilliseconds;","                    } else if (err.retryAfterInMilliseconds) {","                        this.retryAfterInMilliseconds = err.retryAfterInMilliseconds;","                    }","    ","                    if (this.cummulativeWaitTimeinMilliseconds < this._maxWaitTimeInMilliseconds) {","                        this.cummulativeWaitTimeinMilliseconds += this.retryAfterInMilliseconds;","                        return callback(true);","                    }","                }","            }","            return callback(false);","        }","    },","    {","        THROTTLE_STATUS_CODE: 429","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    module.exports = ResourceThrottleRetryPolicy;","}"],"l":{"26":1,"37":1,"45":0,"46":0,"47":0,"48":0,"49":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"69":0,"70":0,"71":0,"75":0,"84":1,"85":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/globalEndpointManager.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/globalEndpointManager.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":45,"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":22}}},"2":{"name":"(anonymous_2)","line":60,"loc":{"start":{"line":60,"column":25},"end":{"line":60,"column":45}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":41},"end":{"line":62,"column":80}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":25},"end":{"line":75,"column":49}}},"5":{"name":"(anonymous_5)","line":84,"loc":{"start":{"line":84,"column":26},"end":{"line":84,"column":46}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":41},"end":{"line":86,"column":80}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":26},"end":{"line":99,"column":51}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":29},"end":{"line":110,"column":49}}},"9":{"name":"(anonymous_9)","line":117,"loc":{"start":{"line":117,"column":41},"end":{"line":117,"column":68}}},"10":{"name":"(anonymous_10)","line":124,"loc":{"start":{"line":124,"column":85},"end":{"line":124,"column":106}}},"11":{"name":"(anonymous_11)","line":143,"loc":{"start":{"line":143,"column":29},"end":{"line":143,"column":49}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":52},"end":{"line":146,"column":84}}},"13":{"name":"(anonymous_13)","line":151,"loc":{"start":{"line":151,"column":31},"end":{"line":151,"column":85}}},"14":{"name":"(anonymous_14)","line":155,"loc":{"start":{"line":155,"column":68},"end":{"line":155,"column":100}}},"15":{"name":"(anonymous_15)","line":180,"loc":{"start":{"line":180,"column":32},"end":{"line":180,"column":73}}},"16":{"name":"(anonymous_16)","line":211,"loc":{"start":{"line":211,"column":31},"end":{"line":211,"column":89}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":28,"column":27}},"2":{"start":{"line":40,"column":0},"end":{"line":266,"column":7}},"3":{"start":{"line":46,"column":8},"end":{"line":46,"column":29}},"4":{"start":{"line":47,"column":8},"end":{"line":47,"column":52}},"5":{"start":{"line":48,"column":8},"end":{"line":48,"column":50}},"6":{"start":{"line":49,"column":8},"end":{"line":49,"column":51}},"7":{"start":{"line":50,"column":8},"end":{"line":50,"column":87}},"8":{"start":{"line":51,"column":8},"end":{"line":51,"column":77}},"9":{"start":{"line":52,"column":8},"end":{"line":52,"column":48}},"10":{"start":{"line":61,"column":12},"end":{"line":67,"column":13}},"11":{"start":{"line":62,"column":16},"end":{"line":64,"column":19}},"12":{"start":{"line":63,"column":20},"end":{"line":63,"column":43}},"13":{"start":{"line":66,"column":16},"end":{"line":66,"column":45}},"14":{"start":{"line":76,"column":12},"end":{"line":76,"column":46}},"15":{"start":{"line":85,"column":12},"end":{"line":91,"column":13}},"16":{"start":{"line":86,"column":16},"end":{"line":88,"column":19}},"17":{"start":{"line":87,"column":20},"end":{"line":87,"column":44}},"18":{"start":{"line":90,"column":16},"end":{"line":90,"column":46}},"19":{"start":{"line":100,"column":12},"end":{"line":100,"column":48}},"20":{"start":{"line":111,"column":12},"end":{"line":111,"column":39}},"21":{"start":{"line":112,"column":12},"end":{"line":112,"column":39}},"22":{"start":{"line":113,"column":12},"end":{"line":113,"column":32}},"23":{"start":{"line":115,"column":12},"end":{"line":115,"column":28}},"24":{"start":{"line":116,"column":12},"end":{"line":133,"column":13}},"25":{"start":{"line":117,"column":16},"end":{"line":130,"column":19}},"26":{"start":{"line":118,"column":20},"end":{"line":121,"column":21}},"27":{"start":{"line":119,"column":24},"end":{"line":119,"column":78}},"28":{"start":{"line":120,"column":24},"end":{"line":120,"column":78}},"29":{"start":{"line":124,"column":20},"end":{"line":129,"column":23}},"30":{"start":{"line":125,"column":24},"end":{"line":125,"column":59}},"31":{"start":{"line":126,"column":24},"end":{"line":126,"column":58}},"32":{"start":{"line":127,"column":24},"end":{"line":127,"column":63}},"33":{"start":{"line":128,"column":24},"end":{"line":128,"column":74}},"34":{"start":{"line":132,"column":16},"end":{"line":132,"column":66}},"35":{"start":{"line":144,"column":12},"end":{"line":144,"column":28}},"36":{"start":{"line":145,"column":12},"end":{"line":145,"column":66}},"37":{"start":{"line":146,"column":12},"end":{"line":171,"column":15}},"38":{"start":{"line":150,"column":16},"end":{"line":170,"column":17}},"39":{"start":{"line":151,"column":20},"end":{"line":165,"column":21}},"40":{"start":{"line":152,"column":24},"end":{"line":164,"column":25}},"41":{"start":{"line":153,"column":28},"end":{"line":153,"column":125}},"42":{"start":{"line":154,"column":28},"end":{"line":154,"column":80}},"43":{"start":{"line":155,"column":28},"end":{"line":161,"column":31}},"44":{"start":{"line":156,"column":32},"end":{"line":160,"column":33}},"45":{"start":{"line":157,"column":36},"end":{"line":157,"column":89}},"46":{"start":{"line":159,"column":36},"end":{"line":159,"column":69}},"47":{"start":{"line":163,"column":28},"end":{"line":163,"column":50}},"48":{"start":{"line":166,"column":20},"end":{"line":166,"column":75}},"49":{"start":{"line":169,"column":20},"end":{"line":169,"column":53}},"50":{"start":{"line":183,"column":12},"end":{"line":183,"column":69}},"51":{"start":{"line":186,"column":12},"end":{"line":199,"column":13}},"52":{"start":{"line":187,"column":16},"end":{"line":187,"column":95}},"53":{"start":{"line":188,"column":16},"end":{"line":198,"column":17}},"54":{"start":{"line":190,"column":20},"end":{"line":190,"column":69}},"55":{"start":{"line":193,"column":20},"end":{"line":193,"column":120}},"56":{"start":{"line":196,"column":20},"end":{"line":196,"column":141}},"57":{"start":{"line":197,"column":20},"end":{"line":197,"column":46}},"58":{"start":{"line":201,"column":12},"end":{"line":201,"column":24}},"59":{"start":{"line":212,"column":12},"end":{"line":212,"column":30}},"60":{"start":{"line":213,"column":12},"end":{"line":213,"column":29}},"61":{"start":{"line":216,"column":12},"end":{"line":220,"column":13}},"62":{"start":{"line":217,"column":16},"end":{"line":217,"column":53}},"63":{"start":{"line":218,"column":16},"end":{"line":218,"column":52}},"64":{"start":{"line":219,"column":16},"end":{"line":219,"column":63}},"65":{"start":{"line":224,"column":12},"end":{"line":228,"column":13}},"66":{"start":{"line":225,"column":16},"end":{"line":225,"column":53}},"67":{"start":{"line":227,"column":16},"end":{"line":227,"column":88}},"68":{"start":{"line":231,"column":12},"end":{"line":264,"column":13}},"69":{"start":{"line":232,"column":16},"end":{"line":232,"column":45}},"70":{"start":{"line":233,"column":16},"end":{"line":233,"column":63}},"71":{"start":{"line":237,"column":16},"end":{"line":237,"column":45}},"72":{"start":{"line":239,"column":16},"end":{"line":241,"column":17}},"73":{"start":{"line":240,"column":20},"end":{"line":240,"column":67}},"74":{"start":{"line":243,"column":16},"end":{"line":261,"column":17}},"75":{"start":{"line":244,"column":20},"end":{"line":244,"column":71}},"76":{"start":{"line":246,"column":20},"end":{"line":252,"column":21}},"77":{"start":{"line":247,"column":24},"end":{"line":247,"column":64}},"78":{"start":{"line":248,"column":24},"end":{"line":251,"column":25}},"79":{"start":{"line":249,"column":28},"end":{"line":249,"column":91}},"80":{"start":{"line":250,"column":28},"end":{"line":250,"column":75}},"81":{"start":{"line":254,"column":20},"end":{"line":260,"column":21}},"82":{"start":{"line":255,"column":24},"end":{"line":255,"column":65}},"83":{"start":{"line":256,"column":24},"end":{"line":259,"column":25}},"84":{"start":{"line":257,"column":28},"end":{"line":257,"column":92}},"85":{"start":{"line":258,"column":28},"end":{"line":258,"column":75}},"86":{"start":{"line":263,"column":16},"end":{"line":263,"column":63}},"87":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"88":{"start":{"line":270,"column":8},"end":{"line":270,"column":47}}},"branchMap":{"1":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]},"2":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":12}},{"start":{"line":85,"column":12},"end":{"line":85,"column":12}}]},"3":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":12},"end":{"line":116,"column":12}},{"start":{"line":116,"column":12},"end":{"line":116,"column":12}}]},"4":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":20},"end":{"line":118,"column":20}},{"start":{"line":118,"column":20},"end":{"line":118,"column":20}}]},"5":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":16},"end":{"line":150,"column":16}},{"start":{"line":150,"column":16},"end":{"line":150,"column":16}}]},"6":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":24},"end":{"line":152,"column":24}},{"start":{"line":152,"column":24},"end":{"line":152,"column":24}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":32},"end":{"line":156,"column":32}},{"start":{"line":156,"column":32},"end":{"line":156,"column":32}}]},"8":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":186,"column":12}},{"start":{"line":186,"column":12},"end":{"line":186,"column":12}}]},"9":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":16},"end":{"line":188,"column":16}},{"start":{"line":188,"column":16},"end":{"line":188,"column":16}}]},"10":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":12},"end":{"line":216,"column":12}},{"start":{"line":216,"column":12},"end":{"line":216,"column":12}}]},"11":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":224,"column":12}},{"start":{"line":224,"column":12},"end":{"line":224,"column":12}}]},"12":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":12},"end":{"line":231,"column":12}},{"start":{"line":231,"column":12},"end":{"line":231,"column":12}}]},"13":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":16},"end":{"line":239,"column":16}},{"start":{"line":239,"column":16},"end":{"line":239,"column":16}}]},"14":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":24},"end":{"line":248,"column":24}},{"start":{"line":248,"column":24},"end":{"line":248,"column":24}}]},"15":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":24},"end":{"line":256,"column":24}},{"start":{"line":256,"column":24},"end":{"line":256,"column":24}}]},"16":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]}},"code":["﻿/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\")","    , Constants = require(\"./constants\")","    , url = require(\"url\");","","//SCRIPT START","/**","     * This internal class implements the logic for endpoint management for geo-replicated","       database accounts.","     * @property {object} client                       - The document client instance.","     * @property {string} defaultEndpoint              - The endpoint used to create the client instance.","     * @property {bool} enableEndpointDiscovery        - Flag to enable/disable automatic redirecting of requests based on read/write operations.","     * @property {Array} preferredLocations            - List of azure regions to be used as preferred locations for read requests.","     * @property {bool} isEndpointCacheInitialized     - Flag to determine whether the endpoint cache is initialized or not.","*/","var GlobalEndpointManager = Base.defineClass(","    /**","     * @constructor GlobalEndpointManager","     * @param {object} client                          - The document client instance.","    */","    function (client) {","        this.client = client;","        this.defaultEndpoint = client.urlConnection;","        this._readEndpoint = client.urlConnection;","        this._writeEndpoint = client.urlConnection;","        this.enableEndpointDiscovery = client.connectionPolicy.EnableEndpointDiscovery;","        this.preferredLocations = client.connectionPolicy.PreferredLocations;","        this.isEndpointCacheInitialized = false;","    }, ","    {","        /** Gets the current read endpoint from the endpoint cache.","         * @memberof GlobalEndpointManager","         * @instance","         * @param {function} callback        - The callback function which takes readEndpoint(string) as an argument.","        */","        getReadEndpoint: function (callback) {","            if (!this.isEndpointCacheInitialized) {","                this.refreshEndpointList(function (writeEndpoint, readEndpoint) {","                    callback(readEndpoint);","                });","            } else {","                callback(this._readEndpoint);","            }","        },","        ","        /** Sets the current read endpoint.","         * @memberof GlobalEndpointManager","         * @instance","         * @param {string} readEndpoint        - The endpoint to be set as readEndpoint.","        */","        setReadEndpoint: function (readEndpoint) {","            this._readEndpoint = readEndpoint;","        },","        ","        /** Gets the current write endpoint from the endpoint cache.","         * @memberof GlobalEndpointManager","         * @instance","         * @param {function} callback        - The callback function which takes writeEndpoint(string) as an argument.","        */","        getWriteEndpoint: function (callback) {","            if (!this.isEndpointCacheInitialized) {","                this.refreshEndpointList(function (writeEndpoint, readEndpoint) {","                    callback(writeEndpoint);","                });","            } else {","                callback(this._writeEndpoint);","            }","        },","        ","        /** Sets the current write endpoint.","         * @memberof GlobalEndpointManager","         * @instance","         * @param {string} writeEndpoint        - The endpoint to be set as writeEndpoint.","        */","        setWriteEndpoint: function (writeEndpoint) {","            this._writeEndpoint = writeEndpoint;","        },","        ","        /** Refreshes the endpoint list by retrieving the writable and readable locations","            from the geo-replicated database account and then updating the locations cache.","            We skip the refreshing if EnableEndpointDiscovery is set to False","         * @memberof GlobalEndpointManager","         * @instance","         * @param {function} callback        - The callback function which takes writeEndpoint(string) and readEndpoint(string) as arguments.","        */","        refreshEndpointList: function (callback) {","            var writableLocations = [];","            var readableLocations = [];","            var databaseAccount;","            ","            var that = this;","            if (this.enableEndpointDiscovery) {","                this._getDatabaseAccount(function (databaseAccount) {","                    if (databaseAccount) {","                        writableLocations = databaseAccount.WritableLocations;","                        readableLocations = databaseAccount.ReadableLocations;","                    }","                    ","                    // Read and Write endpoints will be initialized to default endpoint if we were not able to get the database account info","                    that._updateLocationsCache(writableLocations, readableLocations, function (endpoints) {","                        that._writeEndpoint = endpoints[0];","                        that._readEndpoint = endpoints[1];","                        that.isEndpointCacheInitialized = true;","                        callback(that._writeEndpoint, that._readEndpoint);","                    });","                });","            } else {","                callback(that._writeEndpoint, that._readEndpoint);","            }","        },","        ","        /** Gets the database account first by using the default endpoint, and if that doesn't returns","           use the endpoints for the preferred locations in the order they are specified to get ","           the database account.","         * @memberof GlobalEndpointManager","         * @instance","         * @param {function} callback        - The callback function which takes databaseAccount(object) as an argument.","        */","        _getDatabaseAccount: function (callback) {","            var that = this;","            var options = { urlConnection: this.defaultEndpoint };","            this.client.getDatabaseAccount(options, function (err, databaseAccount) {","                // If for any reason(non - globaldb related), we are not able to get the database account from the above call to getDatabaseAccount,","                // we would try to get this information from any of the preferred locations that the user might have specified(by creating a locational endpoint)","                // and keeping eating the exception until we get the database account and return None at the end, if we are not able to get that info from any endpoints","                if (err) {","                    var func = function (defaultEndpoint, preferredLocations, index) {","                        if (index < preferredLocations.length) {","                            var locationalEndpoint = that._getLocationalEndpoint(defaultEndpoint, preferredLocations[index]);","                            var options = { urlConnection: locationalEndpoint };","                            that.client.getDatabaseAccount(options, function (err, databaseAccount) {","                                if (err) {","                                    func(defaultEndpoint, preferredLocations, index + 1);","                                } else {","                                    return callback(databaseAccount);","                                }","                            });","                        } else {","                            return callback(null);","                        }","                    }","                    func(that.defaultEndpoint, that.preferredLocations, 0);","","                } else {","                    return callback(databaseAccount);","                }","            });","        },","","        /** Gets the locational endpoint using the location name passed to it using the default endpoint.","         * @memberof GlobalEndpointManager","         * @instance","         * @param {string} defaultEndpoint - The default endpoint to use for teh endpoint.","         * @param {string} locationName    - The location name for the azure region like \"East US\".","        */","        _getLocationalEndpoint: function (defaultEndpoint, locationName) {","            // For defaultEndpoint like 'https://contoso.documents.azure.com:443/' parse it to generate URL format","            // This defaultEndpoint should be global endpoint(and cannot be a locational endpoint) and we agreed to document that","            var endpointUrl = url.parse(defaultEndpoint, true, true);","            ","            // hostname attribute in endpointUrl will return 'contoso.documents.azure.com'","            if (endpointUrl.hostname) {","                var hostnameParts = (endpointUrl.hostname).toString().toLowerCase().split(\".\");","                if (hostnameParts) {","                    // globalDatabaseAccountName will return 'contoso'","                    var globalDatabaseAccountName = hostnameParts[0];","                    ","                    // Prepare the locationalDatabaseAccountName as contoso-EastUS for location_name 'East US'","                    var locationalDatabaseAccountName = globalDatabaseAccountName + \"-\" + locationName.replace(\" \", \"\");","                    ","                    // Replace 'contoso' with 'contoso-EastUS' and return locationalEndpoint as https://contoso-EastUS.documents.azure.com:443/","                    var locationalEndpoint = defaultEndpoint.toLowerCase().replace(globalDatabaseAccountName, locationalDatabaseAccountName);","                    return locationalEndpoint;","                }","            }","            ","            return null;","        },","        ","        /** Updates the read and write endpoints from the passed-in readable and writable locations.","         * @memberof GlobalEndpointManager","         * @instance","         * @param {Array} writableLocations     - The list of writable locations for the geo-enabled database account.","         * @param {Array} readableLocations     - The list of readable locations for the geo-enabled database account.","         * @param {function} callback           - The function to be called as callback after executing this method.","        */","        _updateLocationsCache: function (writableLocations, readableLocations, callback) {","            var writeEndpoint;","            var readEndpoint;","            // Use the default endpoint as Read and Write endpoints if EnableEndpointDiscovery","            // is set to False.","            if (!this.enableEndpointDiscovery) {","                writeEndpoint = this.defaultEndpoint;","                readEndpoint = this.defaultEndpoint;","                return callback([writeEndpoint, readEndpoint]);","            }","            ","            // Use the default endpoint as Write endpoint if there are no writable locations, or","            // first writable location as Write endpoint if there are writable locations","            if (writableLocations.length === 0) {","                writeEndpoint = this.defaultEndpoint;","            } else {","                writeEndpoint = writableLocations[0][Constants.DatabaseAccountEndpoint];","            }","            ","            // Use the Write endpoint as Read endpoint if there are no readable locations","            if (readableLocations.length === 0) {","                readEndpoint = writeEndpoint;","                return callback([writeEndpoint, readEndpoint]);","            } else {","                // Use the writable location as Read endpoint if there are no preferred locations or","                // none of the preferred locations are in read or write locations","                readEndpoint = writeEndpoint;","","                if (!this.preferredLocations) {","                    return callback([writeEndpoint, readEndpoint]);","                }","","                for (var i= 0; i < this.preferredLocations.length; i++) {","                    var preferredLocation = this.preferredLocations[i];","                    // Use the first readable location as Read endpoint from the preferred locations","                    for (var j = 0; j < readableLocations.length; j++) {","                        var readLocation = readableLocations[j];","                        if (readLocation[Constants.Name] === preferredLocation) {","                            readEndpoint = readLocation[Constants.DatabaseAccountEndpoint];","                            return callback([writeEndpoint, readEndpoint]);","                        }","                    }","                    // Else, use the first writable location as Read endpoint from the preferred locations","                    for (var k = 0; k < writableLocations.length; k++) {","                        var writeLocation = writableLocations[k];","                        if (writeLocation[Constants.Name] === preferredLocation) {","                            readEndpoint = writeLocation[Constants.DatabaseAccountEndpoint];","                            return callback([writeEndpoint, readEndpoint]);","                        }","                    }","                }","","                return callback([writeEndpoint, readEndpoint]);","            }","        }","    });","//SCRIPT END","","    if (typeof exports !== \"undefined\") {","        module.exports = GlobalEndpointManager;","    }"],"l":{"26":1,"40":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"61":0,"62":0,"63":0,"66":0,"76":0,"85":0,"86":0,"87":0,"90":0,"100":0,"111":0,"112":0,"113":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"124":0,"125":0,"126":0,"127":0,"128":0,"132":0,"144":0,"145":0,"146":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"159":0,"163":0,"166":0,"169":0,"183":0,"186":0,"187":0,"188":0,"190":0,"193":0,"196":0,"197":0,"201":0,"212":0,"213":0,"216":0,"217":0,"218":0,"219":0,"224":0,"225":0,"227":0,"231":0,"232":0,"233":0,"237":0,"239":0,"240":0,"243":0,"244":0,"246":0,"247":0,"248":0,"249":0,"250":0,"254":0,"255":0,"256":0,"257":0,"258":0,"263":0,"269":1,"270":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/hash/hashPartitionResolver.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/hash/hashPartitionResolver.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":38,"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":63}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":25},"end":{"line":54,"column":45}}},"3":{"name":"(anonymous_3)","line":65,"loc":{"start":{"line":65,"column":24},"end":{"line":65,"column":48}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":26},"end":{"line":79,"column":50}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":18},"end":{"line":83,"column":42}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":46},"end":{"line":89,"column":79}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":37},"end":{"line":99,"column":61}}},"8":{"name":"(anonymous_8)","line":106,"loc":{"start":{"line":106,"column":40},"end":{"line":106,"column":67}}},"9":{"name":"(anonymous_9)","line":111,"loc":{"start":{"line":111,"column":37},"end":{"line":111,"column":63}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":79}},"3":{"start":{"line":29,"column":0},"end":{"line":115,"column":7}},"4":{"start":{"line":39,"column":8},"end":{"line":39,"column":90}},"5":{"start":{"line":40,"column":8},"end":{"line":40,"column":78}},"6":{"start":{"line":41,"column":8},"end":{"line":41,"column":59}},"7":{"start":{"line":43,"column":8},"end":{"line":43,"column":32}},"8":{"start":{"line":44,"column":8},"end":{"line":44,"column":83}},"9":{"start":{"line":45,"column":8},"end":{"line":45,"column":47}},"10":{"start":{"line":55,"column":12},"end":{"line":57,"column":55}},"11":{"start":{"line":66,"column":12},"end":{"line":68,"column":13}},"12":{"start":{"line":67,"column":16},"end":{"line":67,"column":44}},"13":{"start":{"line":70,"column":12},"end":{"line":70,"column":49}},"14":{"start":{"line":80,"column":12},"end":{"line":80,"column":47}},"15":{"start":{"line":84,"column":12},"end":{"line":84,"column":76}},"16":{"start":{"line":85,"column":12},"end":{"line":85,"column":65}},"17":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"18":{"start":{"line":91,"column":16},"end":{"line":91,"column":85}},"19":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"20":{"start":{"line":95,"column":16},"end":{"line":95,"column":99}},"21":{"start":{"line":100,"column":12},"end":{"line":100,"column":55}},"22":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"23":{"start":{"line":102,"column":16},"end":{"line":102,"column":67}},"24":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"25":{"start":{"line":108,"column":16},"end":{"line":108,"column":69}},"26":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"27":{"start":{"line":111,"column":65},"end":{"line":111,"column":117}},"28":{"start":{"line":112,"column":16},"end":{"line":112,"column":93}},"29":{"start":{"line":119,"column":0},"end":{"line":121,"column":1}},"30":{"start":{"line":120,"column":4},"end":{"line":120,"column":58}}},"branchMap":{"1":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":18},"end":{"line":43,"column":25}},{"start":{"line":43,"column":29},"end":{"line":43,"column":31}}]},"2":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":18},"end":{"line":56,"column":54}},{"start":{"line":57,"column":18},"end":{"line":57,"column":54}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":12}},{"start":{"line":66,"column":12},"end":{"line":66,"column":12}}]},"4":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":16},"end":{"line":66,"column":42}},{"start":{"line":66,"column":46},"end":{"line":66,"column":67}}]},"5":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":12}},{"start":{"line":90,"column":12},"end":{"line":90,"column":12}}]},"6":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":16},"end":{"line":90,"column":51}},{"start":{"line":90,"column":55},"end":{"line":90,"column":85}}]},"7":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":12}},{"start":{"line":94,"column":12},"end":{"line":94,"column":12}}]},"8":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":16},"end":{"line":94,"column":57}},{"start":{"line":94,"column":61},"end":{"line":94,"column":104}}]},"9":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":12}},{"start":{"line":101,"column":12},"end":{"line":101,"column":12}}]},"10":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":12}},{"start":{"line":107,"column":12},"end":{"line":107,"column":12}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":12}},{"start":{"line":111,"column":12},"end":{"line":111,"column":12}}]},"12":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":0},"end":{"line":119,"column":0}},{"start":{"line":119,"column":0},"end":{"line":119,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require('../base');","var ConsistentHashRing = require('./consistentHashRing.js').ConsistentHashRing;","","var HashPartitionResolver = Base.defineClass(","    /**","     * HashPartitionResolver implements partitioning based on the value of a hash function, ","     * allowing you to evenly distribute requests and data across a number of partitions for","     * the Azure DocumentDB database service.","     * @class HashPartitionResolver","     * @param {string | function} partitionKeyExtractor   - If partitionKeyExtractor is a string, it should be the name of the property in the document to execute the hashing on.","     *                                                      If partitionKeyExtractor is a function, it should be a function to extract the partition key from an object.","     **/","    function (partitionKeyExtractor, collectionLinks, options) {","        HashPartitionResolver._throwIfInvalidPartitionKeyExtractor(partitionKeyExtractor);","        HashPartitionResolver._throwIfInvalidCollectionLinks(collectionLinks);","        this.partitionKeyExtractor = partitionKeyExtractor;","        ","        options = options || {};","        this.consistentHashRing = new ConsistentHashRing(collectionLinks, options);","        this.collectionLinks = collectionLinks;","    }, {","        /**","         * Extracts the partition key from the specified document using the partitionKeyExtractor","         * @memberof HashPartitionResolver","         * @instance","         * @param {object} document - The document from which to extract the partition key.","         * @returns {object} ","         **/","        getPartitionKey: function (document) {","            return (typeof this.partitionKeyExtractor === \"string\")","                ? document[this.partitionKeyExtractor]","                : this.partitionKeyExtractor(document);","        },","        /**","         * Given a partition key, returns a list of collection links to read from.","         * @memberof HashPartitionResolver","         * @instance","         * @param {any} partitionKey - The partition key used to determine the target collection for query","         **/","        resolveForRead: function (partitionKey) {","            if (partitionKey === undefined || partitionKey === null) {","                return this.collectionLinks;","            }","","            return [this._resolve(partitionKey)];            ","        },","        /**","         * Given a partition key, returns the correct collection link for creating a document.","         * @memberof HashPartitionResolver","         * @instance","         * @param {any} partitionKey - The partition key used to determine the target collection for create","         * @returns {string}         - The target collection link that will be used for document creation.","         **/","        resolveForCreate: function (partitionKey) {","            return this._resolve(partitionKey);","        },","        /** @ignore */","        _resolve: function (partitionKey) {","            HashPartitionResolver._throwIfInvalidPartitionKey(partitionKey);","            return this.consistentHashRing.getNode(partitionKey);","        }","    }, {","        /** @ignore */","        _throwIfInvalidPartitionKeyExtractor: function (partitionKeyExtractor) {","            if (partitionKeyExtractor === undefined || partitionKeyExtractor === null) {","                throw new Error(\"partitionKeyExtractor cannot be null or undefined\");","            }","            ","            if (typeof partitionKeyExtractor !== \"string\" && typeof partitionKeyExtractor !== \"function\") {","                throw new Error(\"partitionKeyExtractor must be either a 'string' or a 'function'\");","            }","        },","        /** @ignore */","        _throwIfInvalidPartitionKey: function (partitionKey) {","            var partitionKeyType = typeof partitionKey;","            if (partitionKeyType !== \"string\") {","                throw new Error(\"partitionKey must be a 'string'\");","            }","        },","        /** @ignore */","        _throwIfInvalidCollectionLinks: function (collectionLinks) {","            if (!Array.isArray(collectionLinks)) {","                throw new Error(\"collectionLinks must be an array.\");","            }","            ","            if (collectionLinks.some(function (collectionLink) { return !Base._isValidCollectionLink(collectionLink); })) {","                throw new Error(\"All elements of collectionLinks must be collection links.\");","            }","        }","    });","","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    exports.HashPartitionResolver = HashPartitionResolver;","}"],"l":{"26":1,"27":1,"29":1,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"55":0,"66":0,"67":0,"70":0,"80":0,"84":0,"85":0,"90":0,"91":0,"94":0,"95":0,"100":0,"101":0,"102":0,"107":0,"108":0,"111":0,"112":0,"119":1,"120":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/hash/consistentHashRing.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/hash/consistentHashRing.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":30}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":17},"end":{"line":47,"column":32}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":30},"end":{"line":54,"column":87}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":42}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":28},"end":{"line":68,"column":44}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":24},"end":{"line":74,"column":40}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":17},"end":{"line":80,"column":50}}},"8":{"name":"(anonymous_8)","line":90,"loc":{"start":{"line":90,"column":30},"end":{"line":90,"column":47}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":55}},"3":{"start":{"line":29,"column":0},"end":{"line":99,"column":2}},"4":{"start":{"line":38,"column":8},"end":{"line":38,"column":55}},"5":{"start":{"line":40,"column":8},"end":{"line":40,"column":32}},"6":{"start":{"line":41,"column":8},"end":{"line":41,"column":101}},"7":{"start":{"line":42,"column":8},"end":{"line":42,"column":69}},"8":{"start":{"line":44,"column":8},"end":{"line":44,"column":48}},"9":{"start":{"line":45,"column":8},"end":{"line":45,"column":138}},"10":{"start":{"line":48,"column":12},"end":{"line":48,"column":46}},"11":{"start":{"line":49,"column":12},"end":{"line":49,"column":79}},"12":{"start":{"line":50,"column":12},"end":{"line":50,"column":52}},"13":{"start":{"line":55,"column":12},"end":{"line":55,"column":41}},"14":{"start":{"line":56,"column":12},"end":{"line":66,"column":15}},"15":{"start":{"line":57,"column":16},"end":{"line":57,"column":58}},"16":{"start":{"line":58,"column":16},"end":{"line":65,"column":17}},"17":{"start":{"line":59,"column":20},"end":{"line":62,"column":23}},"18":{"start":{"line":64,"column":20},"end":{"line":64,"column":63}},"19":{"start":{"line":68,"column":12},"end":{"line":70,"column":15}},"20":{"start":{"line":69,"column":16},"end":{"line":69,"column":83}},"21":{"start":{"line":71,"column":12},"end":{"line":71,"column":30}},"22":{"start":{"line":75,"column":12},"end":{"line":75,"column":33}},"23":{"start":{"line":75,"column":23},"end":{"line":75,"column":33}},"24":{"start":{"line":76,"column":12},"end":{"line":76,"column":32}},"25":{"start":{"line":76,"column":23},"end":{"line":76,"column":32}},"26":{"start":{"line":77,"column":12},"end":{"line":77,"column":21}},"27":{"start":{"line":81,"column":12},"end":{"line":85,"column":13}},"28":{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},"29":{"start":{"line":83,"column":20},"end":{"line":83,"column":29}},"30":{"start":{"line":87,"column":12},"end":{"line":87,"column":41}},"31":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"32":{"start":{"line":92,"column":16},"end":{"line":92,"column":23}},"33":{"start":{"line":95,"column":12},"end":{"line":95,"column":77}},"34":{"start":{"line":103,"column":0},"end":{"line":105,"column":1}},"35":{"start":{"line":104,"column":4},"end":{"line":104,"column":52}}},"branchMap":{"1":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":18},"end":{"line":40,"column":25}},{"start":{"line":40,"column":29},"end":{"line":40,"column":31}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":52},"end":{"line":41,"column":93}},{"start":{"line":41,"column":97},"end":{"line":41,"column":100}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":30},"end":{"line":42,"column":49}},{"start":{"line":42,"column":53},"end":{"line":42,"column":68}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":12}},{"start":{"line":75,"column":12},"end":{"line":75,"column":12}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":12}},{"start":{"line":76,"column":12},"end":{"line":76,"column":12}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":82,"column":16}},{"start":{"line":82,"column":16},"end":{"line":82,"column":16}}]},"7":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":20},"end":{"line":82,"column":56}},{"start":{"line":82,"column":60},"end":{"line":82,"column":99}}]},"8":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":12}},{"start":{"line":91,"column":12},"end":{"line":91,"column":12}}]},"9":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":0},"end":{"line":103,"column":0}},{"start":{"line":103,"column":0},"end":{"line":103,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\");","var MurmurHash = require('./murmurHash.js').MurmurHash;","","var ConsistentHashRing = Base.defineClass(","    /**","     * Initializes a new instance of the ConsistentHashRing","     * @param {string[]} nodes - Array of collection links","     * @param {object} options - Options to initialize the ConsistentHashRing","     * @param {function} options.computeHash - Function to compute the hash for a given link or partition key","     * @param {function} options.numberOfVirtualNodesPerCollection - Number of points in the ring to assign to each collection link","     */","    function (nodes, options) {","        ConsistentHashRing._throwIfInvalidNodes(nodes);","        ","        options = options || {};","        options.numberOfVirtualNodesPerCollection = options.numberOfVirtualNodesPerCollection || 128;","        options.computeHash = options.computeHash || MurmurHash.hash;","        ","        this._computeHash = options.computeHash;","        this._partitions = ConsistentHashRing._constructPartitions(nodes, options.numberOfVirtualNodesPerCollection, options.computeHash);","    }, {","        getNode: function (key) {","            var hash = this._computeHash(key);","            var partition = ConsistentHashRing._search(this._partitions, hash);            ","            return this._partitions[partition].node;","        }","    },{","        /** @ignore */","        _constructPartitions: function (nodes, partitionsPerNode, computeHashFunction) {","            var partitions = new Array();","            nodes.forEach(function (node) {","                var hashValue = computeHashFunction(node);","                for (var j = 0; j < partitionsPerNode; j++) {","                    partitions.push({","                        hashValue: hashValue, ","                        node: node","                    });","                    ","                    hashValue = computeHashFunction(hashValue);","                }","            });","            ","            partitions.sort(function (x, y) {","                return ConsistentHashRing._compareHashes(x.hashValue, y.hashValue);","            });","            return partitions;","        },","        /** @ignore */","        _compareHashes: function (x, y) {","            if (x < y) return -1;","            if (x > y) return 1;","            return 0;","        },","        /** @ignore */","        _search: function (partitions, hashValue) {","            for (var i = 0; i < partitions.length - 1; i++) {","                if (hashValue >= partitions[i].hashValue && hashValue < partitions[i + 1].hashValue) {","                    return i;","                }","            }","            ","            return partitions.length - 1;","        },","        /** @ignore */","        _throwIfInvalidNodes: function (nodes) {","            if (Array.isArray(nodes)) {","                return;","            }","            ","            throw new Error(\"Invalid argument: 'nodes' has to be an array.\");","        }","    }","        ",");","","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    exports.ConsistentHashRing = ConsistentHashRing;","}"],"l":{"26":1,"27":1,"29":1,"38":0,"40":0,"41":0,"42":0,"44":0,"45":0,"48":0,"49":0,"50":0,"55":0,"56":0,"57":0,"58":0,"59":0,"64":0,"68":0,"69":0,"71":0,"75":0,"76":0,"77":0,"81":0,"82":0,"83":0,"87":0,"91":0,"92":0,"95":0,"103":1,"104":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/hash/murmurHash.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/hash/murmurHash.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":35}}},"2":{"name":"(anonymous_2)","line":59,"loc":{"start":{"line":59,"column":28},"end":{"line":59,"column":43}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":29},"end":{"line":75,"column":45}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":30},"end":{"line":81,"column":45}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":30},"end":{"line":86,"column":43}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":20},"end":{"line":99,"column":43}}},"7":{"name":"(anonymous_7)","line":152,"loc":{"start":{"line":152,"column":21},"end":{"line":152,"column":43}}},"8":{"name":"(anonymous_8)","line":156,"loc":{"start":{"line":156,"column":19},"end":{"line":156,"column":35}}},"9":{"name":"(anonymous_9)","line":160,"loc":{"start":{"line":160,"column":21},"end":{"line":160,"column":45}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"2":{"start":{"line":28,"column":0},"end":{"line":163,"column":7}},"3":{"start":{"line":39,"column":12},"end":{"line":39,"column":28}},"4":{"start":{"line":40,"column":12},"end":{"line":40,"column":29}},"5":{"start":{"line":42,"column":12},"end":{"line":42,"column":47}},"6":{"start":{"line":43,"column":12},"end":{"line":43,"column":49}},"7":{"start":{"line":45,"column":12},"end":{"line":45,"column":23}},"8":{"start":{"line":46,"column":12},"end":{"line":54,"column":13}},"9":{"start":{"line":47,"column":16},"end":{"line":47,"column":62}},"10":{"start":{"line":49,"column":17},"end":{"line":54,"column":13}},"11":{"start":{"line":50,"column":16},"end":{"line":50,"column":62}},"12":{"start":{"line":53,"column":16},"end":{"line":53,"column":29}},"13":{"start":{"line":56,"column":12},"end":{"line":56,"column":55}},"14":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"15":{"start":{"line":61,"column":16},"end":{"line":61,"column":23}},"16":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"17":{"start":{"line":65,"column":16},"end":{"line":65,"column":23}},"18":{"start":{"line":68,"column":12},"end":{"line":70,"column":13}},"19":{"start":{"line":69,"column":16},"end":{"line":69,"column":23}},"20":{"start":{"line":72,"column":12},"end":{"line":72,"column":94}},"21":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"22":{"start":{"line":77,"column":16},"end":{"line":77,"column":104}},"23":{"start":{"line":82,"column":12},"end":{"line":82,"column":41}},"24":{"start":{"line":83,"column":12},"end":{"line":83,"column":26}},"25":{"start":{"line":87,"column":12},"end":{"line":87,"column":24}},"26":{"start":{"line":89,"column":12},"end":{"line":94,"column":15}},"27":{"start":{"line":96,"column":12},"end":{"line":96,"column":26}},"28":{"start":{"line":100,"column":12},"end":{"line":100,"column":32}},"29":{"start":{"line":101,"column":12},"end":{"line":101,"column":32}},"30":{"start":{"line":103,"column":12},"end":{"line":103,"column":26}},"31":{"start":{"line":104,"column":12},"end":{"line":104,"column":48}},"32":{"start":{"line":106,"column":16},"end":{"line":116,"column":17}},"33":{"start":{"line":107,"column":20},"end":{"line":107,"column":63}},"34":{"start":{"line":109,"column":20},"end":{"line":109,"column":54}},"35":{"start":{"line":110,"column":20},"end":{"line":110,"column":56}},"36":{"start":{"line":111,"column":20},"end":{"line":111,"column":54}},"37":{"start":{"line":113,"column":20},"end":{"line":113,"column":29}},"38":{"start":{"line":114,"column":20},"end":{"line":114,"column":56}},"39":{"start":{"line":115,"column":20},"end":{"line":115,"column":66}},"40":{"start":{"line":119,"column":12},"end":{"line":119,"column":22}},"41":{"start":{"line":120,"column":12},"end":{"line":135,"column":13}},"42":{"start":{"line":122,"column":20},"end":{"line":122,"column":45}},"43":{"start":{"line":123,"column":20},"end":{"line":123,"column":44}},"44":{"start":{"line":124,"column":20},"end":{"line":124,"column":35}},"45":{"start":{"line":125,"column":20},"end":{"line":125,"column":26}},"46":{"start":{"line":128,"column":20},"end":{"line":128,"column":44}},"47":{"start":{"line":129,"column":20},"end":{"line":129,"column":35}},"48":{"start":{"line":130,"column":20},"end":{"line":130,"column":26}},"49":{"start":{"line":133,"column":20},"end":{"line":133,"column":35}},"50":{"start":{"line":134,"column":20},"end":{"line":134,"column":26}},"51":{"start":{"line":137,"column":12},"end":{"line":137,"column":44}},"52":{"start":{"line":138,"column":12},"end":{"line":138,"column":46}},"53":{"start":{"line":139,"column":12},"end":{"line":139,"column":44}},"54":{"start":{"line":141,"column":12},"end":{"line":141,"column":20}},"55":{"start":{"line":142,"column":12},"end":{"line":142,"column":31}},"56":{"start":{"line":143,"column":12},"end":{"line":143,"column":28}},"57":{"start":{"line":144,"column":12},"end":{"line":144,"column":54}},"58":{"start":{"line":145,"column":12},"end":{"line":145,"column":28}},"59":{"start":{"line":146,"column":12},"end":{"line":146,"column":54}},"60":{"start":{"line":147,"column":12},"end":{"line":147,"column":28}},"61":{"start":{"line":149,"column":12},"end":{"line":149,"column":28}},"62":{"start":{"line":153,"column":12},"end":{"line":153,"column":59}},"63":{"start":{"line":157,"column":12},"end":{"line":157,"column":76}},"64":{"start":{"line":161,"column":12},"end":{"line":161,"column":120}},"65":{"start":{"line":167,"column":0},"end":{"line":169,"column":1}},"66":{"start":{"line":168,"column":4},"end":{"line":168,"column":36}}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":18},"end":{"line":39,"column":21}},{"start":{"line":39,"column":25},"end":{"line":39,"column":27}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":23}},{"start":{"line":40,"column":27},"end":{"line":40,"column":28}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":17},"end":{"line":49,"column":17}},{"start":{"line":49,"column":17},"end":{"line":49,"column":17}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":12}},{"start":{"line":60,"column":12},"end":{"line":60,"column":12}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":12}},{"start":{"line":64,"column":12},"end":{"line":64,"column":12}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":12}},{"start":{"line":68,"column":12},"end":{"line":68,"column":12}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":12}},{"start":{"line":76,"column":12},"end":{"line":76,"column":12}}]},"9":{"line":120,"type":"switch","locations":[{"start":{"line":121,"column":16},"end":{"line":125,"column":26}},{"start":{"line":127,"column":16},"end":{"line":130,"column":26}},{"start":{"line":132,"column":16},"end":{"line":134,"column":26}}]},"10":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":0},"end":{"line":167,"column":0}},{"start":{"line":167,"column":0},"end":{"line":167,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"../base\");","","var MurmurHash = Base.defineClass(","    undefined, ","    undefined,","    {","        /**","         * Hashes a string, a unsigned 32-bit integer, or a Buffer into a new unsigned 32-bit integer that represents the output hash.","         * @param {string, number of Buffer} key  - The preimage of the hash","         * @param {number} seed                   - Optional value used to initialize the hash generator","         * @returns {} ","         */","        hash: function (key, seed) {","            key = key || '';","            seed = seed || 0;","            ","            MurmurHash._throwIfInvalidKey(key);","            MurmurHash._throwIfInvalidSeed(seed);","            ","            var buffer;","            if (typeof key === \"string\") {","                buffer = MurmurHash._getBufferFromString(key);","            }","            else if (typeof key === \"number\") {","                buffer = MurmurHash._getBufferFromNumber(key);","            }","            else {","                buffer = key;","            }","            ","            return MurmurHash._hashBytes(buffer, seed);","        },","        /** @ignore */","        _throwIfInvalidKey: function (key) {","            if (key instanceof Buffer) {","                return;","            }","            ","            if (typeof key === \"string\") {","                return;","            }","            ","            if (typeof key === \"number\") {","                return;","            }","            ","            throw new Error(\"Invalid argument: 'key' has to be a Buffer, string, or number.\");","        },","        /** @ignore */","        _throwIfInvalidSeed: function (seed) {","            if (isNaN(seed)) {","                throw new Error(\"Invalid argument: 'seed' is not and cannot be converted to a number.\");","            }","        },","        /** @ignore */","        _getBufferFromString: function (key) {","            var buffer = new Buffer(key);","            return buffer;","        },","        /** @ignore */","        _getBufferFromNumber: function (i) {","            i = i >>> 0;","            ","            var buffer = new Uint8Array([","                i >>> 0,","                i >>> 8,","                i >>> 16,","                i >>> 24","            ]);","","            return buffer;","        },","        /** @ignore */","        _hashBytes: function (bytes, seed) {","            var c1 = 0xcc9e2d51;","            var c2 = 0x1b873593;","            ","            var h1 = seed;","            var reader = new Uint32Array(bytes);","            {","                for (var i = 0; i < bytes.length - 3; i += 4) {","                    var k1 = MurmurHash._readUInt32(reader, i);","                    ","                    k1 = MurmurHash._multiply(k1, c1);","                    k1 = MurmurHash._rotateLeft(k1, 15);","                    k1 = MurmurHash._multiply(k1, c2);","                    ","                    h1 ^= k1;","                    h1 = MurmurHash._rotateLeft(h1, 13);","                    h1 = MurmurHash._multiply(h1, 5) + 0xe6546b64;","                }","            }","            ","            var k = 0;","            switch (bytes.length & 3) {","                case 3:","                    k ^= reader[i + 2] << 16;","                    k ^= reader[i + 1] << 8;","                    k ^= reader[i];","                    break;","","                case 2:","                    k ^= reader[i + 1] << 8;","                    k ^= reader[i];","                    break;","","                case 1:","                    k ^= reader[i];","                    break;","            }","            ","            k = MurmurHash._multiply(k, c1);","            k = MurmurHash._rotateLeft(k, 15);","            k = MurmurHash._multiply(k, c2);","            ","            h1 ^= k;","            h1 ^= bytes.length;","            h1 ^= h1 >>> 16;","            h1 = MurmurHash._multiply(h1, 0x85ebca6b);","            h1 ^= h1 >>> 13;","            h1 = MurmurHash._multiply(h1, 0xc2b2ae35);","            h1 ^= h1 >>> 16;","            ","            return h1 >>> 0;","        },","        /** @ignore */","        _rotateLeft: function (n, numBits) {","            return (n << numBits) | (n >>> (32 - numBits));","        },","        /** @ignore */","        _multiply: function (m, n) {","            return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);","        },","        /** @ignore */","        _readUInt32: function (uintArray, i) {","            return (uintArray[i]) | (uintArray[i + 1] << 8) | (uintArray[i + 2] << 16) | (uintArray[i + 3] << 24) >>> 0;","        }","    });","","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    exports.MurmurHash = MurmurHash;","}"],"l":{"26":1,"28":1,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"47":0,"49":0,"50":0,"53":0,"56":0,"60":0,"61":0,"64":0,"65":0,"68":0,"69":0,"72":0,"76":0,"77":0,"82":0,"83":0,"87":0,"89":0,"96":0,"100":0,"101":0,"103":0,"104":0,"106":0,"107":0,"109":0,"110":0,"111":0,"113":0,"114":0,"115":0,"119":0,"120":0,"122":0,"123":0,"124":0,"125":0,"128":0,"129":0,"130":0,"133":0,"134":0,"137":0,"138":0,"139":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"149":0,"153":0,"157":0,"161":0,"167":1,"168":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/range.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/lib/range.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":1,"126":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":22}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":18},"end":{"line":56,"column":51}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":19},"end":{"line":81,"column":53}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":24},"end":{"line":91,"column":58}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":24},"end":{"line":99,"column":58}}},"6":{"name":"(anonymous_6)","line":107,"loc":{"start":{"line":107,"column":20},"end":{"line":107,"column":54}}},"7":{"name":"(anonymous_7)","line":120,"loc":{"start":{"line":120,"column":32},"end":{"line":120,"column":50}}},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":32},"end":{"line":123,"column":65}}},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":19},"end":{"line":139,"column":31}}},"10":{"name":"(anonymous_10)","line":145,"loc":{"start":{"line":145,"column":18},"end":{"line":145,"column":42}}},"11":{"name":"(anonymous_11)","line":169,"loc":{"start":{"line":169,"column":4},"end":{"line":169,"column":70}}},"12":{"name":"(anonymous_12)","line":182,"loc":{"start":{"line":182,"column":58},"end":{"line":182,"column":78}}},"13":{"name":"(anonymous_13)","line":218,"loc":{"start":{"line":218,"column":25},"end":{"line":218,"column":45}}},"14":{"name":"(anonymous_14)","line":235,"loc":{"start":{"line":235,"column":26},"end":{"line":235,"column":50}}},"15":{"name":"(anonymous_15)","line":251,"loc":{"start":{"line":251,"column":24},"end":{"line":251,"column":48}}},"16":{"name":"(anonymous_16)","line":253,"loc":{"start":{"line":253,"column":48},"end":{"line":253,"column":61}}},"17":{"name":"(anonymous_17)","line":256,"loc":{"start":{"line":256,"column":73},"end":{"line":256,"column":86}}},"18":{"name":"(anonymous_18)","line":261,"loc":{"start":{"line":261,"column":43},"end":{"line":261,"column":60}}},"19":{"name":"(anonymous_19)","line":263,"loc":{"start":{"line":263,"column":67},"end":{"line":263,"column":80}}},"20":{"name":"(anonymous_20)","line":271,"loc":{"start":{"line":271,"column":36},"end":{"line":271,"column":60}}},"21":{"name":"(anonymous_21)","line":274,"loc":{"start":{"line":274,"column":43},"end":{"line":274,"column":56}}},"22":{"name":"(anonymous_22)","line":276,"loc":{"start":{"line":276,"column":27},"end":{"line":276,"column":44}}},"23":{"name":"(anonymous_23)","line":277,"loc":{"start":{"line":277,"column":68},"end":{"line":277,"column":85}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}},"2":{"start":{"line":29,"column":0},"end":{"line":158,"column":2}},"3":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"4":{"start":{"line":39,"column":12},"end":{"line":39,"column":25}},"5":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"6":{"start":{"line":42,"column":12},"end":{"line":42,"column":67}},"7":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"8":{"start":{"line":45,"column":12},"end":{"line":45,"column":76}},"9":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"10":{"start":{"line":48,"column":12},"end":{"line":48,"column":39}},"11":{"start":{"line":50,"column":8},"end":{"line":50,"column":31}},"12":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"13":{"start":{"line":52,"column":8},"end":{"line":52,"column":28}},"14":{"start":{"line":59,"column":12},"end":{"line":60,"column":25}},"15":{"start":{"line":60,"column":16},"end":{"line":60,"column":25}},"16":{"start":{"line":61,"column":12},"end":{"line":62,"column":25}},"17":{"start":{"line":62,"column":16},"end":{"line":62,"column":25}},"18":{"start":{"line":63,"column":12},"end":{"line":64,"column":26}},"19":{"start":{"line":64,"column":16},"end":{"line":64,"column":26}},"20":{"start":{"line":65,"column":12},"end":{"line":70,"column":13}},"21":{"start":{"line":66,"column":16},"end":{"line":66,"column":54}},"22":{"start":{"line":67,"column":16},"end":{"line":68,"column":29}},"23":{"start":{"line":68,"column":20},"end":{"line":68,"column":29}},"24":{"start":{"line":69,"column":16},"end":{"line":69,"column":25}},"25":{"start":{"line":71,"column":12},"end":{"line":71,"column":36}},"26":{"start":{"line":72,"column":12},"end":{"line":72,"column":36}},"27":{"start":{"line":73,"column":12},"end":{"line":74,"column":26}},"28":{"start":{"line":74,"column":16},"end":{"line":74,"column":26}},"29":{"start":{"line":75,"column":12},"end":{"line":76,"column":25}},"30":{"start":{"line":76,"column":16},"end":{"line":76,"column":25}},"31":{"start":{"line":77,"column":12},"end":{"line":77,"column":21}},"32":{"start":{"line":82,"column":12},"end":{"line":87,"column":13}},"33":{"start":{"line":83,"column":16},"end":{"line":83,"column":67}},"34":{"start":{"line":86,"column":16},"end":{"line":86,"column":67}},"35":{"start":{"line":92,"column":12},"end":{"line":94,"column":13}},"36":{"start":{"line":93,"column":16},"end":{"line":93,"column":28}},"37":{"start":{"line":95,"column":12},"end":{"line":95,"column":25}},"38":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"39":{"start":{"line":101,"column":16},"end":{"line":101,"column":28}},"40":{"start":{"line":103,"column":12},"end":{"line":103,"column":25}},"41":{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},"42":{"start":{"line":109,"column":16},"end":{"line":109,"column":82}},"43":{"start":{"line":111,"column":12},"end":{"line":111,"column":105}},"44":{"start":{"line":112,"column":12},"end":{"line":112,"column":110}},"45":{"start":{"line":113,"column":12},"end":{"line":115,"column":13}},"46":{"start":{"line":114,"column":16},"end":{"line":114,"column":28}},"47":{"start":{"line":116,"column":12},"end":{"line":116,"column":25}},"48":{"start":{"line":121,"column":12},"end":{"line":121,"column":28}},"49":{"start":{"line":122,"column":12},"end":{"line":135,"column":13}},"50":{"start":{"line":123,"column":16},"end":{"line":131,"column":19}},"51":{"start":{"line":124,"column":20},"end":{"line":126,"column":21}},"52":{"start":{"line":125,"column":24},"end":{"line":125,"column":65}},"53":{"start":{"line":128,"column":20},"end":{"line":128,"column":46}},"54":{"start":{"line":129,"column":20},"end":{"line":129,"column":70}},"55":{"start":{"line":130,"column":20},"end":{"line":130,"column":58}},"56":{"start":{"line":133,"column":16},"end":{"line":133,"column":49}},"57":{"start":{"line":134,"column":16},"end":{"line":134,"column":69}},"58":{"start":{"line":140,"column":12},"end":{"line":140,"column":62}},"59":{"start":{"line":146,"column":12},"end":{"line":148,"column":13}},"60":{"start":{"line":147,"column":16},"end":{"line":147,"column":29}},"61":{"start":{"line":149,"column":12},"end":{"line":151,"column":13}},"62":{"start":{"line":150,"column":16},"end":{"line":150,"column":29}},"63":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"64":{"start":{"line":153,"column":16},"end":{"line":153,"column":29}},"65":{"start":{"line":155,"column":12},"end":{"line":155,"column":69}},"66":{"start":{"line":160,"column":0},"end":{"line":284,"column":2}},"67":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"68":{"start":{"line":171,"column":12},"end":{"line":171,"column":81}},"69":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"70":{"start":{"line":174,"column":12},"end":{"line":174,"column":95}},"71":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"72":{"start":{"line":177,"column":12},"end":{"line":177,"column":75}},"73":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"74":{"start":{"line":180,"column":12},"end":{"line":180,"column":66}},"75":{"start":{"line":182,"column":8},"end":{"line":199,"column":11}},"76":{"start":{"line":183,"column":12},"end":{"line":185,"column":13}},"77":{"start":{"line":184,"column":16},"end":{"line":184,"column":29}},"78":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"79":{"start":{"line":187,"column":16},"end":{"line":187,"column":29}},"80":{"start":{"line":189,"column":12},"end":{"line":191,"column":13}},"81":{"start":{"line":190,"column":16},"end":{"line":190,"column":29}},"82":{"start":{"line":192,"column":12},"end":{"line":194,"column":13}},"83":{"start":{"line":193,"column":16},"end":{"line":193,"column":29}},"84":{"start":{"line":195,"column":12},"end":{"line":197,"column":13}},"85":{"start":{"line":196,"column":16},"end":{"line":196,"column":29}},"86":{"start":{"line":198,"column":12},"end":{"line":198,"column":24}},"87":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"88":{"start":{"line":201,"column":12},"end":{"line":201,"column":108}},"89":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"90":{"start":{"line":204,"column":12},"end":{"line":204,"column":85}},"91":{"start":{"line":207,"column":8},"end":{"line":207,"column":59}},"92":{"start":{"line":208,"column":8},"end":{"line":208,"column":47}},"93":{"start":{"line":209,"column":8},"end":{"line":209,"column":47}},"94":{"start":{"line":219,"column":12},"end":{"line":221,"column":13}},"95":{"start":{"line":220,"column":16},"end":{"line":220,"column":60}},"96":{"start":{"line":222,"column":12},"end":{"line":224,"column":13}},"97":{"start":{"line":223,"column":16},"end":{"line":223,"column":60}},"98":{"start":{"line":225,"column":12},"end":{"line":225,"column":145}},"99":{"start":{"line":236,"column":12},"end":{"line":236,"column":57}},"100":{"start":{"line":237,"column":12},"end":{"line":237,"column":73}},"101":{"start":{"line":238,"column":12},"end":{"line":240,"column":13}},"102":{"start":{"line":239,"column":16},"end":{"line":239,"column":37}},"103":{"start":{"line":241,"column":12},"end":{"line":241,"column":137}},"104":{"start":{"line":252,"column":12},"end":{"line":257,"column":13}},"105":{"start":{"line":253,"column":16},"end":{"line":253,"column":81}},"106":{"start":{"line":253,"column":63},"end":{"line":253,"column":77}},"107":{"start":{"line":256,"column":16},"end":{"line":256,"column":106}},"108":{"start":{"line":256,"column":88},"end":{"line":256,"column":102}},"109":{"start":{"line":262,"column":12},"end":{"line":262,"column":29}},"110":{"start":{"line":263,"column":12},"end":{"line":263,"column":166}},"111":{"start":{"line":263,"column":82},"end":{"line":263,"column":162}},"112":{"start":{"line":264,"column":12},"end":{"line":266,"column":13}},"113":{"start":{"line":265,"column":16},"end":{"line":265,"column":47}},"114":{"start":{"line":267,"column":12},"end":{"line":267,"column":24}},"115":{"start":{"line":272,"column":12},"end":{"line":272,"column":29}},"116":{"start":{"line":273,"column":12},"end":{"line":273,"column":96}},"117":{"start":{"line":274,"column":12},"end":{"line":274,"column":115}},"118":{"start":{"line":274,"column":58},"end":{"line":274,"column":111}},"119":{"start":{"line":275,"column":12},"end":{"line":275,"column":37}},"120":{"start":{"line":276,"column":12},"end":{"line":280,"column":15}},"121":{"start":{"line":277,"column":16},"end":{"line":279,"column":20}},"122":{"start":{"line":278,"column":20},"end":{"line":278,"column":80}},"123":{"start":{"line":281,"column":12},"end":{"line":281,"column":26}},"124":{"start":{"line":287,"column":0},"end":{"line":290,"column":1}},"125":{"start":{"line":288,"column":4},"end":{"line":288,"column":26}},"126":{"start":{"line":289,"column":4},"end":{"line":289,"column":60}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":8}},{"start":{"line":41,"column":8},"end":{"line":41,"column":8}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"5":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":12}},{"start":{"line":59,"column":12},"end":{"line":59,"column":12}}]},"6":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":16},"end":{"line":59,"column":31}},{"start":{"line":59,"column":35},"end":{"line":59,"column":50}}]},"7":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":12}},{"start":{"line":63,"column":12},"end":{"line":63,"column":12}}]},"9":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"10":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":16},"end":{"line":67,"column":16}},{"start":{"line":67,"column":16},"end":{"line":67,"column":16}}]},"11":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":12}},{"start":{"line":73,"column":12},"end":{"line":73,"column":12}}]},"12":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":12}},{"start":{"line":75,"column":12},"end":{"line":75,"column":12}}]},"13":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":82,"column":12}},{"start":{"line":82,"column":12},"end":{"line":82,"column":12}}]},"14":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":12}},{"start":{"line":92,"column":12},"end":{"line":92,"column":12}}]},"15":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":68}},{"start":{"line":92,"column":72},"end":{"line":92,"column":125}}]},"16":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"17":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":72}},{"start":{"line":100,"column":76},"end":{"line":100,"column":134}}]},"18":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"19":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":35}},{"start":{"line":108,"column":39},"end":{"line":108,"column":53}}]},"20":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":84},"end":{"line":111,"column":92}},{"start":{"line":111,"column":95},"end":{"line":111,"column":104}}]},"21":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":87},"end":{"line":112,"column":96}},{"start":{"line":112,"column":99},"end":{"line":112,"column":109}}]},"22":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"23":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":12}},{"start":{"line":122,"column":12},"end":{"line":122,"column":12}}]},"24":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":20},"end":{"line":124,"column":20}},{"start":{"line":124,"column":20},"end":{"line":124,"column":20}}]},"25":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":12},"end":{"line":146,"column":12}},{"start":{"line":146,"column":12},"end":{"line":146,"column":12}}]},"26":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"27":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":12}},{"start":{"line":152,"column":12},"end":{"line":152,"column":12}}]},"28":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":20},"end":{"line":155,"column":41}},{"start":{"line":155,"column":45},"end":{"line":155,"column":67}}]},"29":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"30":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":47}},{"start":{"line":170,"column":51},"end":{"line":170,"column":81}}]},"31":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":8}},{"start":{"line":173,"column":8},"end":{"line":173,"column":8}}]},"32":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":12},"end":{"line":173,"column":53}},{"start":{"line":173,"column":57},"end":{"line":173,"column":100}}]},"33":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"34":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":41}},{"start":{"line":176,"column":45},"end":{"line":176,"column":69}}]},"35":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":8}},{"start":{"line":179,"column":8},"end":{"line":179,"column":8}}]},"36":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":12}},{"start":{"line":183,"column":12},"end":{"line":183,"column":12}}]},"37":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":17},"end":{"line":183,"column":39}},{"start":{"line":183,"column":44},"end":{"line":183,"column":61}}]},"38":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":186,"column":12}},{"start":{"line":186,"column":12},"end":{"line":186,"column":12}}]},"39":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":12},"end":{"line":189,"column":12}},{"start":{"line":189,"column":12},"end":{"line":189,"column":12}}]},"40":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":12},"end":{"line":192,"column":12}},{"start":{"line":192,"column":12},"end":{"line":192,"column":12}}]},"41":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":12}},{"start":{"line":195,"column":12},"end":{"line":195,"column":12}}]},"42":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"43":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"44":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":12},"end":{"line":203,"column":41}},{"start":{"line":203,"column":45},"end":{"line":203,"column":82}}]},"45":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":12},"end":{"line":219,"column":12}},{"start":{"line":219,"column":12},"end":{"line":219,"column":12}}]},"46":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":12}},{"start":{"line":222,"column":12},"end":{"line":222,"column":12}}]},"47":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":12},"end":{"line":238,"column":12}},{"start":{"line":238,"column":12},"end":{"line":238,"column":12}}]},"48":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":16},"end":{"line":238,"column":38}},{"start":{"line":238,"column":42},"end":{"line":238,"column":59}}]},"49":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12}},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"50":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":16},"end":{"line":252,"column":42}},{"start":{"line":252,"column":46},"end":{"line":252,"column":67}}]},"51":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":89},"end":{"line":263,"column":110}},{"start":{"line":263,"column":114},"end":{"line":263,"column":161}}]},"52":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":12},"end":{"line":264,"column":12}},{"start":{"line":264,"column":12},"end":{"line":264,"column":12}}]},"53":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":16},"end":{"line":264,"column":36}},{"start":{"line":264,"column":40},"end":{"line":264,"column":71}}]},"54":{"line":273,"type":"cond-expr","locations":[{"start":{"line":273,"column":66},"end":{"line":273,"column":78}},{"start":{"line":273,"column":81},"end":{"line":273,"column":95}}]},"55":{"line":274,"type":"cond-expr","locations":[{"start":{"line":274,"column":85},"end":{"line":274,"column":86}},{"start":{"line":274,"column":89},"end":{"line":274,"column":110}}]},"56":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":0},"end":{"line":287,"column":0}},{"start":{"line":287,"column":0},"end":{"line":287,"column":0}}]}},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","var Base = require(\"./base\");","","//SCRIPT START","var Range = Base.defineClass(","    /**","     * Represents a range object used by the RangePartitionResolver in the Azure DocumentDB database service.","     * @class Range","     * @param {object} options                   - The Range constructor options.","     * @param {any} options.low                  - The low value in the range.","     * @param {any} options.high                 - The high value in the range.","     **/","    function(options) {","        if (options === undefined) {","            options = {};","        }","        if (options === null) {","            throw new Error(\"Invalid argument: 'options' is null\");","        }","        if (typeof options !== \"object\") {","            throw new Error(\"Invalid argument: 'options' is not an object\");","        }","        if (options.high === undefined) {","            options.high = options.low;","        }","        this.low = options.low;","        this.high = options.high;","        Object.freeze(this);","    },","    {","        /** @ignore */","        _compare: function (x, y, compareFunction) {","            // Same semantics as Array.sort","            // http://www.ecma-international.org/ecma-262/6.0/#sec-sortcompare","            if (x === undefined && y === undefined)","                return 0;","            if (x === undefined)","                return 1;","            if (y === undefined)","                return -1;","            if (compareFunction !== undefined) {","                var v = Number(compareFunction(x, y));","                if (v === NaN)","                    return 0;","                return v;","            }","            var xString = String(x);","            var yString = String(y);","            if (xString < yString)","                return -1;","            if (xString > yString)","                return 1;","            return 0;","        },","","        /** @ignore */","        _contains: function (other, compareFunction) {","            if (Range._isRange(other)) {","                return this._containsRange(other, compareFunction);","            }","            else {","                return this._containsPoint(other, compareFunction);","            }","        },","","        /** @ignore */","        _containsPoint: function (point, compareFunction) {","            if (this._compare(point, this.low, compareFunction) >= 0 && this._compare(point, this.high, compareFunction) <= 0) {","                return true;","            }","            return false;","        },","","        /** @ignore */","        _containsRange: function (other, compareFunction) {","            if (this._compare(other.low, this.low, compareFunction) >= 0 && this._compare(other.high, this.high, compareFunction) <= 0) {","                return true;","            }","            return false;","        },","","        /** @ignore */","        _intersect: function (other, compareFunction) {","            if (other === undefined || other === null) {","                throw new Error(\"Invalid Argument: 'other' is undefined or null\");","            }","            var maxLow = this._compare(this.low, other.low, compareFunction) >= 0 ? this.low : other.low;","            var minHigh = this._compare(this.high, other.high, compareFunction) <= 0 ? this.high : other.high;","            if (this._compare(maxLow, minHigh, compareFunction) <= 0) {","                return true;","            }","            return false;","        },","","         /** @ignore */","        _toArrayImplementation: function(callback){","            var that = this;","            if (this._canFetchMore()) {","                this._fetchMore(function(err, resources, headers){","                    if(err) {","                        return callback(err, undefined, headers);","                    }","","                    that.resHeaders = headers;","                    that.resources = that.resources.concat(resources);","                    that._toArrayImplementation(callback);","                });","            } else {","                this._state = this._states.ended;","                callback(undefined, this.resources, this.resHeaders);","            }","        },","","        /** @ignore */","        _toString: function () {","            return String(this.low) + \",\" + String(this.high);","        }","    },","    {","        /** @ignore */","        _isRange: function (pointOrRange) {","            if (pointOrRange === undefined) {","                return false;","            }","            if (pointOrRange === null) {","                return false;","            }","            if (typeof pointOrRange !== \"object\") {","                return false;","            }","            return (\"low\" in pointOrRange && \"high\" in pointOrRange);","        }","    }",");","","var RangePartitionResolver = Base.defineClass(","    /**","     * RangePartitionResolver implements partitioning using a partition map of ranges of values to a collection link in the Azure DocumentDB database service.","     * @class RangePartitionResolver","     * @param {string | function} partitionKeyExtractor   - If partitionKeyExtractor is a string, it should be the name of the property in the document to execute the hashing on.","     *                                                      If partitionKeyExtractor is a function, it should be a function to extract the partition key from an object.","     * @param {Array} partitionKeyMap                     - The map from Range to collection link that is used for partitioning requests.","     * @param {function} compareFunction                  - Optional function that accepts two arguments x and y and returns a negative value if x < y, zero if x = y, or a positive value if x > y.","     **/","    function(partitionKeyExtractor, partitionKeyMap, compareFunction) {","        if (partitionKeyExtractor === undefined || partitionKeyExtractor === null) {","            throw new Error(\"partitionKeyExtractor cannot be null or undefined\");","        }","        if (typeof partitionKeyExtractor !== \"string\" && typeof partitionKeyExtractor !== \"function\") {","            throw new Error(\"partitionKeyExtractor must be either a 'string' or a 'function'\");","        }","        if (partitionKeyMap === undefined || partitionKeyMap === null) {","            throw new Error(\"partitionKeyMap cannot be null or undefined\");","        }","        if (!(Array.isArray(partitionKeyMap))) {","            throw new Error(\"partitionKeyMap has to be an Array\");","        }","        var allMapEntriesAreValid = partitionKeyMap.every(function (mapEntry) {","            if ((mapEntry === undefined) || mapEntry === null) {","                return false;","            }","            if (mapEntry.range === undefined) {","                return false;","            }","            if (!(mapEntry.range instanceof Range)) {","                return false;","            }","            if (mapEntry.link === undefined) {","                return false;","            }","            if (typeof mapEntry.link !== \"string\") {","                return false;","            }","            return true;","        });","        if (!allMapEntriesAreValid) {","            throw new Error(\"All partitionKeyMap entries have to be a tuple {range: Range, link: string }\");","        }","        if (compareFunction !== undefined && typeof compareFunction !== \"function\") {","            throw new Error(\"Invalid argument: 'compareFunction' is not a function\");","        }","","        this.partitionKeyExtractor = partitionKeyExtractor;","        this.partitionKeyMap = partitionKeyMap;","        this.compareFunction = compareFunction;","    }, {","        /**","         * Extracts the partition key from the specified document using the partitionKeyExtractor","         * @memberof RangePartitionResolver","         * @instance","         * @param {object} document - The document from which to extract the partition key.","         * @returns {}","         **/","        getPartitionKey: function (document) {","            if (typeof this.partitionKeyExtractor === \"string\") {","                return document[this.partitionKeyExtractor];","            }","            if (typeof this.partitionKeyExtractor === \"function\") {","                return this.partitionKeyExtractor(document);","            }","            throw new Error(\"Unable to extract partition key from document. Ensure PartitionKeyExtractor is a valid function or property name.\");","        },","","        /**","         * Given a partition key, returns the correct collection link for creating a document using the range partition map.","         * @memberof RangePartitionResolver","         * @instance","         * @param {any} partitionKey - The partition key used to determine the target collection for create","         * @returns {string}         - The target collection link that will be used for document creation.","         **/","        resolveForCreate: function (partitionKey) {","            var range = new Range({ low: partitionKey });","            var mapEntry = this._getFirstContainingMapEntryOrNull(range);","            if (mapEntry !== undefined && mapEntry !== null) {","                return mapEntry.link;","            }","            throw new Error(\"Invalid operation: A containing range for '\" + range._toString() + \"' doesn't exist in the partition map.\");","        },","","        /**","         * Given a partition key, returns a list of collection links to read from using the range partition map.","         * @memberof RangePartitionResolver","         * @instance","         * @param {any} partitionKey - The partition key used to determine the target collection for query","         * @returns {string[]}         - The list of target collection links.","         **/","        resolveForRead: function (partitionKey) {","            if (partitionKey === undefined || partitionKey === null) {","                return this.partitionKeyMap.map(function (i) { return i.link; });","            }","            else {","                return this._getIntersectingMapEntries(partitionKey).map(function (i) { return i.link; });","            }","        },","","        /** @ignore */","        _getFirstContainingMapEntryOrNull: function (point) {","            var _this = this;","            var containingMapEntries = this.partitionKeyMap.filter(function (p) { return p.range !== undefined && p.range._contains(point, _this.compareFunction); });","            if (containingMapEntries && containingMapEntries.length > 0) {","                return containingMapEntries[0];","            }","            return null;","        },","","        /** @ignore */","        _getIntersectingMapEntries: function (partitionKey) {","            var _this = this;","            var partitionKeys = (partitionKey instanceof Array) ? partitionKey : [partitionKey];","            var ranges = partitionKeys.map(function (p) { return Range._isRange(p) ? p : new Range({ low: p }); });","            var result = new Array();","            ranges.forEach(function (range) {","                result = result.concat(_this.partitionKeyMap.filter(function (entry) {","                    return entry.range._intersect(range, _this.compareFunction);","                }));","            });","            return result;","        }","    }",");","//SCRIPT END","","if (typeof exports !== \"undefined\") {","    exports.Range = Range;","    exports.RangePartitionResolver = RangePartitionResolver;","}"],"l":{"26":1,"29":1,"38":0,"39":0,"41":0,"42":0,"44":0,"45":0,"47":0,"48":0,"50":0,"51":0,"52":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"82":0,"83":0,"86":0,"92":0,"93":0,"95":0,"100":0,"101":0,"103":0,"108":0,"109":0,"111":0,"112":0,"113":0,"114":0,"116":0,"121":0,"122":0,"123":0,"124":0,"125":0,"128":0,"129":0,"130":0,"133":0,"134":0,"140":0,"146":0,"147":0,"149":0,"150":0,"152":0,"153":0,"155":0,"160":1,"170":0,"171":0,"173":0,"174":0,"176":0,"177":0,"179":0,"180":0,"182":0,"183":0,"184":0,"186":0,"187":0,"189":0,"190":0,"192":0,"193":0,"195":0,"196":0,"198":0,"200":0,"201":0,"203":0,"204":0,"207":0,"208":0,"209":0,"219":0,"220":0,"222":0,"223":0,"225":0,"236":0,"237":0,"238":0,"239":0,"241":0,"252":0,"253":0,"256":0,"262":0,"263":0,"264":0,"265":0,"267":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"281":0,"287":1,"288":1,"289":1}},"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/Gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-documentdb/node_modules/documentdb/Gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":34}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":47,"column":2}},"2":{"start":{"line":27,"column":4},"end":{"line":27,"column":33}},"3":{"start":{"line":29,"column":4},"end":{"line":29,"column":39}},"4":{"start":{"line":31,"column":4},"end":{"line":43,"column":7}},"5":{"start":{"line":45,"column":4},"end":{"line":45,"column":43}},"6":{"start":{"line":46,"column":4},"end":{"line":46,"column":42}}},"branchMap":{},"code":["/*","The MIT License (MIT)","Copyright (c) 2014 Microsoft Corporation","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in all","copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE","SOFTWARE.","*/","","\"use strict\";","","module.exports = function (grunt) {","    require(\"time-grunt\")(grunt);","    // Load grunt tasks automatically","    require(\"load-grunt-tasks\")(grunt);","","    grunt.initConfig({","        eslint: {","            src: [","                \"lib/*.js\",","                \"lib/hash/*.js\",","                \"lib/queryExecutionContext/*.js\",","                \"lib/routing/*.js\",","                \"test/*.js\"],","            options: {","                configFile: \".eslintrc\"","            }","        }","    });","","    grunt.registerTask(\"lint\", [\"eslint\"]);","    grunt.registerTask(\"default\", \"lint\");","};"],"l":{"26":1,"27":0,"29":0,"31":0,"45":0,"46":0}}}